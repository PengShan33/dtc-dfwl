// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MotorVehicleObj.proto

package com.dtc.analytic.online.protobuf;

public final class MotorVehicleObjProto {
  private MotorVehicleObjProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MotorVehicleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.dtc.analytic.online.protobuf.MotorVehicle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *记录编号
     * </pre>
     *
     * <code>string recordId = 1;</code>
     * @return The recordId.
     */
    java.lang.String getRecordId();
    /**
     * <pre>
     *记录编号
     * </pre>
     *
     * <code>string recordId = 1;</code>
     * @return The bytes for recordId.
     */
    com.google.protobuf.ByteString
        getRecordIdBytes();

    /**
     * <pre>
     *业务ID
     * </pre>
     *
     * <code>string businessId = 2;</code>
     * @return The businessId.
     */
    java.lang.String getBusinessId();
    /**
     * <pre>
     *业务ID
     * </pre>
     *
     * <code>string businessId = 2;</code>
     * @return The bytes for businessId.
     */
    com.google.protobuf.ByteString
        getBusinessIdBytes();

    /**
     * <pre>
     *信息分类
     * </pre>
     *
     * <code>int32 infoKind = 3;</code>
     * @return The infoKind.
     */
    int getInfoKind();

    /**
     * <pre>
     *来源标识
     * </pre>
     *
     * <code>string sourceId = 4;</code>
     * @return The sourceId.
     */
    java.lang.String getSourceId();
    /**
     * <pre>
     *来源标识
     * </pre>
     *
     * <code>string sourceId = 4;</code>
     * @return The bytes for sourceId.
     */
    com.google.protobuf.ByteString
        getSourceIdBytes();

    /**
     * <pre>
     *近景照片
     * </pre>
     *
     * <code>string storageUrl1 = 5;</code>
     * @return The storageUrl1.
     */
    java.lang.String getStorageUrl1();
    /**
     * <pre>
     *近景照片
     * </pre>
     *
     * <code>string storageUrl1 = 5;</code>
     * @return The bytes for storageUrl1.
     */
    com.google.protobuf.ByteString
        getStorageUrl1Bytes();

    /**
     * <pre>
     *左上角X坐标(车体的轮廓外接矩形在画面中的位置)
     * </pre>
     *
     * <code>int32 leftTopX = 6;</code>
     * @return The leftTopX.
     */
    int getLeftTopX();

    /**
     * <pre>
     *左上角Y坐标(车体的轮廓外接矩形在画面中的位置)
     * </pre>
     *
     * <code>int32 leftTopY = 7;</code>
     * @return The leftTopY.
     */
    int getLeftTopY();

    /**
     * <pre>
     *右下角X坐标(车体的轮廓外接矩形在画面中的位置)
     * </pre>
     *
     * <code>int32 rightBtmX = 8;</code>
     * @return The rightBtmX.
     */
    int getRightBtmX();

    /**
     * <pre>
     *右下角Y坐标(车体的轮廓外接矩形在画面中的位置)
     * </pre>
     *
     * <code>int32 rightBtmY = 9;</code>
     * @return The rightBtmY.
     */
    int getRightBtmY();

    /**
     * <pre>
     *车牌左上角X坐标
     * </pre>
     *
     * <code>int32 plateLeftTopX = 10;</code>
     * @return The plateLeftTopX.
     */
    int getPlateLeftTopX();

    /**
     * <pre>
     *车牌左上角y坐标
     * </pre>
     *
     * <code>int32 plateLeftTopY = 11;</code>
     * @return The plateLeftTopY.
     */
    int getPlateLeftTopY();

    /**
     * <pre>
     *车牌右下角X坐标
     * </pre>
     *
     * <code>int32 plateRightBtmX = 12;</code>
     * @return The plateRightBtmX.
     */
    int getPlateRightBtmX();

    /**
     * <pre>
     *车牌右下角y坐标
     * </pre>
     *
     * <code>int32 plateRightBtmY = 13;</code>
     * @return The plateRightBtmY.
     */
    int getPlateRightBtmY();

    /**
     * <pre>
     *设备编号
     * </pre>
     *
     * <code>string deviceId = 14;</code>
     * @return The deviceId.
     */
    java.lang.String getDeviceId();
    /**
     * <pre>
     *设备编号
     * </pre>
     *
     * <code>string deviceId = 14;</code>
     * @return The bytes for deviceId.
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     *号牌号码
     * </pre>
     *
     * <code>string plateNo = 15;</code>
     * @return The plateNo.
     */
    java.lang.String getPlateNo();
    /**
     * <pre>
     *号牌号码
     * </pre>
     *
     * <code>string plateNo = 15;</code>
     * @return The bytes for plateNo.
     */
    com.google.protobuf.ByteString
        getPlateNoBytes();

    /**
     * <pre>
     *号牌置信度
     * </pre>
     *
     * <code>double plateNoConfidence = 16;</code>
     * @return The plateNoConfidence.
     */
    double getPlateNoConfidence();

    /**
     * <pre>
     *号牌种类
     * </pre>
     *
     * <code>string plateClass = 17;</code>
     * @return The plateClass.
     */
    java.lang.String getPlateClass();
    /**
     * <pre>
     *号牌种类
     * </pre>
     *
     * <code>string plateClass = 17;</code>
     * @return The bytes for plateClass.
     */
    com.google.protobuf.ByteString
        getPlateClassBytes();

    /**
     * <pre>
     *号牌颜色
     * </pre>
     *
     * <code>string plateColor = 18;</code>
     * @return The plateColor.
     */
    java.lang.String getPlateColor();
    /**
     * <pre>
     *号牌颜色
     * </pre>
     *
     * <code>string plateColor = 18;</code>
     * @return The bytes for plateColor.
     */
    com.google.protobuf.ByteString
        getPlateColorBytes();

    /**
     * <pre>
     *行驶状态
     * </pre>
     *
     * <code>string trafficStatus = 19;</code>
     * @return The trafficStatus.
     */
    java.lang.String getTrafficStatus();
    /**
     * <pre>
     *行驶状态
     * </pre>
     *
     * <code>string trafficStatus = 19;</code>
     * @return The bytes for trafficStatus.
     */
    com.google.protobuf.ByteString
        getTrafficStatusBytes();

    /**
     * <pre>
     *车辆类型
     * </pre>
     *
     * <code>string vehicleType = 20;</code>
     * @return The vehicleType.
     */
    java.lang.String getVehicleType();
    /**
     * <pre>
     *车辆类型
     * </pre>
     *
     * <code>string vehicleType = 20;</code>
     * @return The bytes for vehicleType.
     */
    com.google.protobuf.ByteString
        getVehicleTypeBytes();

    /**
     * <pre>
     *车身颜色
     * </pre>
     *
     * <code>string vehicleColor = 21;</code>
     * @return The vehicleColor.
     */
    java.lang.String getVehicleColor();
    /**
     * <pre>
     *车身颜色
     * </pre>
     *
     * <code>string vehicleColor = 21;</code>
     * @return The bytes for vehicleColor.
     */
    com.google.protobuf.ByteString
        getVehicleColorBytes();

    /**
     * <pre>
     *车辆品牌
     * </pre>
     *
     * <code>string vehicleBrand = 22;</code>
     * @return The vehicleBrand.
     */
    java.lang.String getVehicleBrand();
    /**
     * <pre>
     *车辆品牌
     * </pre>
     *
     * <code>string vehicleBrand = 22;</code>
     * @return The bytes for vehicleBrand.
     */
    com.google.protobuf.ByteString
        getVehicleBrandBytes();

    /**
     * <pre>
     *车辆品牌置信度
     * </pre>
     *
     * <code>double vehicleBrandConfidence = 23;</code>
     * @return The vehicleBrandConfidence.
     */
    double getVehicleBrandConfidence();

    /**
     * <pre>
     *车辆子品牌
     * </pre>
     *
     * <code>string vehicleSubBrand = 24;</code>
     * @return The vehicleSubBrand.
     */
    java.lang.String getVehicleSubBrand();
    /**
     * <pre>
     *车辆子品牌
     * </pre>
     *
     * <code>string vehicleSubBrand = 24;</code>
     * @return The bytes for vehicleSubBrand.
     */
    com.google.protobuf.ByteString
        getVehicleSubBrandBytes();

    /**
     * <pre>
     *车辆子品牌置信度
     * </pre>
     *
     * <code>double vehicleSubBrandConfidence = 25;</code>
     * @return The vehicleSubBrandConfidence.
     */
    double getVehicleSubBrandConfidence();

    /**
     * <pre>
     *人脸数
     * </pre>
     *
     * <code>int32 faceNum = 26;</code>
     * @return The faceNum.
     */
    int getFaceNum();

    /**
     * <pre>
     *遮阳板
     * </pre>
     *
     * <code>int32 sunVisor = 27;</code>
     * @return The sunVisor.
     */
    int getSunVisor();

    /**
     * <pre>
     *是否系安全带
     * </pre>
     *
     * <code>int32 seatBeltStatus = 28;</code>
     * @return The seatBeltStatus.
     */
    int getSeatBeltStatus();

    /**
     * <pre>
     *车辆年检标数
     * </pre>
     *
     * <code>int32 annualInspectionNum = 29;</code>
     * @return The annualInspectionNum.
     */
    int getAnnualInspectionNum();

    /**
     * <pre>
     *挂件个数
     * </pre>
     *
     * <code>int32 pendantsNum = 30;</code>
     * @return The pendantsNum.
     */
    int getPendantsNum();

    /**
     * <pre>
     *摆件个数
     * </pre>
     *
     * <code>int32 ornamentsNum = 31;</code>
     * @return The ornamentsNum.
     */
    int getOrnamentsNum();

    /**
     * <pre>
     *车辆年款
     * </pre>
     *
     * <code>string vehicleYear = 32;</code>
     * @return The vehicleYear.
     */
    java.lang.String getVehicleYear();
    /**
     * <pre>
     *车辆年款
     * </pre>
     *
     * <code>string vehicleYear = 32;</code>
     * @return The bytes for vehicleYear.
     */
    com.google.protobuf.ByteString
        getVehicleYearBytes();

    /**
     * <pre>
     *纸巾盒数
     * </pre>
     *
     * <code>int32 tissueBoxNum = 33;</code>
     * @return The tissueBoxNum.
     */
    int getTissueBoxNum();

    /**
     * <pre>
     *是否打电话
     * </pre>
     *
     * <code>int32 callStatus = 34;</code>
     * @return The callStatus.
     */
    int getCallStatus();

    /**
     * <pre>
     *违章类型
     * </pre>
     *
     * <code>string violationType = 35;</code>
     * @return The violationType.
     */
    java.lang.String getViolationType();
    /**
     * <pre>
     *违章类型
     * </pre>
     *
     * <code>string violationType = 35;</code>
     * @return The bytes for violationType.
     */
    com.google.protobuf.ByteString
        getViolationTypeBytes();

    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>string dataSource = 36;</code>
     * @return The dataSource.
     */
    java.lang.String getDataSource();
    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>string dataSource = 36;</code>
     * @return The bytes for dataSource.
     */
    com.google.protobuf.ByteString
        getDataSourceBytes();

    /**
     * <pre>
     *经过时间
     * </pre>
     *
     * <code>int64 elapsedTime = 37;</code>
     * @return The elapsedTime.
     */
    long getElapsedTime();

    /**
     * <pre>
     *数据入kafka时间
     * </pre>
     *
     * <code>int64 dataInKafkaTime = 38;</code>
     * @return The dataInKafkaTime.
     */
    long getDataInKafkaTime();

    /**
     * <pre>
     *入库时间
     * </pre>
     *
     * <code>int64 entryTime = 39;</code>
     * @return The entryTime.
     */
    long getEntryTime();

    /**
     * <pre>
     *车辆速度
     * </pre>
     *
     * <code>double vehicleSpeed = 40;</code>
     * @return The vehicleSpeed.
     */
    double getVehicleSpeed();

    /**
     * <pre>
     *标志物
     * </pre>
     *
     * <code>int32 markerType = 41;</code>
     * @return The markerType.
     */
    int getMarkerType();

    /**
     * <pre>
     *车头车尾
     * </pre>
     *
     * <code>int32 vehicleHeadend = 42;</code>
     * @return The vehicleHeadend.
     */
    int getVehicleHeadend();

    /**
     * <pre>
     *是否遮挡面部
     * </pre>
     *
     * <code>int32 shieldFace = 43;</code>
     * @return The shieldFace.
     */
    int getShieldFace();

    /**
     * <pre>
     *任务类型
     * </pre>
     *
     * <code>string taskType = 44;</code>
     * @return The taskType.
     */
    java.lang.String getTaskType();
    /**
     * <pre>
     *任务类型
     * </pre>
     *
     * <code>string taskType = 44;</code>
     * @return The bytes for taskType.
     */
    com.google.protobuf.ByteString
        getTaskTypeBytes();

    /**
     * <pre>
     *数据来源厂商
     * </pre>
     *
     * <code>string infoSource = 45;</code>
     * @return The infoSource.
     */
    java.lang.String getInfoSource();
    /**
     * <pre>
     *数据来源厂商
     * </pre>
     *
     * <code>string infoSource = 45;</code>
     * @return The bytes for infoSource.
     */
    com.google.protobuf.ByteString
        getInfoSourceBytes();

    /**
     * <pre>
     *算法版本
     * </pre>
     *
     * <code>string algorithmVersion = 46;</code>
     * @return The algorithmVersion.
     */
    java.lang.String getAlgorithmVersion();
    /**
     * <pre>
     *算法版本
     * </pre>
     *
     * <code>string algorithmVersion = 46;</code>
     * @return The bytes for algorithmVersion.
     */
    com.google.protobuf.ByteString
        getAlgorithmVersionBytes();

    /**
     * <pre>
     *算法厂商
     * </pre>
     *
     * <code>int32 algorithmVendor = 47;</code>
     * @return The algorithmVendor.
     */
    int getAlgorithmVendor();

    /**
     * <pre>
     *特征向量
     * </pre>
     *
     * <code>string eigenvector = 48;</code>
     * @return The eigenvector.
     */
    java.lang.String getEigenvector();
    /**
     * <pre>
     *特征向量
     * </pre>
     *
     * <code>string eigenvector = 48;</code>
     * @return The bytes for eigenvector.
     */
    com.google.protobuf.ByteString
        getEigenvectorBytes();

    /**
     * <pre>
     *是否二次结构化
     * </pre>
     *
     * <code>int32 isSecondaryStructure = 49;</code>
     * @return The isSecondaryStructure.
     */
    int getIsSecondaryStructure();

    /**
     * <pre>
     *结构化时间
     * </pre>
     *
     * <code>int64 structureTime = 50;</code>
     * @return The structureTime.
     */
    long getStructureTime();

    /**
     * <pre>
     *全目标关联关系ID
     * </pre>
     *
     * <code>string collectionId = 51;</code>
     * @return The collectionId.
     */
    java.lang.String getCollectionId();
    /**
     * <pre>
     *全目标关联关系ID
     * </pre>
     *
     * <code>string collectionId = 51;</code>
     * @return The bytes for collectionId.
     */
    com.google.protobuf.ByteString
        getCollectionIdBytes();

    /**
     * <pre>
     *渗透字段信息
     * </pre>
     *
     * <code>string additionalInfo = 52;</code>
     * @return The additionalInfo.
     */
    java.lang.String getAdditionalInfo();
    /**
     * <pre>
     *渗透字段信息
     * </pre>
     *
     * <code>string additionalInfo = 52;</code>
     * @return The bytes for additionalInfo.
     */
    com.google.protobuf.ByteString
        getAdditionalInfoBytes();

    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>int32 source = 53;</code>
     * @return The source.
     */
    int getSource();

    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>string drivewayNo = 54;</code>
     * @return The drivewayNo.
     */
    java.lang.String getDrivewayNo();
    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>string drivewayNo = 54;</code>
     * @return The bytes for drivewayNo.
     */
    com.google.protobuf.ByteString
        getDrivewayNoBytes();

    /**
     * <pre>
     *车辆位置
     * </pre>
     *
     * <code>string vehicleLocation = 55;</code>
     * @return The vehicleLocation.
     */
    java.lang.String getVehicleLocation();
    /**
     * <pre>
     *车辆位置
     * </pre>
     *
     * <code>string vehicleLocation = 55;</code>
     * @return The bytes for vehicleLocation.
     */
    com.google.protobuf.ByteString
        getVehicleLocationBytes();

    /**
     * <pre>
     *车牌位置
     * </pre>
     *
     * <code>string plateLocation = 56;</code>
     * @return The plateLocation.
     */
    java.lang.String getPlateLocation();
    /**
     * <pre>
     *车牌位置
     * </pre>
     *
     * <code>string plateLocation = 56;</code>
     * @return The bytes for plateLocation.
     */
    com.google.protobuf.ByteString
        getPlateLocationBytes();

    /**
     * <pre>
     *主驾遮阳板位置
     * </pre>
     *
     * <code>string mainVisorPosition = 57;</code>
     * @return The mainVisorPosition.
     */
    java.lang.String getMainVisorPosition();
    /**
     * <pre>
     *主驾遮阳板位置
     * </pre>
     *
     * <code>string mainVisorPosition = 57;</code>
     * @return The bytes for mainVisorPosition.
     */
    com.google.protobuf.ByteString
        getMainVisorPositionBytes();

    /**
     * <pre>
     *副驾遮阳板位置
     * </pre>
     *
     * <code>string viceVisorPosition = 58;</code>
     * @return The viceVisorPosition.
     */
    java.lang.String getViceVisorPosition();
    /**
     * <pre>
     *副驾遮阳板位置
     * </pre>
     *
     * <code>string viceVisorPosition = 58;</code>
     * @return The bytes for viceVisorPosition.
     */
    com.google.protobuf.ByteString
        getViceVisorPositionBytes();

    /**
     * <pre>
     *主驾安全带位置
     * </pre>
     *
     * <code>string mainSeatBeltPosition = 59;</code>
     * @return The mainSeatBeltPosition.
     */
    java.lang.String getMainSeatBeltPosition();
    /**
     * <pre>
     *主驾安全带位置
     * </pre>
     *
     * <code>string mainSeatBeltPosition = 59;</code>
     * @return The bytes for mainSeatBeltPosition.
     */
    com.google.protobuf.ByteString
        getMainSeatBeltPositionBytes();

    /**
     * <pre>
     *副驾安全带位置
     * </pre>
     *
     * <code>string viceSeatBeltPosition = 60;</code>
     * @return The viceSeatBeltPosition.
     */
    java.lang.String getViceSeatBeltPosition();
    /**
     * <pre>
     *副驾安全带位置
     * </pre>
     *
     * <code>string viceSeatBeltPosition = 60;</code>
     * @return The bytes for viceSeatBeltPosition.
     */
    com.google.protobuf.ByteString
        getViceSeatBeltPositionBytes();

    /**
     * <pre>
     *驾驶员开车打电话
     * </pre>
     *
     * <code>string drivingCall = 61;</code>
     * @return The drivingCall.
     */
    java.lang.String getDrivingCall();
    /**
     * <pre>
     *驾驶员开车打电话
     * </pre>
     *
     * <code>string drivingCall = 61;</code>
     * @return The bytes for drivingCall.
     */
    com.google.protobuf.ByteString
        getDrivingCallBytes();

    /**
     * <pre>
     *年检标位置
     * </pre>
     *
     * <code>string annualInspectionPosition = 62;</code>
     * @return The annualInspectionPosition.
     */
    java.lang.String getAnnualInspectionPosition();
    /**
     * <pre>
     *年检标位置
     * </pre>
     *
     * <code>string annualInspectionPosition = 62;</code>
     * @return The bytes for annualInspectionPosition.
     */
    com.google.protobuf.ByteString
        getAnnualInspectionPositionBytes();

    /**
     * <pre>
     *挂件位置
     * </pre>
     *
     * <code>string pendantLocation = 63;</code>
     * @return The pendantLocation.
     */
    java.lang.String getPendantLocation();
    /**
     * <pre>
     *挂件位置
     * </pre>
     *
     * <code>string pendantLocation = 63;</code>
     * @return The bytes for pendantLocation.
     */
    com.google.protobuf.ByteString
        getPendantLocationBytes();

    /**
     * <pre>
     *纸巾盒位置
     * </pre>
     *
     * <code>string tissueBoxLocation = 64;</code>
     * @return The tissueBoxLocation.
     */
    java.lang.String getTissueBoxLocation();
    /**
     * <pre>
     *纸巾盒位置
     * </pre>
     *
     * <code>string tissueBoxLocation = 64;</code>
     * @return The bytes for tissueBoxLocation.
     */
    com.google.protobuf.ByteString
        getTissueBoxLocationBytes();

    /**
     * <pre>
     *车牌图片
     * </pre>
     *
     * <code>string platePicUrl = 65;</code>
     * @return The platePicUrl.
     */
    java.lang.String getPlatePicUrl();
    /**
     * <pre>
     *车牌图片
     * </pre>
     *
     * <code>string platePicUrl = 65;</code>
     * @return The bytes for platePicUrl.
     */
    com.google.protobuf.ByteString
        getPlatePicUrlBytes();

    /**
     * <pre>
     *移动方向
     * </pre>
     *
     * <code>int32 moveDirection = 66;</code>
     * @return The moveDirection.
     */
    int getMoveDirection();

    /**
     * <pre>
     *特殊车辆
     * </pre>
     *
     * <code>int32 specialCar = 67;</code>
     * @return The specialCar.
     */
    int getSpecialCar();

    /**
     * <pre>
     *移动速度
     * </pre>
     *
     * <code>int32 moveSpeed = 68;</code>
     * @return The moveSpeed.
     */
    int getMoveSpeed();

    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    java.util.List<com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo> 
        getSubImageListList();
    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo getSubImageList(int index);
    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    int getSubImageListCount();
    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    java.util.List<? extends com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfoOrBuilder> 
        getSubImageListOrBuilderList();
    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfoOrBuilder getSubImageListOrBuilder(
        int index);

    /**
     * <pre>
     *二次识别次数
     * </pre>
     *
     * <code>int32 structureNum = 70;</code>
     * @return The structureNum.
     */
    int getStructureNum();

    /**
     * <pre>
     *接入时间
     * </pre>
     *
     * <code>int64 accessTime = 71;</code>
     * @return The accessTime.
     */
    long getAccessTime();

    /**
     * <pre>
     *有无车牌
     * </pre>
     *
     * <code>string hasPlate = 72;</code>
     * @return The hasPlate.
     */
    java.lang.String getHasPlate();
    /**
     * <pre>
     *有无车牌
     * </pre>
     *
     * <code>string hasPlate = 72;</code>
     * @return The bytes for hasPlate.
     */
    com.google.protobuf.ByteString
        getHasPlateBytes();

    /**
     * <pre>
     *二次结构化来源
     * </pre>
     *
     * <code>int32 structureSource = 73;</code>
     * @return The structureSource.
     */
    int getStructureSource();

    /**
     * <pre>
     *卡口ID
     * </pre>
     *
     * <code>string tollgateId = 74;</code>
     * @return The tollgateId.
     */
    java.lang.String getTollgateId();
    /**
     * <pre>
     *卡口ID
     * </pre>
     *
     * <code>string tollgateId = 74;</code>
     * @return The bytes for tollgateId.
     */
    com.google.protobuf.ByteString
        getTollgateIdBytes();

    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>int32 laneNO = 75;</code>
     * @return The laneNO.
     */
    int getLaneNO();

    /**
     * <pre>
     *整体置信度
     * </pre>
     *
     * <code>double WholeConfidence = 76;</code>
     * @return The wholeConfidence.
     */
    double getWholeConfidence();

    /**
     * <pre>
     *主驾开车打电话置信度
     * </pre>
     *
     * <code>double DriverPhoneConfidence = 77;</code>
     * @return The driverPhoneConfidence.
     */
    double getDriverPhoneConfidence();

    /**
     * <pre>
     *副驾开车打电话置信度
     * </pre>
     *
     * <code>double DeputyDriverPhoneConfidence = 78;</code>
     * @return The deputyDriverPhoneConfidence.
     */
    double getDeputyDriverPhoneConfidence();

    /**
     * <pre>
     *副驾安全带置信度
     * </pre>
     *
     * <code>double DriverSeatBeltConfidence = 79;</code>
     * @return The driverSeatBeltConfidence.
     */
    double getDriverSeatBeltConfidence();

    /**
     * <pre>
     *主驾安全带置信度
     * </pre>
     *
     * <code>double DeputyDriverSeatBeltConfidence = 80;</code>
     * @return The deputyDriverSeatBeltConfidence.
     */
    double getDeputyDriverSeatBeltConfidence();

    /**
     * <pre>
     *车顶物件
     * </pre>
     *
     * <code>int32 roofItems = 81;</code>
     * @return The roofItems.
     */
    int getRoofItems();

    /**
     * <pre>
     *车牌遮挡
     * </pre>
     *
     * <code>int32 plateOcclusion = 82;</code>
     * @return The plateOcclusion.
     */
    int getPlateOcclusion();

    /**
     * <pre>
     *面部遮挡
     * </pre>
     *
     * <code>int32 facialOcclusion = 83;</code>
     * @return The facialOcclusion.
     */
    int getFacialOcclusion();

    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>string Ext = 84;</code>
     * @return The ext.
     */
    java.lang.String getExt();
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>string Ext = 84;</code>
     * @return The bytes for ext.
     */
    com.google.protobuf.ByteString
        getExtBytes();

    /**
     * <pre>
     *关联对象类型
     * </pre>
     *
     * <code>string relatedType = 85;</code>
     * @return The relatedType.
     */
    java.lang.String getRelatedType();
    /**
     * <pre>
     *关联对象类型
     * </pre>
     *
     * <code>string relatedType = 85;</code>
     * @return The bytes for relatedType.
     */
    com.google.protobuf.ByteString
        getRelatedTypeBytes();

    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    java.util.List<com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo> 
        getRelatedListList();
    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo getRelatedList(int index);
    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    int getRelatedListCount();
    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    java.util.List<? extends com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfoOrBuilder> 
        getRelatedListOrBuilderList();
    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfoOrBuilder getRelatedListOrBuilder(
        int index);

    /**
     * <pre>
     *设备经度【固定点位设备可选填，移动设备必填】
     * </pre>
     *
     * <code>double Longitude = 87;</code>
     * @return The longitude.
     */
    double getLongitude();

    /**
     * <pre>
     *设备纬度【固定点位设备可选填，移动设备必填】
     * </pre>
     *
     * <code>double Latitude = 88;</code>
     * @return The latitude.
     */
    double getLatitude();

    /**
     * <pre>
     *标记
     * </pre>
     *
     * <code>int32 dataMarks = 89;</code>
     * @return The dataMarks.
     */
    int getDataMarks();

    /**
     * <pre>
     *非机动车轨迹
     * </pre>
     *
     * <code>string traceInfo = 90;</code>
     * @return The traceInfo.
     */
    java.lang.String getTraceInfo();
    /**
     * <pre>
     *非机动车轨迹
     * </pre>
     *
     * <code>string traceInfo = 90;</code>
     * @return The bytes for traceInfo.
     */
    com.google.protobuf.ByteString
        getTraceInfoBytes();

    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>map&lt;string, string&gt; extMaps = 91;</code>
     */
    int getExtMapsCount();
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>map&lt;string, string&gt; extMaps = 91;</code>
     */
    boolean containsExtMaps(
        java.lang.String key);
    /**
     * Use {@link #getExtMapsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getExtMaps();
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>map&lt;string, string&gt; extMaps = 91;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getExtMapsMap();
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>map&lt;string, string&gt; extMaps = 91;</code>
     */

    java.lang.String getExtMapsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>map&lt;string, string&gt; extMaps = 91;</code>
     */

    java.lang.String getExtMapsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * 机动车对象
   * </pre>
   *
   * Protobuf type {@code com.dtc.analytic.online.protobuf.MotorVehicle}
   */
  public  static final class MotorVehicle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.dtc.analytic.online.protobuf.MotorVehicle)
      MotorVehicleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MotorVehicle.newBuilder() to construct.
    private MotorVehicle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MotorVehicle() {
      recordId_ = "";
      businessId_ = "";
      sourceId_ = "";
      storageUrl1_ = "";
      deviceId_ = "";
      plateNo_ = "";
      plateClass_ = "";
      plateColor_ = "";
      trafficStatus_ = "";
      vehicleType_ = "";
      vehicleColor_ = "";
      vehicleBrand_ = "";
      vehicleSubBrand_ = "";
      vehicleYear_ = "";
      violationType_ = "";
      dataSource_ = "";
      taskType_ = "";
      infoSource_ = "";
      algorithmVersion_ = "";
      eigenvector_ = "";
      collectionId_ = "";
      additionalInfo_ = "";
      drivewayNo_ = "";
      vehicleLocation_ = "";
      plateLocation_ = "";
      mainVisorPosition_ = "";
      viceVisorPosition_ = "";
      mainSeatBeltPosition_ = "";
      viceSeatBeltPosition_ = "";
      drivingCall_ = "";
      annualInspectionPosition_ = "";
      pendantLocation_ = "";
      tissueBoxLocation_ = "";
      platePicUrl_ = "";
      subImageList_ = java.util.Collections.emptyList();
      hasPlate_ = "";
      tollgateId_ = "";
      ext_ = "";
      relatedType_ = "";
      relatedList_ = java.util.Collections.emptyList();
      traceInfo_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MotorVehicle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MotorVehicle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              recordId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              businessId_ = s;
              break;
            }
            case 24: {

              infoKind_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              sourceId_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              storageUrl1_ = s;
              break;
            }
            case 48: {

              leftTopX_ = input.readInt32();
              break;
            }
            case 56: {

              leftTopY_ = input.readInt32();
              break;
            }
            case 64: {

              rightBtmX_ = input.readInt32();
              break;
            }
            case 72: {

              rightBtmY_ = input.readInt32();
              break;
            }
            case 80: {

              plateLeftTopX_ = input.readInt32();
              break;
            }
            case 88: {

              plateLeftTopY_ = input.readInt32();
              break;
            }
            case 96: {

              plateRightBtmX_ = input.readInt32();
              break;
            }
            case 104: {

              plateRightBtmY_ = input.readInt32();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              plateNo_ = s;
              break;
            }
            case 129: {

              plateNoConfidence_ = input.readDouble();
              break;
            }
            case 138: {
              java.lang.String s = input.readStringRequireUtf8();

              plateClass_ = s;
              break;
            }
            case 146: {
              java.lang.String s = input.readStringRequireUtf8();

              plateColor_ = s;
              break;
            }
            case 154: {
              java.lang.String s = input.readStringRequireUtf8();

              trafficStatus_ = s;
              break;
            }
            case 162: {
              java.lang.String s = input.readStringRequireUtf8();

              vehicleType_ = s;
              break;
            }
            case 170: {
              java.lang.String s = input.readStringRequireUtf8();

              vehicleColor_ = s;
              break;
            }
            case 178: {
              java.lang.String s = input.readStringRequireUtf8();

              vehicleBrand_ = s;
              break;
            }
            case 185: {

              vehicleBrandConfidence_ = input.readDouble();
              break;
            }
            case 194: {
              java.lang.String s = input.readStringRequireUtf8();

              vehicleSubBrand_ = s;
              break;
            }
            case 201: {

              vehicleSubBrandConfidence_ = input.readDouble();
              break;
            }
            case 208: {

              faceNum_ = input.readInt32();
              break;
            }
            case 216: {

              sunVisor_ = input.readInt32();
              break;
            }
            case 224: {

              seatBeltStatus_ = input.readInt32();
              break;
            }
            case 232: {

              annualInspectionNum_ = input.readInt32();
              break;
            }
            case 240: {

              pendantsNum_ = input.readInt32();
              break;
            }
            case 248: {

              ornamentsNum_ = input.readInt32();
              break;
            }
            case 258: {
              java.lang.String s = input.readStringRequireUtf8();

              vehicleYear_ = s;
              break;
            }
            case 264: {

              tissueBoxNum_ = input.readInt32();
              break;
            }
            case 272: {

              callStatus_ = input.readInt32();
              break;
            }
            case 282: {
              java.lang.String s = input.readStringRequireUtf8();

              violationType_ = s;
              break;
            }
            case 290: {
              java.lang.String s = input.readStringRequireUtf8();

              dataSource_ = s;
              break;
            }
            case 296: {

              elapsedTime_ = input.readInt64();
              break;
            }
            case 304: {

              dataInKafkaTime_ = input.readInt64();
              break;
            }
            case 312: {

              entryTime_ = input.readInt64();
              break;
            }
            case 321: {

              vehicleSpeed_ = input.readDouble();
              break;
            }
            case 328: {

              markerType_ = input.readInt32();
              break;
            }
            case 336: {

              vehicleHeadend_ = input.readInt32();
              break;
            }
            case 344: {

              shieldFace_ = input.readInt32();
              break;
            }
            case 354: {
              java.lang.String s = input.readStringRequireUtf8();

              taskType_ = s;
              break;
            }
            case 362: {
              java.lang.String s = input.readStringRequireUtf8();

              infoSource_ = s;
              break;
            }
            case 370: {
              java.lang.String s = input.readStringRequireUtf8();

              algorithmVersion_ = s;
              break;
            }
            case 376: {

              algorithmVendor_ = input.readInt32();
              break;
            }
            case 386: {
              java.lang.String s = input.readStringRequireUtf8();

              eigenvector_ = s;
              break;
            }
            case 392: {

              isSecondaryStructure_ = input.readInt32();
              break;
            }
            case 400: {

              structureTime_ = input.readInt64();
              break;
            }
            case 410: {
              java.lang.String s = input.readStringRequireUtf8();

              collectionId_ = s;
              break;
            }
            case 418: {
              java.lang.String s = input.readStringRequireUtf8();

              additionalInfo_ = s;
              break;
            }
            case 424: {

              source_ = input.readInt32();
              break;
            }
            case 434: {
              java.lang.String s = input.readStringRequireUtf8();

              drivewayNo_ = s;
              break;
            }
            case 442: {
              java.lang.String s = input.readStringRequireUtf8();

              vehicleLocation_ = s;
              break;
            }
            case 450: {
              java.lang.String s = input.readStringRequireUtf8();

              plateLocation_ = s;
              break;
            }
            case 458: {
              java.lang.String s = input.readStringRequireUtf8();

              mainVisorPosition_ = s;
              break;
            }
            case 466: {
              java.lang.String s = input.readStringRequireUtf8();

              viceVisorPosition_ = s;
              break;
            }
            case 474: {
              java.lang.String s = input.readStringRequireUtf8();

              mainSeatBeltPosition_ = s;
              break;
            }
            case 482: {
              java.lang.String s = input.readStringRequireUtf8();

              viceSeatBeltPosition_ = s;
              break;
            }
            case 490: {
              java.lang.String s = input.readStringRequireUtf8();

              drivingCall_ = s;
              break;
            }
            case 498: {
              java.lang.String s = input.readStringRequireUtf8();

              annualInspectionPosition_ = s;
              break;
            }
            case 506: {
              java.lang.String s = input.readStringRequireUtf8();

              pendantLocation_ = s;
              break;
            }
            case 514: {
              java.lang.String s = input.readStringRequireUtf8();

              tissueBoxLocation_ = s;
              break;
            }
            case 522: {
              java.lang.String s = input.readStringRequireUtf8();

              platePicUrl_ = s;
              break;
            }
            case 528: {

              moveDirection_ = input.readInt32();
              break;
            }
            case 536: {

              specialCar_ = input.readInt32();
              break;
            }
            case 544: {

              moveSpeed_ = input.readInt32();
              break;
            }
            case 554: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                subImageList_ = new java.util.ArrayList<com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              subImageList_.add(
                  input.readMessage(com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.parser(), extensionRegistry));
              break;
            }
            case 560: {

              structureNum_ = input.readInt32();
              break;
            }
            case 568: {

              accessTime_ = input.readInt64();
              break;
            }
            case 578: {
              java.lang.String s = input.readStringRequireUtf8();

              hasPlate_ = s;
              break;
            }
            case 584: {

              structureSource_ = input.readInt32();
              break;
            }
            case 594: {
              java.lang.String s = input.readStringRequireUtf8();

              tollgateId_ = s;
              break;
            }
            case 600: {

              laneNO_ = input.readInt32();
              break;
            }
            case 609: {

              wholeConfidence_ = input.readDouble();
              break;
            }
            case 617: {

              driverPhoneConfidence_ = input.readDouble();
              break;
            }
            case 625: {

              deputyDriverPhoneConfidence_ = input.readDouble();
              break;
            }
            case 633: {

              driverSeatBeltConfidence_ = input.readDouble();
              break;
            }
            case 641: {

              deputyDriverSeatBeltConfidence_ = input.readDouble();
              break;
            }
            case 648: {

              roofItems_ = input.readInt32();
              break;
            }
            case 656: {

              plateOcclusion_ = input.readInt32();
              break;
            }
            case 664: {

              facialOcclusion_ = input.readInt32();
              break;
            }
            case 674: {
              java.lang.String s = input.readStringRequireUtf8();

              ext_ = s;
              break;
            }
            case 682: {
              java.lang.String s = input.readStringRequireUtf8();

              relatedType_ = s;
              break;
            }
            case 690: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                relatedList_ = new java.util.ArrayList<com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              relatedList_.add(
                  input.readMessage(com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.parser(), extensionRegistry));
              break;
            }
            case 697: {

              longitude_ = input.readDouble();
              break;
            }
            case 705: {

              latitude_ = input.readDouble();
              break;
            }
            case 712: {

              dataMarks_ = input.readInt32();
              break;
            }
            case 722: {
              java.lang.String s = input.readStringRequireUtf8();

              traceInfo_ = s;
              break;
            }
            case 730: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                extMaps_ = com.google.protobuf.MapField.newMapField(
                    ExtMapsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              extMaps__ = input.readMessage(
                  ExtMapsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              extMaps_.getMutableMap().put(
                  extMaps__.getKey(), extMaps__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          subImageList_ = java.util.Collections.unmodifiableList(subImageList_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          relatedList_ = java.util.Collections.unmodifiableList(relatedList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 91:
          return internalGetExtMaps();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.class, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder.class);
    }

    public static final int RECORDID_FIELD_NUMBER = 1;
    private volatile java.lang.Object recordId_;
    /**
     * <pre>
     *记录编号
     * </pre>
     *
     * <code>string recordId = 1;</code>
     * @return The recordId.
     */
    public java.lang.String getRecordId() {
      java.lang.Object ref = recordId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        recordId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *记录编号
     * </pre>
     *
     * <code>string recordId = 1;</code>
     * @return The bytes for recordId.
     */
    public com.google.protobuf.ByteString
        getRecordIdBytes() {
      java.lang.Object ref = recordId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        recordId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BUSINESSID_FIELD_NUMBER = 2;
    private volatile java.lang.Object businessId_;
    /**
     * <pre>
     *业务ID
     * </pre>
     *
     * <code>string businessId = 2;</code>
     * @return The businessId.
     */
    public java.lang.String getBusinessId() {
      java.lang.Object ref = businessId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        businessId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务ID
     * </pre>
     *
     * <code>string businessId = 2;</code>
     * @return The bytes for businessId.
     */
    public com.google.protobuf.ByteString
        getBusinessIdBytes() {
      java.lang.Object ref = businessId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        businessId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INFOKIND_FIELD_NUMBER = 3;
    private int infoKind_;
    /**
     * <pre>
     *信息分类
     * </pre>
     *
     * <code>int32 infoKind = 3;</code>
     * @return The infoKind.
     */
    public int getInfoKind() {
      return infoKind_;
    }

    public static final int SOURCEID_FIELD_NUMBER = 4;
    private volatile java.lang.Object sourceId_;
    /**
     * <pre>
     *来源标识
     * </pre>
     *
     * <code>string sourceId = 4;</code>
     * @return The sourceId.
     */
    public java.lang.String getSourceId() {
      java.lang.Object ref = sourceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sourceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *来源标识
     * </pre>
     *
     * <code>string sourceId = 4;</code>
     * @return The bytes for sourceId.
     */
    public com.google.protobuf.ByteString
        getSourceIdBytes() {
      java.lang.Object ref = sourceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STORAGEURL1_FIELD_NUMBER = 5;
    private volatile java.lang.Object storageUrl1_;
    /**
     * <pre>
     *近景照片
     * </pre>
     *
     * <code>string storageUrl1 = 5;</code>
     * @return The storageUrl1.
     */
    public java.lang.String getStorageUrl1() {
      java.lang.Object ref = storageUrl1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        storageUrl1_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *近景照片
     * </pre>
     *
     * <code>string storageUrl1 = 5;</code>
     * @return The bytes for storageUrl1.
     */
    public com.google.protobuf.ByteString
        getStorageUrl1Bytes() {
      java.lang.Object ref = storageUrl1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        storageUrl1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEFTTOPX_FIELD_NUMBER = 6;
    private int leftTopX_;
    /**
     * <pre>
     *左上角X坐标(车体的轮廓外接矩形在画面中的位置)
     * </pre>
     *
     * <code>int32 leftTopX = 6;</code>
     * @return The leftTopX.
     */
    public int getLeftTopX() {
      return leftTopX_;
    }

    public static final int LEFTTOPY_FIELD_NUMBER = 7;
    private int leftTopY_;
    /**
     * <pre>
     *左上角Y坐标(车体的轮廓外接矩形在画面中的位置)
     * </pre>
     *
     * <code>int32 leftTopY = 7;</code>
     * @return The leftTopY.
     */
    public int getLeftTopY() {
      return leftTopY_;
    }

    public static final int RIGHTBTMX_FIELD_NUMBER = 8;
    private int rightBtmX_;
    /**
     * <pre>
     *右下角X坐标(车体的轮廓外接矩形在画面中的位置)
     * </pre>
     *
     * <code>int32 rightBtmX = 8;</code>
     * @return The rightBtmX.
     */
    public int getRightBtmX() {
      return rightBtmX_;
    }

    public static final int RIGHTBTMY_FIELD_NUMBER = 9;
    private int rightBtmY_;
    /**
     * <pre>
     *右下角Y坐标(车体的轮廓外接矩形在画面中的位置)
     * </pre>
     *
     * <code>int32 rightBtmY = 9;</code>
     * @return The rightBtmY.
     */
    public int getRightBtmY() {
      return rightBtmY_;
    }

    public static final int PLATELEFTTOPX_FIELD_NUMBER = 10;
    private int plateLeftTopX_;
    /**
     * <pre>
     *车牌左上角X坐标
     * </pre>
     *
     * <code>int32 plateLeftTopX = 10;</code>
     * @return The plateLeftTopX.
     */
    public int getPlateLeftTopX() {
      return plateLeftTopX_;
    }

    public static final int PLATELEFTTOPY_FIELD_NUMBER = 11;
    private int plateLeftTopY_;
    /**
     * <pre>
     *车牌左上角y坐标
     * </pre>
     *
     * <code>int32 plateLeftTopY = 11;</code>
     * @return The plateLeftTopY.
     */
    public int getPlateLeftTopY() {
      return plateLeftTopY_;
    }

    public static final int PLATERIGHTBTMX_FIELD_NUMBER = 12;
    private int plateRightBtmX_;
    /**
     * <pre>
     *车牌右下角X坐标
     * </pre>
     *
     * <code>int32 plateRightBtmX = 12;</code>
     * @return The plateRightBtmX.
     */
    public int getPlateRightBtmX() {
      return plateRightBtmX_;
    }

    public static final int PLATERIGHTBTMY_FIELD_NUMBER = 13;
    private int plateRightBtmY_;
    /**
     * <pre>
     *车牌右下角y坐标
     * </pre>
     *
     * <code>int32 plateRightBtmY = 13;</code>
     * @return The plateRightBtmY.
     */
    public int getPlateRightBtmY() {
      return plateRightBtmY_;
    }

    public static final int DEVICEID_FIELD_NUMBER = 14;
    private volatile java.lang.Object deviceId_;
    /**
     * <pre>
     *设备编号
     * </pre>
     *
     * <code>string deviceId = 14;</code>
     * @return The deviceId.
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *设备编号
     * </pre>
     *
     * <code>string deviceId = 14;</code>
     * @return The bytes for deviceId.
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATENO_FIELD_NUMBER = 15;
    private volatile java.lang.Object plateNo_;
    /**
     * <pre>
     *号牌号码
     * </pre>
     *
     * <code>string plateNo = 15;</code>
     * @return The plateNo.
     */
    public java.lang.String getPlateNo() {
      java.lang.Object ref = plateNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        plateNo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *号牌号码
     * </pre>
     *
     * <code>string plateNo = 15;</code>
     * @return The bytes for plateNo.
     */
    public com.google.protobuf.ByteString
        getPlateNoBytes() {
      java.lang.Object ref = plateNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plateNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATENOCONFIDENCE_FIELD_NUMBER = 16;
    private double plateNoConfidence_;
    /**
     * <pre>
     *号牌置信度
     * </pre>
     *
     * <code>double plateNoConfidence = 16;</code>
     * @return The plateNoConfidence.
     */
    public double getPlateNoConfidence() {
      return plateNoConfidence_;
    }

    public static final int PLATECLASS_FIELD_NUMBER = 17;
    private volatile java.lang.Object plateClass_;
    /**
     * <pre>
     *号牌种类
     * </pre>
     *
     * <code>string plateClass = 17;</code>
     * @return The plateClass.
     */
    public java.lang.String getPlateClass() {
      java.lang.Object ref = plateClass_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        plateClass_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *号牌种类
     * </pre>
     *
     * <code>string plateClass = 17;</code>
     * @return The bytes for plateClass.
     */
    public com.google.protobuf.ByteString
        getPlateClassBytes() {
      java.lang.Object ref = plateClass_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plateClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATECOLOR_FIELD_NUMBER = 18;
    private volatile java.lang.Object plateColor_;
    /**
     * <pre>
     *号牌颜色
     * </pre>
     *
     * <code>string plateColor = 18;</code>
     * @return The plateColor.
     */
    public java.lang.String getPlateColor() {
      java.lang.Object ref = plateColor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        plateColor_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *号牌颜色
     * </pre>
     *
     * <code>string plateColor = 18;</code>
     * @return The bytes for plateColor.
     */
    public com.google.protobuf.ByteString
        getPlateColorBytes() {
      java.lang.Object ref = plateColor_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plateColor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRAFFICSTATUS_FIELD_NUMBER = 19;
    private volatile java.lang.Object trafficStatus_;
    /**
     * <pre>
     *行驶状态
     * </pre>
     *
     * <code>string trafficStatus = 19;</code>
     * @return The trafficStatus.
     */
    public java.lang.String getTrafficStatus() {
      java.lang.Object ref = trafficStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        trafficStatus_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *行驶状态
     * </pre>
     *
     * <code>string trafficStatus = 19;</code>
     * @return The bytes for trafficStatus.
     */
    public com.google.protobuf.ByteString
        getTrafficStatusBytes() {
      java.lang.Object ref = trafficStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trafficStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VEHICLETYPE_FIELD_NUMBER = 20;
    private volatile java.lang.Object vehicleType_;
    /**
     * <pre>
     *车辆类型
     * </pre>
     *
     * <code>string vehicleType = 20;</code>
     * @return The vehicleType.
     */
    public java.lang.String getVehicleType() {
      java.lang.Object ref = vehicleType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vehicleType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车辆类型
     * </pre>
     *
     * <code>string vehicleType = 20;</code>
     * @return The bytes for vehicleType.
     */
    public com.google.protobuf.ByteString
        getVehicleTypeBytes() {
      java.lang.Object ref = vehicleType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vehicleType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VEHICLECOLOR_FIELD_NUMBER = 21;
    private volatile java.lang.Object vehicleColor_;
    /**
     * <pre>
     *车身颜色
     * </pre>
     *
     * <code>string vehicleColor = 21;</code>
     * @return The vehicleColor.
     */
    public java.lang.String getVehicleColor() {
      java.lang.Object ref = vehicleColor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vehicleColor_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车身颜色
     * </pre>
     *
     * <code>string vehicleColor = 21;</code>
     * @return The bytes for vehicleColor.
     */
    public com.google.protobuf.ByteString
        getVehicleColorBytes() {
      java.lang.Object ref = vehicleColor_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vehicleColor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VEHICLEBRAND_FIELD_NUMBER = 22;
    private volatile java.lang.Object vehicleBrand_;
    /**
     * <pre>
     *车辆品牌
     * </pre>
     *
     * <code>string vehicleBrand = 22;</code>
     * @return The vehicleBrand.
     */
    public java.lang.String getVehicleBrand() {
      java.lang.Object ref = vehicleBrand_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vehicleBrand_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车辆品牌
     * </pre>
     *
     * <code>string vehicleBrand = 22;</code>
     * @return The bytes for vehicleBrand.
     */
    public com.google.protobuf.ByteString
        getVehicleBrandBytes() {
      java.lang.Object ref = vehicleBrand_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vehicleBrand_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VEHICLEBRANDCONFIDENCE_FIELD_NUMBER = 23;
    private double vehicleBrandConfidence_;
    /**
     * <pre>
     *车辆品牌置信度
     * </pre>
     *
     * <code>double vehicleBrandConfidence = 23;</code>
     * @return The vehicleBrandConfidence.
     */
    public double getVehicleBrandConfidence() {
      return vehicleBrandConfidence_;
    }

    public static final int VEHICLESUBBRAND_FIELD_NUMBER = 24;
    private volatile java.lang.Object vehicleSubBrand_;
    /**
     * <pre>
     *车辆子品牌
     * </pre>
     *
     * <code>string vehicleSubBrand = 24;</code>
     * @return The vehicleSubBrand.
     */
    public java.lang.String getVehicleSubBrand() {
      java.lang.Object ref = vehicleSubBrand_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vehicleSubBrand_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车辆子品牌
     * </pre>
     *
     * <code>string vehicleSubBrand = 24;</code>
     * @return The bytes for vehicleSubBrand.
     */
    public com.google.protobuf.ByteString
        getVehicleSubBrandBytes() {
      java.lang.Object ref = vehicleSubBrand_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vehicleSubBrand_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VEHICLESUBBRANDCONFIDENCE_FIELD_NUMBER = 25;
    private double vehicleSubBrandConfidence_;
    /**
     * <pre>
     *车辆子品牌置信度
     * </pre>
     *
     * <code>double vehicleSubBrandConfidence = 25;</code>
     * @return The vehicleSubBrandConfidence.
     */
    public double getVehicleSubBrandConfidence() {
      return vehicleSubBrandConfidence_;
    }

    public static final int FACENUM_FIELD_NUMBER = 26;
    private int faceNum_;
    /**
     * <pre>
     *人脸数
     * </pre>
     *
     * <code>int32 faceNum = 26;</code>
     * @return The faceNum.
     */
    public int getFaceNum() {
      return faceNum_;
    }

    public static final int SUNVISOR_FIELD_NUMBER = 27;
    private int sunVisor_;
    /**
     * <pre>
     *遮阳板
     * </pre>
     *
     * <code>int32 sunVisor = 27;</code>
     * @return The sunVisor.
     */
    public int getSunVisor() {
      return sunVisor_;
    }

    public static final int SEATBELTSTATUS_FIELD_NUMBER = 28;
    private int seatBeltStatus_;
    /**
     * <pre>
     *是否系安全带
     * </pre>
     *
     * <code>int32 seatBeltStatus = 28;</code>
     * @return The seatBeltStatus.
     */
    public int getSeatBeltStatus() {
      return seatBeltStatus_;
    }

    public static final int ANNUALINSPECTIONNUM_FIELD_NUMBER = 29;
    private int annualInspectionNum_;
    /**
     * <pre>
     *车辆年检标数
     * </pre>
     *
     * <code>int32 annualInspectionNum = 29;</code>
     * @return The annualInspectionNum.
     */
    public int getAnnualInspectionNum() {
      return annualInspectionNum_;
    }

    public static final int PENDANTSNUM_FIELD_NUMBER = 30;
    private int pendantsNum_;
    /**
     * <pre>
     *挂件个数
     * </pre>
     *
     * <code>int32 pendantsNum = 30;</code>
     * @return The pendantsNum.
     */
    public int getPendantsNum() {
      return pendantsNum_;
    }

    public static final int ORNAMENTSNUM_FIELD_NUMBER = 31;
    private int ornamentsNum_;
    /**
     * <pre>
     *摆件个数
     * </pre>
     *
     * <code>int32 ornamentsNum = 31;</code>
     * @return The ornamentsNum.
     */
    public int getOrnamentsNum() {
      return ornamentsNum_;
    }

    public static final int VEHICLEYEAR_FIELD_NUMBER = 32;
    private volatile java.lang.Object vehicleYear_;
    /**
     * <pre>
     *车辆年款
     * </pre>
     *
     * <code>string vehicleYear = 32;</code>
     * @return The vehicleYear.
     */
    public java.lang.String getVehicleYear() {
      java.lang.Object ref = vehicleYear_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vehicleYear_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车辆年款
     * </pre>
     *
     * <code>string vehicleYear = 32;</code>
     * @return The bytes for vehicleYear.
     */
    public com.google.protobuf.ByteString
        getVehicleYearBytes() {
      java.lang.Object ref = vehicleYear_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vehicleYear_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TISSUEBOXNUM_FIELD_NUMBER = 33;
    private int tissueBoxNum_;
    /**
     * <pre>
     *纸巾盒数
     * </pre>
     *
     * <code>int32 tissueBoxNum = 33;</code>
     * @return The tissueBoxNum.
     */
    public int getTissueBoxNum() {
      return tissueBoxNum_;
    }

    public static final int CALLSTATUS_FIELD_NUMBER = 34;
    private int callStatus_;
    /**
     * <pre>
     *是否打电话
     * </pre>
     *
     * <code>int32 callStatus = 34;</code>
     * @return The callStatus.
     */
    public int getCallStatus() {
      return callStatus_;
    }

    public static final int VIOLATIONTYPE_FIELD_NUMBER = 35;
    private volatile java.lang.Object violationType_;
    /**
     * <pre>
     *违章类型
     * </pre>
     *
     * <code>string violationType = 35;</code>
     * @return The violationType.
     */
    public java.lang.String getViolationType() {
      java.lang.Object ref = violationType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        violationType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *违章类型
     * </pre>
     *
     * <code>string violationType = 35;</code>
     * @return The bytes for violationType.
     */
    public com.google.protobuf.ByteString
        getViolationTypeBytes() {
      java.lang.Object ref = violationType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        violationType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATASOURCE_FIELD_NUMBER = 36;
    private volatile java.lang.Object dataSource_;
    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>string dataSource = 36;</code>
     * @return The dataSource.
     */
    public java.lang.String getDataSource() {
      java.lang.Object ref = dataSource_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataSource_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>string dataSource = 36;</code>
     * @return The bytes for dataSource.
     */
    public com.google.protobuf.ByteString
        getDataSourceBytes() {
      java.lang.Object ref = dataSource_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataSource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ELAPSEDTIME_FIELD_NUMBER = 37;
    private long elapsedTime_;
    /**
     * <pre>
     *经过时间
     * </pre>
     *
     * <code>int64 elapsedTime = 37;</code>
     * @return The elapsedTime.
     */
    public long getElapsedTime() {
      return elapsedTime_;
    }

    public static final int DATAINKAFKATIME_FIELD_NUMBER = 38;
    private long dataInKafkaTime_;
    /**
     * <pre>
     *数据入kafka时间
     * </pre>
     *
     * <code>int64 dataInKafkaTime = 38;</code>
     * @return The dataInKafkaTime.
     */
    public long getDataInKafkaTime() {
      return dataInKafkaTime_;
    }

    public static final int ENTRYTIME_FIELD_NUMBER = 39;
    private long entryTime_;
    /**
     * <pre>
     *入库时间
     * </pre>
     *
     * <code>int64 entryTime = 39;</code>
     * @return The entryTime.
     */
    public long getEntryTime() {
      return entryTime_;
    }

    public static final int VEHICLESPEED_FIELD_NUMBER = 40;
    private double vehicleSpeed_;
    /**
     * <pre>
     *车辆速度
     * </pre>
     *
     * <code>double vehicleSpeed = 40;</code>
     * @return The vehicleSpeed.
     */
    public double getVehicleSpeed() {
      return vehicleSpeed_;
    }

    public static final int MARKERTYPE_FIELD_NUMBER = 41;
    private int markerType_;
    /**
     * <pre>
     *标志物
     * </pre>
     *
     * <code>int32 markerType = 41;</code>
     * @return The markerType.
     */
    public int getMarkerType() {
      return markerType_;
    }

    public static final int VEHICLEHEADEND_FIELD_NUMBER = 42;
    private int vehicleHeadend_;
    /**
     * <pre>
     *车头车尾
     * </pre>
     *
     * <code>int32 vehicleHeadend = 42;</code>
     * @return The vehicleHeadend.
     */
    public int getVehicleHeadend() {
      return vehicleHeadend_;
    }

    public static final int SHIELDFACE_FIELD_NUMBER = 43;
    private int shieldFace_;
    /**
     * <pre>
     *是否遮挡面部
     * </pre>
     *
     * <code>int32 shieldFace = 43;</code>
     * @return The shieldFace.
     */
    public int getShieldFace() {
      return shieldFace_;
    }

    public static final int TASKTYPE_FIELD_NUMBER = 44;
    private volatile java.lang.Object taskType_;
    /**
     * <pre>
     *任务类型
     * </pre>
     *
     * <code>string taskType = 44;</code>
     * @return The taskType.
     */
    public java.lang.String getTaskType() {
      java.lang.Object ref = taskType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        taskType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *任务类型
     * </pre>
     *
     * <code>string taskType = 44;</code>
     * @return The bytes for taskType.
     */
    public com.google.protobuf.ByteString
        getTaskTypeBytes() {
      java.lang.Object ref = taskType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INFOSOURCE_FIELD_NUMBER = 45;
    private volatile java.lang.Object infoSource_;
    /**
     * <pre>
     *数据来源厂商
     * </pre>
     *
     * <code>string infoSource = 45;</code>
     * @return The infoSource.
     */
    public java.lang.String getInfoSource() {
      java.lang.Object ref = infoSource_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        infoSource_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *数据来源厂商
     * </pre>
     *
     * <code>string infoSource = 45;</code>
     * @return The bytes for infoSource.
     */
    public com.google.protobuf.ByteString
        getInfoSourceBytes() {
      java.lang.Object ref = infoSource_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        infoSource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALGORITHMVERSION_FIELD_NUMBER = 46;
    private volatile java.lang.Object algorithmVersion_;
    /**
     * <pre>
     *算法版本
     * </pre>
     *
     * <code>string algorithmVersion = 46;</code>
     * @return The algorithmVersion.
     */
    public java.lang.String getAlgorithmVersion() {
      java.lang.Object ref = algorithmVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        algorithmVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *算法版本
     * </pre>
     *
     * <code>string algorithmVersion = 46;</code>
     * @return The bytes for algorithmVersion.
     */
    public com.google.protobuf.ByteString
        getAlgorithmVersionBytes() {
      java.lang.Object ref = algorithmVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        algorithmVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALGORITHMVENDOR_FIELD_NUMBER = 47;
    private int algorithmVendor_;
    /**
     * <pre>
     *算法厂商
     * </pre>
     *
     * <code>int32 algorithmVendor = 47;</code>
     * @return The algorithmVendor.
     */
    public int getAlgorithmVendor() {
      return algorithmVendor_;
    }

    public static final int EIGENVECTOR_FIELD_NUMBER = 48;
    private volatile java.lang.Object eigenvector_;
    /**
     * <pre>
     *特征向量
     * </pre>
     *
     * <code>string eigenvector = 48;</code>
     * @return The eigenvector.
     */
    public java.lang.String getEigenvector() {
      java.lang.Object ref = eigenvector_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        eigenvector_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *特征向量
     * </pre>
     *
     * <code>string eigenvector = 48;</code>
     * @return The bytes for eigenvector.
     */
    public com.google.protobuf.ByteString
        getEigenvectorBytes() {
      java.lang.Object ref = eigenvector_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eigenvector_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISSECONDARYSTRUCTURE_FIELD_NUMBER = 49;
    private int isSecondaryStructure_;
    /**
     * <pre>
     *是否二次结构化
     * </pre>
     *
     * <code>int32 isSecondaryStructure = 49;</code>
     * @return The isSecondaryStructure.
     */
    public int getIsSecondaryStructure() {
      return isSecondaryStructure_;
    }

    public static final int STRUCTURETIME_FIELD_NUMBER = 50;
    private long structureTime_;
    /**
     * <pre>
     *结构化时间
     * </pre>
     *
     * <code>int64 structureTime = 50;</code>
     * @return The structureTime.
     */
    public long getStructureTime() {
      return structureTime_;
    }

    public static final int COLLECTIONID_FIELD_NUMBER = 51;
    private volatile java.lang.Object collectionId_;
    /**
     * <pre>
     *全目标关联关系ID
     * </pre>
     *
     * <code>string collectionId = 51;</code>
     * @return The collectionId.
     */
    public java.lang.String getCollectionId() {
      java.lang.Object ref = collectionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        collectionId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *全目标关联关系ID
     * </pre>
     *
     * <code>string collectionId = 51;</code>
     * @return The bytes for collectionId.
     */
    public com.google.protobuf.ByteString
        getCollectionIdBytes() {
      java.lang.Object ref = collectionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        collectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDITIONALINFO_FIELD_NUMBER = 52;
    private volatile java.lang.Object additionalInfo_;
    /**
     * <pre>
     *渗透字段信息
     * </pre>
     *
     * <code>string additionalInfo = 52;</code>
     * @return The additionalInfo.
     */
    public java.lang.String getAdditionalInfo() {
      java.lang.Object ref = additionalInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        additionalInfo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *渗透字段信息
     * </pre>
     *
     * <code>string additionalInfo = 52;</code>
     * @return The bytes for additionalInfo.
     */
    public com.google.protobuf.ByteString
        getAdditionalInfoBytes() {
      java.lang.Object ref = additionalInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        additionalInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 53;
    private int source_;
    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>int32 source = 53;</code>
     * @return The source.
     */
    public int getSource() {
      return source_;
    }

    public static final int DRIVEWAYNO_FIELD_NUMBER = 54;
    private volatile java.lang.Object drivewayNo_;
    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>string drivewayNo = 54;</code>
     * @return The drivewayNo.
     */
    public java.lang.String getDrivewayNo() {
      java.lang.Object ref = drivewayNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        drivewayNo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车道编号
     * </pre>
     *
     * <code>string drivewayNo = 54;</code>
     * @return The bytes for drivewayNo.
     */
    public com.google.protobuf.ByteString
        getDrivewayNoBytes() {
      java.lang.Object ref = drivewayNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        drivewayNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VEHICLELOCATION_FIELD_NUMBER = 55;
    private volatile java.lang.Object vehicleLocation_;
    /**
     * <pre>
     *车辆位置
     * </pre>
     *
     * <code>string vehicleLocation = 55;</code>
     * @return The vehicleLocation.
     */
    public java.lang.String getVehicleLocation() {
      java.lang.Object ref = vehicleLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vehicleLocation_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车辆位置
     * </pre>
     *
     * <code>string vehicleLocation = 55;</code>
     * @return The bytes for vehicleLocation.
     */
    public com.google.protobuf.ByteString
        getVehicleLocationBytes() {
      java.lang.Object ref = vehicleLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vehicleLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATELOCATION_FIELD_NUMBER = 56;
    private volatile java.lang.Object plateLocation_;
    /**
     * <pre>
     *车牌位置
     * </pre>
     *
     * <code>string plateLocation = 56;</code>
     * @return The plateLocation.
     */
    public java.lang.String getPlateLocation() {
      java.lang.Object ref = plateLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        plateLocation_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车牌位置
     * </pre>
     *
     * <code>string plateLocation = 56;</code>
     * @return The bytes for plateLocation.
     */
    public com.google.protobuf.ByteString
        getPlateLocationBytes() {
      java.lang.Object ref = plateLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plateLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAINVISORPOSITION_FIELD_NUMBER = 57;
    private volatile java.lang.Object mainVisorPosition_;
    /**
     * <pre>
     *主驾遮阳板位置
     * </pre>
     *
     * <code>string mainVisorPosition = 57;</code>
     * @return The mainVisorPosition.
     */
    public java.lang.String getMainVisorPosition() {
      java.lang.Object ref = mainVisorPosition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mainVisorPosition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *主驾遮阳板位置
     * </pre>
     *
     * <code>string mainVisorPosition = 57;</code>
     * @return The bytes for mainVisorPosition.
     */
    public com.google.protobuf.ByteString
        getMainVisorPositionBytes() {
      java.lang.Object ref = mainVisorPosition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mainVisorPosition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VICEVISORPOSITION_FIELD_NUMBER = 58;
    private volatile java.lang.Object viceVisorPosition_;
    /**
     * <pre>
     *副驾遮阳板位置
     * </pre>
     *
     * <code>string viceVisorPosition = 58;</code>
     * @return The viceVisorPosition.
     */
    public java.lang.String getViceVisorPosition() {
      java.lang.Object ref = viceVisorPosition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        viceVisorPosition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *副驾遮阳板位置
     * </pre>
     *
     * <code>string viceVisorPosition = 58;</code>
     * @return The bytes for viceVisorPosition.
     */
    public com.google.protobuf.ByteString
        getViceVisorPositionBytes() {
      java.lang.Object ref = viceVisorPosition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        viceVisorPosition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAINSEATBELTPOSITION_FIELD_NUMBER = 59;
    private volatile java.lang.Object mainSeatBeltPosition_;
    /**
     * <pre>
     *主驾安全带位置
     * </pre>
     *
     * <code>string mainSeatBeltPosition = 59;</code>
     * @return The mainSeatBeltPosition.
     */
    public java.lang.String getMainSeatBeltPosition() {
      java.lang.Object ref = mainSeatBeltPosition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mainSeatBeltPosition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *主驾安全带位置
     * </pre>
     *
     * <code>string mainSeatBeltPosition = 59;</code>
     * @return The bytes for mainSeatBeltPosition.
     */
    public com.google.protobuf.ByteString
        getMainSeatBeltPositionBytes() {
      java.lang.Object ref = mainSeatBeltPosition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mainSeatBeltPosition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VICESEATBELTPOSITION_FIELD_NUMBER = 60;
    private volatile java.lang.Object viceSeatBeltPosition_;
    /**
     * <pre>
     *副驾安全带位置
     * </pre>
     *
     * <code>string viceSeatBeltPosition = 60;</code>
     * @return The viceSeatBeltPosition.
     */
    public java.lang.String getViceSeatBeltPosition() {
      java.lang.Object ref = viceSeatBeltPosition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        viceSeatBeltPosition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *副驾安全带位置
     * </pre>
     *
     * <code>string viceSeatBeltPosition = 60;</code>
     * @return The bytes for viceSeatBeltPosition.
     */
    public com.google.protobuf.ByteString
        getViceSeatBeltPositionBytes() {
      java.lang.Object ref = viceSeatBeltPosition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        viceSeatBeltPosition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DRIVINGCALL_FIELD_NUMBER = 61;
    private volatile java.lang.Object drivingCall_;
    /**
     * <pre>
     *驾驶员开车打电话
     * </pre>
     *
     * <code>string drivingCall = 61;</code>
     * @return The drivingCall.
     */
    public java.lang.String getDrivingCall() {
      java.lang.Object ref = drivingCall_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        drivingCall_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *驾驶员开车打电话
     * </pre>
     *
     * <code>string drivingCall = 61;</code>
     * @return The bytes for drivingCall.
     */
    public com.google.protobuf.ByteString
        getDrivingCallBytes() {
      java.lang.Object ref = drivingCall_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        drivingCall_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANNUALINSPECTIONPOSITION_FIELD_NUMBER = 62;
    private volatile java.lang.Object annualInspectionPosition_;
    /**
     * <pre>
     *年检标位置
     * </pre>
     *
     * <code>string annualInspectionPosition = 62;</code>
     * @return The annualInspectionPosition.
     */
    public java.lang.String getAnnualInspectionPosition() {
      java.lang.Object ref = annualInspectionPosition_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        annualInspectionPosition_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *年检标位置
     * </pre>
     *
     * <code>string annualInspectionPosition = 62;</code>
     * @return The bytes for annualInspectionPosition.
     */
    public com.google.protobuf.ByteString
        getAnnualInspectionPositionBytes() {
      java.lang.Object ref = annualInspectionPosition_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        annualInspectionPosition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PENDANTLOCATION_FIELD_NUMBER = 63;
    private volatile java.lang.Object pendantLocation_;
    /**
     * <pre>
     *挂件位置
     * </pre>
     *
     * <code>string pendantLocation = 63;</code>
     * @return The pendantLocation.
     */
    public java.lang.String getPendantLocation() {
      java.lang.Object ref = pendantLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pendantLocation_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *挂件位置
     * </pre>
     *
     * <code>string pendantLocation = 63;</code>
     * @return The bytes for pendantLocation.
     */
    public com.google.protobuf.ByteString
        getPendantLocationBytes() {
      java.lang.Object ref = pendantLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pendantLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TISSUEBOXLOCATION_FIELD_NUMBER = 64;
    private volatile java.lang.Object tissueBoxLocation_;
    /**
     * <pre>
     *纸巾盒位置
     * </pre>
     *
     * <code>string tissueBoxLocation = 64;</code>
     * @return The tissueBoxLocation.
     */
    public java.lang.String getTissueBoxLocation() {
      java.lang.Object ref = tissueBoxLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tissueBoxLocation_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *纸巾盒位置
     * </pre>
     *
     * <code>string tissueBoxLocation = 64;</code>
     * @return The bytes for tissueBoxLocation.
     */
    public com.google.protobuf.ByteString
        getTissueBoxLocationBytes() {
      java.lang.Object ref = tissueBoxLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tissueBoxLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATEPICURL_FIELD_NUMBER = 65;
    private volatile java.lang.Object platePicUrl_;
    /**
     * <pre>
     *车牌图片
     * </pre>
     *
     * <code>string platePicUrl = 65;</code>
     * @return The platePicUrl.
     */
    public java.lang.String getPlatePicUrl() {
      java.lang.Object ref = platePicUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        platePicUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *车牌图片
     * </pre>
     *
     * <code>string platePicUrl = 65;</code>
     * @return The bytes for platePicUrl.
     */
    public com.google.protobuf.ByteString
        getPlatePicUrlBytes() {
      java.lang.Object ref = platePicUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        platePicUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MOVEDIRECTION_FIELD_NUMBER = 66;
    private int moveDirection_;
    /**
     * <pre>
     *移动方向
     * </pre>
     *
     * <code>int32 moveDirection = 66;</code>
     * @return The moveDirection.
     */
    public int getMoveDirection() {
      return moveDirection_;
    }

    public static final int SPECIALCAR_FIELD_NUMBER = 67;
    private int specialCar_;
    /**
     * <pre>
     *特殊车辆
     * </pre>
     *
     * <code>int32 specialCar = 67;</code>
     * @return The specialCar.
     */
    public int getSpecialCar() {
      return specialCar_;
    }

    public static final int MOVESPEED_FIELD_NUMBER = 68;
    private int moveSpeed_;
    /**
     * <pre>
     *移动速度
     * </pre>
     *
     * <code>int32 moveSpeed = 68;</code>
     * @return The moveSpeed.
     */
    public int getMoveSpeed() {
      return moveSpeed_;
    }

    public static final int SUBIMAGELIST_FIELD_NUMBER = 69;
    private java.util.List<com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo> subImageList_;
    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    public java.util.List<com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo> getSubImageListList() {
      return subImageList_;
    }
    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    public java.util.List<? extends com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfoOrBuilder> 
        getSubImageListOrBuilderList() {
      return subImageList_;
    }
    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    public int getSubImageListCount() {
      return subImageList_.size();
    }
    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    public com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo getSubImageList(int index) {
      return subImageList_.get(index);
    }
    /**
     * <pre>
     *图像列表
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
     */
    public com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfoOrBuilder getSubImageListOrBuilder(
        int index) {
      return subImageList_.get(index);
    }

    public static final int STRUCTURENUM_FIELD_NUMBER = 70;
    private int structureNum_;
    /**
     * <pre>
     *二次识别次数
     * </pre>
     *
     * <code>int32 structureNum = 70;</code>
     * @return The structureNum.
     */
    public int getStructureNum() {
      return structureNum_;
    }

    public static final int ACCESSTIME_FIELD_NUMBER = 71;
    private long accessTime_;
    /**
     * <pre>
     *接入时间
     * </pre>
     *
     * <code>int64 accessTime = 71;</code>
     * @return The accessTime.
     */
    public long getAccessTime() {
      return accessTime_;
    }

    public static final int HASPLATE_FIELD_NUMBER = 72;
    private volatile java.lang.Object hasPlate_;
    /**
     * <pre>
     *有无车牌
     * </pre>
     *
     * <code>string hasPlate = 72;</code>
     * @return The hasPlate.
     */
    public java.lang.String getHasPlate() {
      java.lang.Object ref = hasPlate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hasPlate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *有无车牌
     * </pre>
     *
     * <code>string hasPlate = 72;</code>
     * @return The bytes for hasPlate.
     */
    public com.google.protobuf.ByteString
        getHasPlateBytes() {
      java.lang.Object ref = hasPlate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hasPlate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRUCTURESOURCE_FIELD_NUMBER = 73;
    private int structureSource_;
    /**
     * <pre>
     *二次结构化来源
     * </pre>
     *
     * <code>int32 structureSource = 73;</code>
     * @return The structureSource.
     */
    public int getStructureSource() {
      return structureSource_;
    }

    public static final int TOLLGATEID_FIELD_NUMBER = 74;
    private volatile java.lang.Object tollgateId_;
    /**
     * <pre>
     *卡口ID
     * </pre>
     *
     * <code>string tollgateId = 74;</code>
     * @return The tollgateId.
     */
    public java.lang.String getTollgateId() {
      java.lang.Object ref = tollgateId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tollgateId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *卡口ID
     * </pre>
     *
     * <code>string tollgateId = 74;</code>
     * @return The bytes for tollgateId.
     */
    public com.google.protobuf.ByteString
        getTollgateIdBytes() {
      java.lang.Object ref = tollgateId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tollgateId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LANENO_FIELD_NUMBER = 75;
    private int laneNO_;
    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>int32 laneNO = 75;</code>
     * @return The laneNO.
     */
    public int getLaneNO() {
      return laneNO_;
    }

    public static final int WHOLECONFIDENCE_FIELD_NUMBER = 76;
    private double wholeConfidence_;
    /**
     * <pre>
     *整体置信度
     * </pre>
     *
     * <code>double WholeConfidence = 76;</code>
     * @return The wholeConfidence.
     */
    public double getWholeConfidence() {
      return wholeConfidence_;
    }

    public static final int DRIVERPHONECONFIDENCE_FIELD_NUMBER = 77;
    private double driverPhoneConfidence_;
    /**
     * <pre>
     *主驾开车打电话置信度
     * </pre>
     *
     * <code>double DriverPhoneConfidence = 77;</code>
     * @return The driverPhoneConfidence.
     */
    public double getDriverPhoneConfidence() {
      return driverPhoneConfidence_;
    }

    public static final int DEPUTYDRIVERPHONECONFIDENCE_FIELD_NUMBER = 78;
    private double deputyDriverPhoneConfidence_;
    /**
     * <pre>
     *副驾开车打电话置信度
     * </pre>
     *
     * <code>double DeputyDriverPhoneConfidence = 78;</code>
     * @return The deputyDriverPhoneConfidence.
     */
    public double getDeputyDriverPhoneConfidence() {
      return deputyDriverPhoneConfidence_;
    }

    public static final int DRIVERSEATBELTCONFIDENCE_FIELD_NUMBER = 79;
    private double driverSeatBeltConfidence_;
    /**
     * <pre>
     *副驾安全带置信度
     * </pre>
     *
     * <code>double DriverSeatBeltConfidence = 79;</code>
     * @return The driverSeatBeltConfidence.
     */
    public double getDriverSeatBeltConfidence() {
      return driverSeatBeltConfidence_;
    }

    public static final int DEPUTYDRIVERSEATBELTCONFIDENCE_FIELD_NUMBER = 80;
    private double deputyDriverSeatBeltConfidence_;
    /**
     * <pre>
     *主驾安全带置信度
     * </pre>
     *
     * <code>double DeputyDriverSeatBeltConfidence = 80;</code>
     * @return The deputyDriverSeatBeltConfidence.
     */
    public double getDeputyDriverSeatBeltConfidence() {
      return deputyDriverSeatBeltConfidence_;
    }

    public static final int ROOFITEMS_FIELD_NUMBER = 81;
    private int roofItems_;
    /**
     * <pre>
     *车顶物件
     * </pre>
     *
     * <code>int32 roofItems = 81;</code>
     * @return The roofItems.
     */
    public int getRoofItems() {
      return roofItems_;
    }

    public static final int PLATEOCCLUSION_FIELD_NUMBER = 82;
    private int plateOcclusion_;
    /**
     * <pre>
     *车牌遮挡
     * </pre>
     *
     * <code>int32 plateOcclusion = 82;</code>
     * @return The plateOcclusion.
     */
    public int getPlateOcclusion() {
      return plateOcclusion_;
    }

    public static final int FACIALOCCLUSION_FIELD_NUMBER = 83;
    private int facialOcclusion_;
    /**
     * <pre>
     *面部遮挡
     * </pre>
     *
     * <code>int32 facialOcclusion = 83;</code>
     * @return The facialOcclusion.
     */
    public int getFacialOcclusion() {
      return facialOcclusion_;
    }

    public static final int EXT_FIELD_NUMBER = 84;
    private volatile java.lang.Object ext_;
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>string Ext = 84;</code>
     * @return The ext.
     */
    public java.lang.String getExt() {
      java.lang.Object ref = ext_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ext_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>string Ext = 84;</code>
     * @return The bytes for ext.
     */
    public com.google.protobuf.ByteString
        getExtBytes() {
      java.lang.Object ref = ext_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ext_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RELATEDTYPE_FIELD_NUMBER = 85;
    private volatile java.lang.Object relatedType_;
    /**
     * <pre>
     *关联对象类型
     * </pre>
     *
     * <code>string relatedType = 85;</code>
     * @return The relatedType.
     */
    public java.lang.String getRelatedType() {
      java.lang.Object ref = relatedType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        relatedType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *关联对象类型
     * </pre>
     *
     * <code>string relatedType = 85;</code>
     * @return The bytes for relatedType.
     */
    public com.google.protobuf.ByteString
        getRelatedTypeBytes() {
      java.lang.Object ref = relatedType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        relatedType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RELATEDLIST_FIELD_NUMBER = 86;
    private java.util.List<com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo> relatedList_;
    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    public java.util.List<com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo> getRelatedListList() {
      return relatedList_;
    }
    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    public java.util.List<? extends com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfoOrBuilder> 
        getRelatedListOrBuilderList() {
      return relatedList_;
    }
    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    public int getRelatedListCount() {
      return relatedList_.size();
    }
    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    public com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo getRelatedList(int index) {
      return relatedList_.get(index);
    }
    /**
     * <pre>
     *关联对象信息
     * </pre>
     *
     * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
     */
    public com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfoOrBuilder getRelatedListOrBuilder(
        int index) {
      return relatedList_.get(index);
    }

    public static final int LONGITUDE_FIELD_NUMBER = 87;
    private double longitude_;
    /**
     * <pre>
     *设备经度【固定点位设备可选填，移动设备必填】
     * </pre>
     *
     * <code>double Longitude = 87;</code>
     * @return The longitude.
     */
    public double getLongitude() {
      return longitude_;
    }

    public static final int LATITUDE_FIELD_NUMBER = 88;
    private double latitude_;
    /**
     * <pre>
     *设备纬度【固定点位设备可选填，移动设备必填】
     * </pre>
     *
     * <code>double Latitude = 88;</code>
     * @return The latitude.
     */
    public double getLatitude() {
      return latitude_;
    }

    public static final int DATAMARKS_FIELD_NUMBER = 89;
    private int dataMarks_;
    /**
     * <pre>
     *标记
     * </pre>
     *
     * <code>int32 dataMarks = 89;</code>
     * @return The dataMarks.
     */
    public int getDataMarks() {
      return dataMarks_;
    }

    public static final int TRACEINFO_FIELD_NUMBER = 90;
    private volatile java.lang.Object traceInfo_;
    /**
     * <pre>
     *非机动车轨迹
     * </pre>
     *
     * <code>string traceInfo = 90;</code>
     * @return The traceInfo.
     */
    public java.lang.String getTraceInfo() {
      java.lang.Object ref = traceInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        traceInfo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *非机动车轨迹
     * </pre>
     *
     * <code>string traceInfo = 90;</code>
     * @return The bytes for traceInfo.
     */
    public com.google.protobuf.ByteString
        getTraceInfoBytes() {
      java.lang.Object ref = traceInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        traceInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTMAPS_FIELD_NUMBER = 91;
    private static final class ExtMapsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_ExtMapsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> extMaps_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetExtMaps() {
      if (extMaps_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExtMapsDefaultEntryHolder.defaultEntry);
      }
      return extMaps_;
    }

    public int getExtMapsCount() {
      return internalGetExtMaps().getMap().size();
    }
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>map&lt;string, string&gt; extMaps = 91;</code>
     */

    public boolean containsExtMaps(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetExtMaps().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExtMapsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getExtMaps() {
      return getExtMapsMap();
    }
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>map&lt;string, string&gt; extMaps = 91;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getExtMapsMap() {
      return internalGetExtMaps().getMap();
    }
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>map&lt;string, string&gt; extMaps = 91;</code>
     */

    public java.lang.String getExtMapsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetExtMaps().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *扩展字段
     * </pre>
     *
     * <code>map&lt;string, string&gt; extMaps = 91;</code>
     */

    public java.lang.String getExtMapsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetExtMaps().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRecordIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, recordId_);
      }
      if (!getBusinessIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, businessId_);
      }
      if (infoKind_ != 0) {
        output.writeInt32(3, infoKind_);
      }
      if (!getSourceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, sourceId_);
      }
      if (!getStorageUrl1Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, storageUrl1_);
      }
      if (leftTopX_ != 0) {
        output.writeInt32(6, leftTopX_);
      }
      if (leftTopY_ != 0) {
        output.writeInt32(7, leftTopY_);
      }
      if (rightBtmX_ != 0) {
        output.writeInt32(8, rightBtmX_);
      }
      if (rightBtmY_ != 0) {
        output.writeInt32(9, rightBtmY_);
      }
      if (plateLeftTopX_ != 0) {
        output.writeInt32(10, plateLeftTopX_);
      }
      if (plateLeftTopY_ != 0) {
        output.writeInt32(11, plateLeftTopY_);
      }
      if (plateRightBtmX_ != 0) {
        output.writeInt32(12, plateRightBtmX_);
      }
      if (plateRightBtmY_ != 0) {
        output.writeInt32(13, plateRightBtmY_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, deviceId_);
      }
      if (!getPlateNoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, plateNo_);
      }
      if (plateNoConfidence_ != 0D) {
        output.writeDouble(16, plateNoConfidence_);
      }
      if (!getPlateClassBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, plateClass_);
      }
      if (!getPlateColorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, plateColor_);
      }
      if (!getTrafficStatusBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 19, trafficStatus_);
      }
      if (!getVehicleTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, vehicleType_);
      }
      if (!getVehicleColorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 21, vehicleColor_);
      }
      if (!getVehicleBrandBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 22, vehicleBrand_);
      }
      if (vehicleBrandConfidence_ != 0D) {
        output.writeDouble(23, vehicleBrandConfidence_);
      }
      if (!getVehicleSubBrandBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 24, vehicleSubBrand_);
      }
      if (vehicleSubBrandConfidence_ != 0D) {
        output.writeDouble(25, vehicleSubBrandConfidence_);
      }
      if (faceNum_ != 0) {
        output.writeInt32(26, faceNum_);
      }
      if (sunVisor_ != 0) {
        output.writeInt32(27, sunVisor_);
      }
      if (seatBeltStatus_ != 0) {
        output.writeInt32(28, seatBeltStatus_);
      }
      if (annualInspectionNum_ != 0) {
        output.writeInt32(29, annualInspectionNum_);
      }
      if (pendantsNum_ != 0) {
        output.writeInt32(30, pendantsNum_);
      }
      if (ornamentsNum_ != 0) {
        output.writeInt32(31, ornamentsNum_);
      }
      if (!getVehicleYearBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 32, vehicleYear_);
      }
      if (tissueBoxNum_ != 0) {
        output.writeInt32(33, tissueBoxNum_);
      }
      if (callStatus_ != 0) {
        output.writeInt32(34, callStatus_);
      }
      if (!getViolationTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 35, violationType_);
      }
      if (!getDataSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 36, dataSource_);
      }
      if (elapsedTime_ != 0L) {
        output.writeInt64(37, elapsedTime_);
      }
      if (dataInKafkaTime_ != 0L) {
        output.writeInt64(38, dataInKafkaTime_);
      }
      if (entryTime_ != 0L) {
        output.writeInt64(39, entryTime_);
      }
      if (vehicleSpeed_ != 0D) {
        output.writeDouble(40, vehicleSpeed_);
      }
      if (markerType_ != 0) {
        output.writeInt32(41, markerType_);
      }
      if (vehicleHeadend_ != 0) {
        output.writeInt32(42, vehicleHeadend_);
      }
      if (shieldFace_ != 0) {
        output.writeInt32(43, shieldFace_);
      }
      if (!getTaskTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 44, taskType_);
      }
      if (!getInfoSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 45, infoSource_);
      }
      if (!getAlgorithmVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 46, algorithmVersion_);
      }
      if (algorithmVendor_ != 0) {
        output.writeInt32(47, algorithmVendor_);
      }
      if (!getEigenvectorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 48, eigenvector_);
      }
      if (isSecondaryStructure_ != 0) {
        output.writeInt32(49, isSecondaryStructure_);
      }
      if (structureTime_ != 0L) {
        output.writeInt64(50, structureTime_);
      }
      if (!getCollectionIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 51, collectionId_);
      }
      if (!getAdditionalInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 52, additionalInfo_);
      }
      if (source_ != 0) {
        output.writeInt32(53, source_);
      }
      if (!getDrivewayNoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 54, drivewayNo_);
      }
      if (!getVehicleLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 55, vehicleLocation_);
      }
      if (!getPlateLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 56, plateLocation_);
      }
      if (!getMainVisorPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 57, mainVisorPosition_);
      }
      if (!getViceVisorPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 58, viceVisorPosition_);
      }
      if (!getMainSeatBeltPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 59, mainSeatBeltPosition_);
      }
      if (!getViceSeatBeltPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 60, viceSeatBeltPosition_);
      }
      if (!getDrivingCallBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 61, drivingCall_);
      }
      if (!getAnnualInspectionPositionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 62, annualInspectionPosition_);
      }
      if (!getPendantLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 63, pendantLocation_);
      }
      if (!getTissueBoxLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 64, tissueBoxLocation_);
      }
      if (!getPlatePicUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 65, platePicUrl_);
      }
      if (moveDirection_ != 0) {
        output.writeInt32(66, moveDirection_);
      }
      if (specialCar_ != 0) {
        output.writeInt32(67, specialCar_);
      }
      if (moveSpeed_ != 0) {
        output.writeInt32(68, moveSpeed_);
      }
      for (int i = 0; i < subImageList_.size(); i++) {
        output.writeMessage(69, subImageList_.get(i));
      }
      if (structureNum_ != 0) {
        output.writeInt32(70, structureNum_);
      }
      if (accessTime_ != 0L) {
        output.writeInt64(71, accessTime_);
      }
      if (!getHasPlateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 72, hasPlate_);
      }
      if (structureSource_ != 0) {
        output.writeInt32(73, structureSource_);
      }
      if (!getTollgateIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 74, tollgateId_);
      }
      if (laneNO_ != 0) {
        output.writeInt32(75, laneNO_);
      }
      if (wholeConfidence_ != 0D) {
        output.writeDouble(76, wholeConfidence_);
      }
      if (driverPhoneConfidence_ != 0D) {
        output.writeDouble(77, driverPhoneConfidence_);
      }
      if (deputyDriverPhoneConfidence_ != 0D) {
        output.writeDouble(78, deputyDriverPhoneConfidence_);
      }
      if (driverSeatBeltConfidence_ != 0D) {
        output.writeDouble(79, driverSeatBeltConfidence_);
      }
      if (deputyDriverSeatBeltConfidence_ != 0D) {
        output.writeDouble(80, deputyDriverSeatBeltConfidence_);
      }
      if (roofItems_ != 0) {
        output.writeInt32(81, roofItems_);
      }
      if (plateOcclusion_ != 0) {
        output.writeInt32(82, plateOcclusion_);
      }
      if (facialOcclusion_ != 0) {
        output.writeInt32(83, facialOcclusion_);
      }
      if (!getExtBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 84, ext_);
      }
      if (!getRelatedTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 85, relatedType_);
      }
      for (int i = 0; i < relatedList_.size(); i++) {
        output.writeMessage(86, relatedList_.get(i));
      }
      if (longitude_ != 0D) {
        output.writeDouble(87, longitude_);
      }
      if (latitude_ != 0D) {
        output.writeDouble(88, latitude_);
      }
      if (dataMarks_ != 0) {
        output.writeInt32(89, dataMarks_);
      }
      if (!getTraceInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 90, traceInfo_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetExtMaps(),
          ExtMapsDefaultEntryHolder.defaultEntry,
          91);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRecordIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, recordId_);
      }
      if (!getBusinessIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, businessId_);
      }
      if (infoKind_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, infoKind_);
      }
      if (!getSourceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, sourceId_);
      }
      if (!getStorageUrl1Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, storageUrl1_);
      }
      if (leftTopX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, leftTopX_);
      }
      if (leftTopY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, leftTopY_);
      }
      if (rightBtmX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, rightBtmX_);
      }
      if (rightBtmY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, rightBtmY_);
      }
      if (plateLeftTopX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, plateLeftTopX_);
      }
      if (plateLeftTopY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, plateLeftTopY_);
      }
      if (plateRightBtmX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, plateRightBtmX_);
      }
      if (plateRightBtmY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, plateRightBtmY_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, deviceId_);
      }
      if (!getPlateNoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, plateNo_);
      }
      if (plateNoConfidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, plateNoConfidence_);
      }
      if (!getPlateClassBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, plateClass_);
      }
      if (!getPlateColorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, plateColor_);
      }
      if (!getTrafficStatusBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, trafficStatus_);
      }
      if (!getVehicleTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, vehicleType_);
      }
      if (!getVehicleColorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, vehicleColor_);
      }
      if (!getVehicleBrandBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, vehicleBrand_);
      }
      if (vehicleBrandConfidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, vehicleBrandConfidence_);
      }
      if (!getVehicleSubBrandBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(24, vehicleSubBrand_);
      }
      if (vehicleSubBrandConfidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(25, vehicleSubBrandConfidence_);
      }
      if (faceNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, faceNum_);
      }
      if (sunVisor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, sunVisor_);
      }
      if (seatBeltStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, seatBeltStatus_);
      }
      if (annualInspectionNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, annualInspectionNum_);
      }
      if (pendantsNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, pendantsNum_);
      }
      if (ornamentsNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, ornamentsNum_);
      }
      if (!getVehicleYearBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(32, vehicleYear_);
      }
      if (tissueBoxNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, tissueBoxNum_);
      }
      if (callStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, callStatus_);
      }
      if (!getViolationTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(35, violationType_);
      }
      if (!getDataSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(36, dataSource_);
      }
      if (elapsedTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(37, elapsedTime_);
      }
      if (dataInKafkaTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(38, dataInKafkaTime_);
      }
      if (entryTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(39, entryTime_);
      }
      if (vehicleSpeed_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(40, vehicleSpeed_);
      }
      if (markerType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, markerType_);
      }
      if (vehicleHeadend_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(42, vehicleHeadend_);
      }
      if (shieldFace_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, shieldFace_);
      }
      if (!getTaskTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(44, taskType_);
      }
      if (!getInfoSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(45, infoSource_);
      }
      if (!getAlgorithmVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(46, algorithmVersion_);
      }
      if (algorithmVendor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, algorithmVendor_);
      }
      if (!getEigenvectorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(48, eigenvector_);
      }
      if (isSecondaryStructure_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, isSecondaryStructure_);
      }
      if (structureTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(50, structureTime_);
      }
      if (!getCollectionIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(51, collectionId_);
      }
      if (!getAdditionalInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(52, additionalInfo_);
      }
      if (source_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(53, source_);
      }
      if (!getDrivewayNoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(54, drivewayNo_);
      }
      if (!getVehicleLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(55, vehicleLocation_);
      }
      if (!getPlateLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(56, plateLocation_);
      }
      if (!getMainVisorPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(57, mainVisorPosition_);
      }
      if (!getViceVisorPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(58, viceVisorPosition_);
      }
      if (!getMainSeatBeltPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(59, mainSeatBeltPosition_);
      }
      if (!getViceSeatBeltPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(60, viceSeatBeltPosition_);
      }
      if (!getDrivingCallBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(61, drivingCall_);
      }
      if (!getAnnualInspectionPositionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(62, annualInspectionPosition_);
      }
      if (!getPendantLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(63, pendantLocation_);
      }
      if (!getTissueBoxLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(64, tissueBoxLocation_);
      }
      if (!getPlatePicUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(65, platePicUrl_);
      }
      if (moveDirection_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(66, moveDirection_);
      }
      if (specialCar_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(67, specialCar_);
      }
      if (moveSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(68, moveSpeed_);
      }
      for (int i = 0; i < subImageList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(69, subImageList_.get(i));
      }
      if (structureNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(70, structureNum_);
      }
      if (accessTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(71, accessTime_);
      }
      if (!getHasPlateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(72, hasPlate_);
      }
      if (structureSource_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(73, structureSource_);
      }
      if (!getTollgateIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(74, tollgateId_);
      }
      if (laneNO_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(75, laneNO_);
      }
      if (wholeConfidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(76, wholeConfidence_);
      }
      if (driverPhoneConfidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(77, driverPhoneConfidence_);
      }
      if (deputyDriverPhoneConfidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(78, deputyDriverPhoneConfidence_);
      }
      if (driverSeatBeltConfidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(79, driverSeatBeltConfidence_);
      }
      if (deputyDriverSeatBeltConfidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(80, deputyDriverSeatBeltConfidence_);
      }
      if (roofItems_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(81, roofItems_);
      }
      if (plateOcclusion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(82, plateOcclusion_);
      }
      if (facialOcclusion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(83, facialOcclusion_);
      }
      if (!getExtBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(84, ext_);
      }
      if (!getRelatedTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(85, relatedType_);
      }
      for (int i = 0; i < relatedList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(86, relatedList_.get(i));
      }
      if (longitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(87, longitude_);
      }
      if (latitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(88, latitude_);
      }
      if (dataMarks_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(89, dataMarks_);
      }
      if (!getTraceInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(90, traceInfo_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetExtMaps().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        extMaps__ = ExtMapsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(91, extMaps__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle)) {
        return super.equals(obj);
      }
      com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle other = (com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle) obj;

      if (!getRecordId()
          .equals(other.getRecordId())) return false;
      if (!getBusinessId()
          .equals(other.getBusinessId())) return false;
      if (getInfoKind()
          != other.getInfoKind()) return false;
      if (!getSourceId()
          .equals(other.getSourceId())) return false;
      if (!getStorageUrl1()
          .equals(other.getStorageUrl1())) return false;
      if (getLeftTopX()
          != other.getLeftTopX()) return false;
      if (getLeftTopY()
          != other.getLeftTopY()) return false;
      if (getRightBtmX()
          != other.getRightBtmX()) return false;
      if (getRightBtmY()
          != other.getRightBtmY()) return false;
      if (getPlateLeftTopX()
          != other.getPlateLeftTopX()) return false;
      if (getPlateLeftTopY()
          != other.getPlateLeftTopY()) return false;
      if (getPlateRightBtmX()
          != other.getPlateRightBtmX()) return false;
      if (getPlateRightBtmY()
          != other.getPlateRightBtmY()) return false;
      if (!getDeviceId()
          .equals(other.getDeviceId())) return false;
      if (!getPlateNo()
          .equals(other.getPlateNo())) return false;
      if (java.lang.Double.doubleToLongBits(getPlateNoConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getPlateNoConfidence())) return false;
      if (!getPlateClass()
          .equals(other.getPlateClass())) return false;
      if (!getPlateColor()
          .equals(other.getPlateColor())) return false;
      if (!getTrafficStatus()
          .equals(other.getTrafficStatus())) return false;
      if (!getVehicleType()
          .equals(other.getVehicleType())) return false;
      if (!getVehicleColor()
          .equals(other.getVehicleColor())) return false;
      if (!getVehicleBrand()
          .equals(other.getVehicleBrand())) return false;
      if (java.lang.Double.doubleToLongBits(getVehicleBrandConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getVehicleBrandConfidence())) return false;
      if (!getVehicleSubBrand()
          .equals(other.getVehicleSubBrand())) return false;
      if (java.lang.Double.doubleToLongBits(getVehicleSubBrandConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getVehicleSubBrandConfidence())) return false;
      if (getFaceNum()
          != other.getFaceNum()) return false;
      if (getSunVisor()
          != other.getSunVisor()) return false;
      if (getSeatBeltStatus()
          != other.getSeatBeltStatus()) return false;
      if (getAnnualInspectionNum()
          != other.getAnnualInspectionNum()) return false;
      if (getPendantsNum()
          != other.getPendantsNum()) return false;
      if (getOrnamentsNum()
          != other.getOrnamentsNum()) return false;
      if (!getVehicleYear()
          .equals(other.getVehicleYear())) return false;
      if (getTissueBoxNum()
          != other.getTissueBoxNum()) return false;
      if (getCallStatus()
          != other.getCallStatus()) return false;
      if (!getViolationType()
          .equals(other.getViolationType())) return false;
      if (!getDataSource()
          .equals(other.getDataSource())) return false;
      if (getElapsedTime()
          != other.getElapsedTime()) return false;
      if (getDataInKafkaTime()
          != other.getDataInKafkaTime()) return false;
      if (getEntryTime()
          != other.getEntryTime()) return false;
      if (java.lang.Double.doubleToLongBits(getVehicleSpeed())
          != java.lang.Double.doubleToLongBits(
              other.getVehicleSpeed())) return false;
      if (getMarkerType()
          != other.getMarkerType()) return false;
      if (getVehicleHeadend()
          != other.getVehicleHeadend()) return false;
      if (getShieldFace()
          != other.getShieldFace()) return false;
      if (!getTaskType()
          .equals(other.getTaskType())) return false;
      if (!getInfoSource()
          .equals(other.getInfoSource())) return false;
      if (!getAlgorithmVersion()
          .equals(other.getAlgorithmVersion())) return false;
      if (getAlgorithmVendor()
          != other.getAlgorithmVendor()) return false;
      if (!getEigenvector()
          .equals(other.getEigenvector())) return false;
      if (getIsSecondaryStructure()
          != other.getIsSecondaryStructure()) return false;
      if (getStructureTime()
          != other.getStructureTime()) return false;
      if (!getCollectionId()
          .equals(other.getCollectionId())) return false;
      if (!getAdditionalInfo()
          .equals(other.getAdditionalInfo())) return false;
      if (getSource()
          != other.getSource()) return false;
      if (!getDrivewayNo()
          .equals(other.getDrivewayNo())) return false;
      if (!getVehicleLocation()
          .equals(other.getVehicleLocation())) return false;
      if (!getPlateLocation()
          .equals(other.getPlateLocation())) return false;
      if (!getMainVisorPosition()
          .equals(other.getMainVisorPosition())) return false;
      if (!getViceVisorPosition()
          .equals(other.getViceVisorPosition())) return false;
      if (!getMainSeatBeltPosition()
          .equals(other.getMainSeatBeltPosition())) return false;
      if (!getViceSeatBeltPosition()
          .equals(other.getViceSeatBeltPosition())) return false;
      if (!getDrivingCall()
          .equals(other.getDrivingCall())) return false;
      if (!getAnnualInspectionPosition()
          .equals(other.getAnnualInspectionPosition())) return false;
      if (!getPendantLocation()
          .equals(other.getPendantLocation())) return false;
      if (!getTissueBoxLocation()
          .equals(other.getTissueBoxLocation())) return false;
      if (!getPlatePicUrl()
          .equals(other.getPlatePicUrl())) return false;
      if (getMoveDirection()
          != other.getMoveDirection()) return false;
      if (getSpecialCar()
          != other.getSpecialCar()) return false;
      if (getMoveSpeed()
          != other.getMoveSpeed()) return false;
      if (!getSubImageListList()
          .equals(other.getSubImageListList())) return false;
      if (getStructureNum()
          != other.getStructureNum()) return false;
      if (getAccessTime()
          != other.getAccessTime()) return false;
      if (!getHasPlate()
          .equals(other.getHasPlate())) return false;
      if (getStructureSource()
          != other.getStructureSource()) return false;
      if (!getTollgateId()
          .equals(other.getTollgateId())) return false;
      if (getLaneNO()
          != other.getLaneNO()) return false;
      if (java.lang.Double.doubleToLongBits(getWholeConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getWholeConfidence())) return false;
      if (java.lang.Double.doubleToLongBits(getDriverPhoneConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getDriverPhoneConfidence())) return false;
      if (java.lang.Double.doubleToLongBits(getDeputyDriverPhoneConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getDeputyDriverPhoneConfidence())) return false;
      if (java.lang.Double.doubleToLongBits(getDriverSeatBeltConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getDriverSeatBeltConfidence())) return false;
      if (java.lang.Double.doubleToLongBits(getDeputyDriverSeatBeltConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getDeputyDriverSeatBeltConfidence())) return false;
      if (getRoofItems()
          != other.getRoofItems()) return false;
      if (getPlateOcclusion()
          != other.getPlateOcclusion()) return false;
      if (getFacialOcclusion()
          != other.getFacialOcclusion()) return false;
      if (!getExt()
          .equals(other.getExt())) return false;
      if (!getRelatedType()
          .equals(other.getRelatedType())) return false;
      if (!getRelatedListList()
          .equals(other.getRelatedListList())) return false;
      if (java.lang.Double.doubleToLongBits(getLongitude())
          != java.lang.Double.doubleToLongBits(
              other.getLongitude())) return false;
      if (java.lang.Double.doubleToLongBits(getLatitude())
          != java.lang.Double.doubleToLongBits(
              other.getLatitude())) return false;
      if (getDataMarks()
          != other.getDataMarks()) return false;
      if (!getTraceInfo()
          .equals(other.getTraceInfo())) return false;
      if (!internalGetExtMaps().equals(
          other.internalGetExtMaps())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RECORDID_FIELD_NUMBER;
      hash = (53 * hash) + getRecordId().hashCode();
      hash = (37 * hash) + BUSINESSID_FIELD_NUMBER;
      hash = (53 * hash) + getBusinessId().hashCode();
      hash = (37 * hash) + INFOKIND_FIELD_NUMBER;
      hash = (53 * hash) + getInfoKind();
      hash = (37 * hash) + SOURCEID_FIELD_NUMBER;
      hash = (53 * hash) + getSourceId().hashCode();
      hash = (37 * hash) + STORAGEURL1_FIELD_NUMBER;
      hash = (53 * hash) + getStorageUrl1().hashCode();
      hash = (37 * hash) + LEFTTOPX_FIELD_NUMBER;
      hash = (53 * hash) + getLeftTopX();
      hash = (37 * hash) + LEFTTOPY_FIELD_NUMBER;
      hash = (53 * hash) + getLeftTopY();
      hash = (37 * hash) + RIGHTBTMX_FIELD_NUMBER;
      hash = (53 * hash) + getRightBtmX();
      hash = (37 * hash) + RIGHTBTMY_FIELD_NUMBER;
      hash = (53 * hash) + getRightBtmY();
      hash = (37 * hash) + PLATELEFTTOPX_FIELD_NUMBER;
      hash = (53 * hash) + getPlateLeftTopX();
      hash = (37 * hash) + PLATELEFTTOPY_FIELD_NUMBER;
      hash = (53 * hash) + getPlateLeftTopY();
      hash = (37 * hash) + PLATERIGHTBTMX_FIELD_NUMBER;
      hash = (53 * hash) + getPlateRightBtmX();
      hash = (37 * hash) + PLATERIGHTBTMY_FIELD_NUMBER;
      hash = (53 * hash) + getPlateRightBtmY();
      hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + PLATENO_FIELD_NUMBER;
      hash = (53 * hash) + getPlateNo().hashCode();
      hash = (37 * hash) + PLATENOCONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPlateNoConfidence()));
      hash = (37 * hash) + PLATECLASS_FIELD_NUMBER;
      hash = (53 * hash) + getPlateClass().hashCode();
      hash = (37 * hash) + PLATECOLOR_FIELD_NUMBER;
      hash = (53 * hash) + getPlateColor().hashCode();
      hash = (37 * hash) + TRAFFICSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getTrafficStatus().hashCode();
      hash = (37 * hash) + VEHICLETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleType().hashCode();
      hash = (37 * hash) + VEHICLECOLOR_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleColor().hashCode();
      hash = (37 * hash) + VEHICLEBRAND_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleBrand().hashCode();
      hash = (37 * hash) + VEHICLEBRANDCONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVehicleBrandConfidence()));
      hash = (37 * hash) + VEHICLESUBBRAND_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleSubBrand().hashCode();
      hash = (37 * hash) + VEHICLESUBBRANDCONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVehicleSubBrandConfidence()));
      hash = (37 * hash) + FACENUM_FIELD_NUMBER;
      hash = (53 * hash) + getFaceNum();
      hash = (37 * hash) + SUNVISOR_FIELD_NUMBER;
      hash = (53 * hash) + getSunVisor();
      hash = (37 * hash) + SEATBELTSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getSeatBeltStatus();
      hash = (37 * hash) + ANNUALINSPECTIONNUM_FIELD_NUMBER;
      hash = (53 * hash) + getAnnualInspectionNum();
      hash = (37 * hash) + PENDANTSNUM_FIELD_NUMBER;
      hash = (53 * hash) + getPendantsNum();
      hash = (37 * hash) + ORNAMENTSNUM_FIELD_NUMBER;
      hash = (53 * hash) + getOrnamentsNum();
      hash = (37 * hash) + VEHICLEYEAR_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleYear().hashCode();
      hash = (37 * hash) + TISSUEBOXNUM_FIELD_NUMBER;
      hash = (53 * hash) + getTissueBoxNum();
      hash = (37 * hash) + CALLSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getCallStatus();
      hash = (37 * hash) + VIOLATIONTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getViolationType().hashCode();
      hash = (37 * hash) + DATASOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getDataSource().hashCode();
      hash = (37 * hash) + ELAPSEDTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getElapsedTime());
      hash = (37 * hash) + DATAINKAFKATIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDataInKafkaTime());
      hash = (37 * hash) + ENTRYTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEntryTime());
      hash = (37 * hash) + VEHICLESPEED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVehicleSpeed()));
      hash = (37 * hash) + MARKERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMarkerType();
      hash = (37 * hash) + VEHICLEHEADEND_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleHeadend();
      hash = (37 * hash) + SHIELDFACE_FIELD_NUMBER;
      hash = (53 * hash) + getShieldFace();
      hash = (37 * hash) + TASKTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getTaskType().hashCode();
      hash = (37 * hash) + INFOSOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getInfoSource().hashCode();
      hash = (37 * hash) + ALGORITHMVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getAlgorithmVersion().hashCode();
      hash = (37 * hash) + ALGORITHMVENDOR_FIELD_NUMBER;
      hash = (53 * hash) + getAlgorithmVendor();
      hash = (37 * hash) + EIGENVECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getEigenvector().hashCode();
      hash = (37 * hash) + ISSECONDARYSTRUCTURE_FIELD_NUMBER;
      hash = (53 * hash) + getIsSecondaryStructure();
      hash = (37 * hash) + STRUCTURETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStructureTime());
      hash = (37 * hash) + COLLECTIONID_FIELD_NUMBER;
      hash = (53 * hash) + getCollectionId().hashCode();
      hash = (37 * hash) + ADDITIONALINFO_FIELD_NUMBER;
      hash = (53 * hash) + getAdditionalInfo().hashCode();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource();
      hash = (37 * hash) + DRIVEWAYNO_FIELD_NUMBER;
      hash = (53 * hash) + getDrivewayNo().hashCode();
      hash = (37 * hash) + VEHICLELOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleLocation().hashCode();
      hash = (37 * hash) + PLATELOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getPlateLocation().hashCode();
      hash = (37 * hash) + MAINVISORPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getMainVisorPosition().hashCode();
      hash = (37 * hash) + VICEVISORPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getViceVisorPosition().hashCode();
      hash = (37 * hash) + MAINSEATBELTPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getMainSeatBeltPosition().hashCode();
      hash = (37 * hash) + VICESEATBELTPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getViceSeatBeltPosition().hashCode();
      hash = (37 * hash) + DRIVINGCALL_FIELD_NUMBER;
      hash = (53 * hash) + getDrivingCall().hashCode();
      hash = (37 * hash) + ANNUALINSPECTIONPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getAnnualInspectionPosition().hashCode();
      hash = (37 * hash) + PENDANTLOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getPendantLocation().hashCode();
      hash = (37 * hash) + TISSUEBOXLOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getTissueBoxLocation().hashCode();
      hash = (37 * hash) + PLATEPICURL_FIELD_NUMBER;
      hash = (53 * hash) + getPlatePicUrl().hashCode();
      hash = (37 * hash) + MOVEDIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + getMoveDirection();
      hash = (37 * hash) + SPECIALCAR_FIELD_NUMBER;
      hash = (53 * hash) + getSpecialCar();
      hash = (37 * hash) + MOVESPEED_FIELD_NUMBER;
      hash = (53 * hash) + getMoveSpeed();
      if (getSubImageListCount() > 0) {
        hash = (37 * hash) + SUBIMAGELIST_FIELD_NUMBER;
        hash = (53 * hash) + getSubImageListList().hashCode();
      }
      hash = (37 * hash) + STRUCTURENUM_FIELD_NUMBER;
      hash = (53 * hash) + getStructureNum();
      hash = (37 * hash) + ACCESSTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAccessTime());
      hash = (37 * hash) + HASPLATE_FIELD_NUMBER;
      hash = (53 * hash) + getHasPlate().hashCode();
      hash = (37 * hash) + STRUCTURESOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getStructureSource();
      hash = (37 * hash) + TOLLGATEID_FIELD_NUMBER;
      hash = (53 * hash) + getTollgateId().hashCode();
      hash = (37 * hash) + LANENO_FIELD_NUMBER;
      hash = (53 * hash) + getLaneNO();
      hash = (37 * hash) + WHOLECONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getWholeConfidence()));
      hash = (37 * hash) + DRIVERPHONECONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDriverPhoneConfidence()));
      hash = (37 * hash) + DEPUTYDRIVERPHONECONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDeputyDriverPhoneConfidence()));
      hash = (37 * hash) + DRIVERSEATBELTCONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDriverSeatBeltConfidence()));
      hash = (37 * hash) + DEPUTYDRIVERSEATBELTCONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDeputyDriverSeatBeltConfidence()));
      hash = (37 * hash) + ROOFITEMS_FIELD_NUMBER;
      hash = (53 * hash) + getRoofItems();
      hash = (37 * hash) + PLATEOCCLUSION_FIELD_NUMBER;
      hash = (53 * hash) + getPlateOcclusion();
      hash = (37 * hash) + FACIALOCCLUSION_FIELD_NUMBER;
      hash = (53 * hash) + getFacialOcclusion();
      hash = (37 * hash) + EXT_FIELD_NUMBER;
      hash = (53 * hash) + getExt().hashCode();
      hash = (37 * hash) + RELATEDTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getRelatedType().hashCode();
      if (getRelatedListCount() > 0) {
        hash = (37 * hash) + RELATEDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getRelatedListList().hashCode();
      }
      hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLongitude()));
      hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLatitude()));
      hash = (37 * hash) + DATAMARKS_FIELD_NUMBER;
      hash = (53 * hash) + getDataMarks();
      hash = (37 * hash) + TRACEINFO_FIELD_NUMBER;
      hash = (53 * hash) + getTraceInfo().hashCode();
      if (!internalGetExtMaps().getMap().isEmpty()) {
        hash = (37 * hash) + EXTMAPS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetExtMaps().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 机动车对象
     * </pre>
     *
     * Protobuf type {@code com.dtc.analytic.online.protobuf.MotorVehicle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.dtc.analytic.online.protobuf.MotorVehicle)
        com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 91:
            return internalGetExtMaps();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 91:
            return internalGetMutableExtMaps();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.class, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder.class);
      }

      // Construct using com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubImageListFieldBuilder();
          getRelatedListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        recordId_ = "";

        businessId_ = "";

        infoKind_ = 0;

        sourceId_ = "";

        storageUrl1_ = "";

        leftTopX_ = 0;

        leftTopY_ = 0;

        rightBtmX_ = 0;

        rightBtmY_ = 0;

        plateLeftTopX_ = 0;

        plateLeftTopY_ = 0;

        plateRightBtmX_ = 0;

        plateRightBtmY_ = 0;

        deviceId_ = "";

        plateNo_ = "";

        plateNoConfidence_ = 0D;

        plateClass_ = "";

        plateColor_ = "";

        trafficStatus_ = "";

        vehicleType_ = "";

        vehicleColor_ = "";

        vehicleBrand_ = "";

        vehicleBrandConfidence_ = 0D;

        vehicleSubBrand_ = "";

        vehicleSubBrandConfidence_ = 0D;

        faceNum_ = 0;

        sunVisor_ = 0;

        seatBeltStatus_ = 0;

        annualInspectionNum_ = 0;

        pendantsNum_ = 0;

        ornamentsNum_ = 0;

        vehicleYear_ = "";

        tissueBoxNum_ = 0;

        callStatus_ = 0;

        violationType_ = "";

        dataSource_ = "";

        elapsedTime_ = 0L;

        dataInKafkaTime_ = 0L;

        entryTime_ = 0L;

        vehicleSpeed_ = 0D;

        markerType_ = 0;

        vehicleHeadend_ = 0;

        shieldFace_ = 0;

        taskType_ = "";

        infoSource_ = "";

        algorithmVersion_ = "";

        algorithmVendor_ = 0;

        eigenvector_ = "";

        isSecondaryStructure_ = 0;

        structureTime_ = 0L;

        collectionId_ = "";

        additionalInfo_ = "";

        source_ = 0;

        drivewayNo_ = "";

        vehicleLocation_ = "";

        plateLocation_ = "";

        mainVisorPosition_ = "";

        viceVisorPosition_ = "";

        mainSeatBeltPosition_ = "";

        viceSeatBeltPosition_ = "";

        drivingCall_ = "";

        annualInspectionPosition_ = "";

        pendantLocation_ = "";

        tissueBoxLocation_ = "";

        platePicUrl_ = "";

        moveDirection_ = 0;

        specialCar_ = 0;

        moveSpeed_ = 0;

        if (subImageListBuilder_ == null) {
          subImageList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          subImageListBuilder_.clear();
        }
        structureNum_ = 0;

        accessTime_ = 0L;

        hasPlate_ = "";

        structureSource_ = 0;

        tollgateId_ = "";

        laneNO_ = 0;

        wholeConfidence_ = 0D;

        driverPhoneConfidence_ = 0D;

        deputyDriverPhoneConfidence_ = 0D;

        driverSeatBeltConfidence_ = 0D;

        deputyDriverSeatBeltConfidence_ = 0D;

        roofItems_ = 0;

        plateOcclusion_ = 0;

        facialOcclusion_ = 0;

        ext_ = "";

        relatedType_ = "";

        if (relatedListBuilder_ == null) {
          relatedList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          relatedListBuilder_.clear();
        }
        longitude_ = 0D;

        latitude_ = 0D;

        dataMarks_ = 0;

        traceInfo_ = "";

        internalGetMutableExtMaps().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_descriptor;
      }

      @java.lang.Override
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle getDefaultInstanceForType() {
        return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.getDefaultInstance();
      }

      @java.lang.Override
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle build() {
        com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle buildPartial() {
        com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle result = new com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle(this);
        int from_bitField0_ = bitField0_;
        result.recordId_ = recordId_;
        result.businessId_ = businessId_;
        result.infoKind_ = infoKind_;
        result.sourceId_ = sourceId_;
        result.storageUrl1_ = storageUrl1_;
        result.leftTopX_ = leftTopX_;
        result.leftTopY_ = leftTopY_;
        result.rightBtmX_ = rightBtmX_;
        result.rightBtmY_ = rightBtmY_;
        result.plateLeftTopX_ = plateLeftTopX_;
        result.plateLeftTopY_ = plateLeftTopY_;
        result.plateRightBtmX_ = plateRightBtmX_;
        result.plateRightBtmY_ = plateRightBtmY_;
        result.deviceId_ = deviceId_;
        result.plateNo_ = plateNo_;
        result.plateNoConfidence_ = plateNoConfidence_;
        result.plateClass_ = plateClass_;
        result.plateColor_ = plateColor_;
        result.trafficStatus_ = trafficStatus_;
        result.vehicleType_ = vehicleType_;
        result.vehicleColor_ = vehicleColor_;
        result.vehicleBrand_ = vehicleBrand_;
        result.vehicleBrandConfidence_ = vehicleBrandConfidence_;
        result.vehicleSubBrand_ = vehicleSubBrand_;
        result.vehicleSubBrandConfidence_ = vehicleSubBrandConfidence_;
        result.faceNum_ = faceNum_;
        result.sunVisor_ = sunVisor_;
        result.seatBeltStatus_ = seatBeltStatus_;
        result.annualInspectionNum_ = annualInspectionNum_;
        result.pendantsNum_ = pendantsNum_;
        result.ornamentsNum_ = ornamentsNum_;
        result.vehicleYear_ = vehicleYear_;
        result.tissueBoxNum_ = tissueBoxNum_;
        result.callStatus_ = callStatus_;
        result.violationType_ = violationType_;
        result.dataSource_ = dataSource_;
        result.elapsedTime_ = elapsedTime_;
        result.dataInKafkaTime_ = dataInKafkaTime_;
        result.entryTime_ = entryTime_;
        result.vehicleSpeed_ = vehicleSpeed_;
        result.markerType_ = markerType_;
        result.vehicleHeadend_ = vehicleHeadend_;
        result.shieldFace_ = shieldFace_;
        result.taskType_ = taskType_;
        result.infoSource_ = infoSource_;
        result.algorithmVersion_ = algorithmVersion_;
        result.algorithmVendor_ = algorithmVendor_;
        result.eigenvector_ = eigenvector_;
        result.isSecondaryStructure_ = isSecondaryStructure_;
        result.structureTime_ = structureTime_;
        result.collectionId_ = collectionId_;
        result.additionalInfo_ = additionalInfo_;
        result.source_ = source_;
        result.drivewayNo_ = drivewayNo_;
        result.vehicleLocation_ = vehicleLocation_;
        result.plateLocation_ = plateLocation_;
        result.mainVisorPosition_ = mainVisorPosition_;
        result.viceVisorPosition_ = viceVisorPosition_;
        result.mainSeatBeltPosition_ = mainSeatBeltPosition_;
        result.viceSeatBeltPosition_ = viceSeatBeltPosition_;
        result.drivingCall_ = drivingCall_;
        result.annualInspectionPosition_ = annualInspectionPosition_;
        result.pendantLocation_ = pendantLocation_;
        result.tissueBoxLocation_ = tissueBoxLocation_;
        result.platePicUrl_ = platePicUrl_;
        result.moveDirection_ = moveDirection_;
        result.specialCar_ = specialCar_;
        result.moveSpeed_ = moveSpeed_;
        if (subImageListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            subImageList_ = java.util.Collections.unmodifiableList(subImageList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.subImageList_ = subImageList_;
        } else {
          result.subImageList_ = subImageListBuilder_.build();
        }
        result.structureNum_ = structureNum_;
        result.accessTime_ = accessTime_;
        result.hasPlate_ = hasPlate_;
        result.structureSource_ = structureSource_;
        result.tollgateId_ = tollgateId_;
        result.laneNO_ = laneNO_;
        result.wholeConfidence_ = wholeConfidence_;
        result.driverPhoneConfidence_ = driverPhoneConfidence_;
        result.deputyDriverPhoneConfidence_ = deputyDriverPhoneConfidence_;
        result.driverSeatBeltConfidence_ = driverSeatBeltConfidence_;
        result.deputyDriverSeatBeltConfidence_ = deputyDriverSeatBeltConfidence_;
        result.roofItems_ = roofItems_;
        result.plateOcclusion_ = plateOcclusion_;
        result.facialOcclusion_ = facialOcclusion_;
        result.ext_ = ext_;
        result.relatedType_ = relatedType_;
        if (relatedListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            relatedList_ = java.util.Collections.unmodifiableList(relatedList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.relatedList_ = relatedList_;
        } else {
          result.relatedList_ = relatedListBuilder_.build();
        }
        result.longitude_ = longitude_;
        result.latitude_ = latitude_;
        result.dataMarks_ = dataMarks_;
        result.traceInfo_ = traceInfo_;
        result.extMaps_ = internalGetExtMaps();
        result.extMaps_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle) {
          return mergeFrom((com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle other) {
        if (other == com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.getDefaultInstance()) return this;
        if (!other.getRecordId().isEmpty()) {
          recordId_ = other.recordId_;
          onChanged();
        }
        if (!other.getBusinessId().isEmpty()) {
          businessId_ = other.businessId_;
          onChanged();
        }
        if (other.getInfoKind() != 0) {
          setInfoKind(other.getInfoKind());
        }
        if (!other.getSourceId().isEmpty()) {
          sourceId_ = other.sourceId_;
          onChanged();
        }
        if (!other.getStorageUrl1().isEmpty()) {
          storageUrl1_ = other.storageUrl1_;
          onChanged();
        }
        if (other.getLeftTopX() != 0) {
          setLeftTopX(other.getLeftTopX());
        }
        if (other.getLeftTopY() != 0) {
          setLeftTopY(other.getLeftTopY());
        }
        if (other.getRightBtmX() != 0) {
          setRightBtmX(other.getRightBtmX());
        }
        if (other.getRightBtmY() != 0) {
          setRightBtmY(other.getRightBtmY());
        }
        if (other.getPlateLeftTopX() != 0) {
          setPlateLeftTopX(other.getPlateLeftTopX());
        }
        if (other.getPlateLeftTopY() != 0) {
          setPlateLeftTopY(other.getPlateLeftTopY());
        }
        if (other.getPlateRightBtmX() != 0) {
          setPlateRightBtmX(other.getPlateRightBtmX());
        }
        if (other.getPlateRightBtmY() != 0) {
          setPlateRightBtmY(other.getPlateRightBtmY());
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (!other.getPlateNo().isEmpty()) {
          plateNo_ = other.plateNo_;
          onChanged();
        }
        if (other.getPlateNoConfidence() != 0D) {
          setPlateNoConfidence(other.getPlateNoConfidence());
        }
        if (!other.getPlateClass().isEmpty()) {
          plateClass_ = other.plateClass_;
          onChanged();
        }
        if (!other.getPlateColor().isEmpty()) {
          plateColor_ = other.plateColor_;
          onChanged();
        }
        if (!other.getTrafficStatus().isEmpty()) {
          trafficStatus_ = other.trafficStatus_;
          onChanged();
        }
        if (!other.getVehicleType().isEmpty()) {
          vehicleType_ = other.vehicleType_;
          onChanged();
        }
        if (!other.getVehicleColor().isEmpty()) {
          vehicleColor_ = other.vehicleColor_;
          onChanged();
        }
        if (!other.getVehicleBrand().isEmpty()) {
          vehicleBrand_ = other.vehicleBrand_;
          onChanged();
        }
        if (other.getVehicleBrandConfidence() != 0D) {
          setVehicleBrandConfidence(other.getVehicleBrandConfidence());
        }
        if (!other.getVehicleSubBrand().isEmpty()) {
          vehicleSubBrand_ = other.vehicleSubBrand_;
          onChanged();
        }
        if (other.getVehicleSubBrandConfidence() != 0D) {
          setVehicleSubBrandConfidence(other.getVehicleSubBrandConfidence());
        }
        if (other.getFaceNum() != 0) {
          setFaceNum(other.getFaceNum());
        }
        if (other.getSunVisor() != 0) {
          setSunVisor(other.getSunVisor());
        }
        if (other.getSeatBeltStatus() != 0) {
          setSeatBeltStatus(other.getSeatBeltStatus());
        }
        if (other.getAnnualInspectionNum() != 0) {
          setAnnualInspectionNum(other.getAnnualInspectionNum());
        }
        if (other.getPendantsNum() != 0) {
          setPendantsNum(other.getPendantsNum());
        }
        if (other.getOrnamentsNum() != 0) {
          setOrnamentsNum(other.getOrnamentsNum());
        }
        if (!other.getVehicleYear().isEmpty()) {
          vehicleYear_ = other.vehicleYear_;
          onChanged();
        }
        if (other.getTissueBoxNum() != 0) {
          setTissueBoxNum(other.getTissueBoxNum());
        }
        if (other.getCallStatus() != 0) {
          setCallStatus(other.getCallStatus());
        }
        if (!other.getViolationType().isEmpty()) {
          violationType_ = other.violationType_;
          onChanged();
        }
        if (!other.getDataSource().isEmpty()) {
          dataSource_ = other.dataSource_;
          onChanged();
        }
        if (other.getElapsedTime() != 0L) {
          setElapsedTime(other.getElapsedTime());
        }
        if (other.getDataInKafkaTime() != 0L) {
          setDataInKafkaTime(other.getDataInKafkaTime());
        }
        if (other.getEntryTime() != 0L) {
          setEntryTime(other.getEntryTime());
        }
        if (other.getVehicleSpeed() != 0D) {
          setVehicleSpeed(other.getVehicleSpeed());
        }
        if (other.getMarkerType() != 0) {
          setMarkerType(other.getMarkerType());
        }
        if (other.getVehicleHeadend() != 0) {
          setVehicleHeadend(other.getVehicleHeadend());
        }
        if (other.getShieldFace() != 0) {
          setShieldFace(other.getShieldFace());
        }
        if (!other.getTaskType().isEmpty()) {
          taskType_ = other.taskType_;
          onChanged();
        }
        if (!other.getInfoSource().isEmpty()) {
          infoSource_ = other.infoSource_;
          onChanged();
        }
        if (!other.getAlgorithmVersion().isEmpty()) {
          algorithmVersion_ = other.algorithmVersion_;
          onChanged();
        }
        if (other.getAlgorithmVendor() != 0) {
          setAlgorithmVendor(other.getAlgorithmVendor());
        }
        if (!other.getEigenvector().isEmpty()) {
          eigenvector_ = other.eigenvector_;
          onChanged();
        }
        if (other.getIsSecondaryStructure() != 0) {
          setIsSecondaryStructure(other.getIsSecondaryStructure());
        }
        if (other.getStructureTime() != 0L) {
          setStructureTime(other.getStructureTime());
        }
        if (!other.getCollectionId().isEmpty()) {
          collectionId_ = other.collectionId_;
          onChanged();
        }
        if (!other.getAdditionalInfo().isEmpty()) {
          additionalInfo_ = other.additionalInfo_;
          onChanged();
        }
        if (other.getSource() != 0) {
          setSource(other.getSource());
        }
        if (!other.getDrivewayNo().isEmpty()) {
          drivewayNo_ = other.drivewayNo_;
          onChanged();
        }
        if (!other.getVehicleLocation().isEmpty()) {
          vehicleLocation_ = other.vehicleLocation_;
          onChanged();
        }
        if (!other.getPlateLocation().isEmpty()) {
          plateLocation_ = other.plateLocation_;
          onChanged();
        }
        if (!other.getMainVisorPosition().isEmpty()) {
          mainVisorPosition_ = other.mainVisorPosition_;
          onChanged();
        }
        if (!other.getViceVisorPosition().isEmpty()) {
          viceVisorPosition_ = other.viceVisorPosition_;
          onChanged();
        }
        if (!other.getMainSeatBeltPosition().isEmpty()) {
          mainSeatBeltPosition_ = other.mainSeatBeltPosition_;
          onChanged();
        }
        if (!other.getViceSeatBeltPosition().isEmpty()) {
          viceSeatBeltPosition_ = other.viceSeatBeltPosition_;
          onChanged();
        }
        if (!other.getDrivingCall().isEmpty()) {
          drivingCall_ = other.drivingCall_;
          onChanged();
        }
        if (!other.getAnnualInspectionPosition().isEmpty()) {
          annualInspectionPosition_ = other.annualInspectionPosition_;
          onChanged();
        }
        if (!other.getPendantLocation().isEmpty()) {
          pendantLocation_ = other.pendantLocation_;
          onChanged();
        }
        if (!other.getTissueBoxLocation().isEmpty()) {
          tissueBoxLocation_ = other.tissueBoxLocation_;
          onChanged();
        }
        if (!other.getPlatePicUrl().isEmpty()) {
          platePicUrl_ = other.platePicUrl_;
          onChanged();
        }
        if (other.getMoveDirection() != 0) {
          setMoveDirection(other.getMoveDirection());
        }
        if (other.getSpecialCar() != 0) {
          setSpecialCar(other.getSpecialCar());
        }
        if (other.getMoveSpeed() != 0) {
          setMoveSpeed(other.getMoveSpeed());
        }
        if (subImageListBuilder_ == null) {
          if (!other.subImageList_.isEmpty()) {
            if (subImageList_.isEmpty()) {
              subImageList_ = other.subImageList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSubImageListIsMutable();
              subImageList_.addAll(other.subImageList_);
            }
            onChanged();
          }
        } else {
          if (!other.subImageList_.isEmpty()) {
            if (subImageListBuilder_.isEmpty()) {
              subImageListBuilder_.dispose();
              subImageListBuilder_ = null;
              subImageList_ = other.subImageList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              subImageListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSubImageListFieldBuilder() : null;
            } else {
              subImageListBuilder_.addAllMessages(other.subImageList_);
            }
          }
        }
        if (other.getStructureNum() != 0) {
          setStructureNum(other.getStructureNum());
        }
        if (other.getAccessTime() != 0L) {
          setAccessTime(other.getAccessTime());
        }
        if (!other.getHasPlate().isEmpty()) {
          hasPlate_ = other.hasPlate_;
          onChanged();
        }
        if (other.getStructureSource() != 0) {
          setStructureSource(other.getStructureSource());
        }
        if (!other.getTollgateId().isEmpty()) {
          tollgateId_ = other.tollgateId_;
          onChanged();
        }
        if (other.getLaneNO() != 0) {
          setLaneNO(other.getLaneNO());
        }
        if (other.getWholeConfidence() != 0D) {
          setWholeConfidence(other.getWholeConfidence());
        }
        if (other.getDriverPhoneConfidence() != 0D) {
          setDriverPhoneConfidence(other.getDriverPhoneConfidence());
        }
        if (other.getDeputyDriverPhoneConfidence() != 0D) {
          setDeputyDriverPhoneConfidence(other.getDeputyDriverPhoneConfidence());
        }
        if (other.getDriverSeatBeltConfidence() != 0D) {
          setDriverSeatBeltConfidence(other.getDriverSeatBeltConfidence());
        }
        if (other.getDeputyDriverSeatBeltConfidence() != 0D) {
          setDeputyDriverSeatBeltConfidence(other.getDeputyDriverSeatBeltConfidence());
        }
        if (other.getRoofItems() != 0) {
          setRoofItems(other.getRoofItems());
        }
        if (other.getPlateOcclusion() != 0) {
          setPlateOcclusion(other.getPlateOcclusion());
        }
        if (other.getFacialOcclusion() != 0) {
          setFacialOcclusion(other.getFacialOcclusion());
        }
        if (!other.getExt().isEmpty()) {
          ext_ = other.ext_;
          onChanged();
        }
        if (!other.getRelatedType().isEmpty()) {
          relatedType_ = other.relatedType_;
          onChanged();
        }
        if (relatedListBuilder_ == null) {
          if (!other.relatedList_.isEmpty()) {
            if (relatedList_.isEmpty()) {
              relatedList_ = other.relatedList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRelatedListIsMutable();
              relatedList_.addAll(other.relatedList_);
            }
            onChanged();
          }
        } else {
          if (!other.relatedList_.isEmpty()) {
            if (relatedListBuilder_.isEmpty()) {
              relatedListBuilder_.dispose();
              relatedListBuilder_ = null;
              relatedList_ = other.relatedList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              relatedListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRelatedListFieldBuilder() : null;
            } else {
              relatedListBuilder_.addAllMessages(other.relatedList_);
            }
          }
        }
        if (other.getLongitude() != 0D) {
          setLongitude(other.getLongitude());
        }
        if (other.getLatitude() != 0D) {
          setLatitude(other.getLatitude());
        }
        if (other.getDataMarks() != 0) {
          setDataMarks(other.getDataMarks());
        }
        if (!other.getTraceInfo().isEmpty()) {
          traceInfo_ = other.traceInfo_;
          onChanged();
        }
        internalGetMutableExtMaps().mergeFrom(
            other.internalGetExtMaps());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object recordId_ = "";
      /**
       * <pre>
       *记录编号
       * </pre>
       *
       * <code>string recordId = 1;</code>
       * @return The recordId.
       */
      public java.lang.String getRecordId() {
        java.lang.Object ref = recordId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          recordId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *记录编号
       * </pre>
       *
       * <code>string recordId = 1;</code>
       * @return The bytes for recordId.
       */
      public com.google.protobuf.ByteString
          getRecordIdBytes() {
        java.lang.Object ref = recordId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          recordId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *记录编号
       * </pre>
       *
       * <code>string recordId = 1;</code>
       * @param value The recordId to set.
       * @return This builder for chaining.
       */
      public Builder setRecordId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        recordId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *记录编号
       * </pre>
       *
       * <code>string recordId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecordId() {
        
        recordId_ = getDefaultInstance().getRecordId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *记录编号
       * </pre>
       *
       * <code>string recordId = 1;</code>
       * @param value The bytes for recordId to set.
       * @return This builder for chaining.
       */
      public Builder setRecordIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        recordId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object businessId_ = "";
      /**
       * <pre>
       *业务ID
       * </pre>
       *
       * <code>string businessId = 2;</code>
       * @return The businessId.
       */
      public java.lang.String getBusinessId() {
        java.lang.Object ref = businessId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          businessId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *业务ID
       * </pre>
       *
       * <code>string businessId = 2;</code>
       * @return The bytes for businessId.
       */
      public com.google.protobuf.ByteString
          getBusinessIdBytes() {
        java.lang.Object ref = businessId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          businessId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务ID
       * </pre>
       *
       * <code>string businessId = 2;</code>
       * @param value The businessId to set.
       * @return This builder for chaining.
       */
      public Builder setBusinessId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        businessId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务ID
       * </pre>
       *
       * <code>string businessId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBusinessId() {
        
        businessId_ = getDefaultInstance().getBusinessId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务ID
       * </pre>
       *
       * <code>string businessId = 2;</code>
       * @param value The bytes for businessId to set.
       * @return This builder for chaining.
       */
      public Builder setBusinessIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        businessId_ = value;
        onChanged();
        return this;
      }

      private int infoKind_ ;
      /**
       * <pre>
       *信息分类
       * </pre>
       *
       * <code>int32 infoKind = 3;</code>
       * @return The infoKind.
       */
      public int getInfoKind() {
        return infoKind_;
      }
      /**
       * <pre>
       *信息分类
       * </pre>
       *
       * <code>int32 infoKind = 3;</code>
       * @param value The infoKind to set.
       * @return This builder for chaining.
       */
      public Builder setInfoKind(int value) {
        
        infoKind_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信息分类
       * </pre>
       *
       * <code>int32 infoKind = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInfoKind() {
        
        infoKind_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object sourceId_ = "";
      /**
       * <pre>
       *来源标识
       * </pre>
       *
       * <code>string sourceId = 4;</code>
       * @return The sourceId.
       */
      public java.lang.String getSourceId() {
        java.lang.Object ref = sourceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sourceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *来源标识
       * </pre>
       *
       * <code>string sourceId = 4;</code>
       * @return The bytes for sourceId.
       */
      public com.google.protobuf.ByteString
          getSourceIdBytes() {
        java.lang.Object ref = sourceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sourceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *来源标识
       * </pre>
       *
       * <code>string sourceId = 4;</code>
       * @param value The sourceId to set.
       * @return This builder for chaining.
       */
      public Builder setSourceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sourceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *来源标识
       * </pre>
       *
       * <code>string sourceId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceId() {
        
        sourceId_ = getDefaultInstance().getSourceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *来源标识
       * </pre>
       *
       * <code>string sourceId = 4;</code>
       * @param value The bytes for sourceId to set.
       * @return This builder for chaining.
       */
      public Builder setSourceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sourceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object storageUrl1_ = "";
      /**
       * <pre>
       *近景照片
       * </pre>
       *
       * <code>string storageUrl1 = 5;</code>
       * @return The storageUrl1.
       */
      public java.lang.String getStorageUrl1() {
        java.lang.Object ref = storageUrl1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          storageUrl1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *近景照片
       * </pre>
       *
       * <code>string storageUrl1 = 5;</code>
       * @return The bytes for storageUrl1.
       */
      public com.google.protobuf.ByteString
          getStorageUrl1Bytes() {
        java.lang.Object ref = storageUrl1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          storageUrl1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *近景照片
       * </pre>
       *
       * <code>string storageUrl1 = 5;</code>
       * @param value The storageUrl1 to set.
       * @return This builder for chaining.
       */
      public Builder setStorageUrl1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        storageUrl1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *近景照片
       * </pre>
       *
       * <code>string storageUrl1 = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStorageUrl1() {
        
        storageUrl1_ = getDefaultInstance().getStorageUrl1();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *近景照片
       * </pre>
       *
       * <code>string storageUrl1 = 5;</code>
       * @param value The bytes for storageUrl1 to set.
       * @return This builder for chaining.
       */
      public Builder setStorageUrl1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        storageUrl1_ = value;
        onChanged();
        return this;
      }

      private int leftTopX_ ;
      /**
       * <pre>
       *左上角X坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 leftTopX = 6;</code>
       * @return The leftTopX.
       */
      public int getLeftTopX() {
        return leftTopX_;
      }
      /**
       * <pre>
       *左上角X坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 leftTopX = 6;</code>
       * @param value The leftTopX to set.
       * @return This builder for chaining.
       */
      public Builder setLeftTopX(int value) {
        
        leftTopX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *左上角X坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 leftTopX = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftTopX() {
        
        leftTopX_ = 0;
        onChanged();
        return this;
      }

      private int leftTopY_ ;
      /**
       * <pre>
       *左上角Y坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 leftTopY = 7;</code>
       * @return The leftTopY.
       */
      public int getLeftTopY() {
        return leftTopY_;
      }
      /**
       * <pre>
       *左上角Y坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 leftTopY = 7;</code>
       * @param value The leftTopY to set.
       * @return This builder for chaining.
       */
      public Builder setLeftTopY(int value) {
        
        leftTopY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *左上角Y坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 leftTopY = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftTopY() {
        
        leftTopY_ = 0;
        onChanged();
        return this;
      }

      private int rightBtmX_ ;
      /**
       * <pre>
       *右下角X坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 rightBtmX = 8;</code>
       * @return The rightBtmX.
       */
      public int getRightBtmX() {
        return rightBtmX_;
      }
      /**
       * <pre>
       *右下角X坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 rightBtmX = 8;</code>
       * @param value The rightBtmX to set.
       * @return This builder for chaining.
       */
      public Builder setRightBtmX(int value) {
        
        rightBtmX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *右下角X坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 rightBtmX = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightBtmX() {
        
        rightBtmX_ = 0;
        onChanged();
        return this;
      }

      private int rightBtmY_ ;
      /**
       * <pre>
       *右下角Y坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 rightBtmY = 9;</code>
       * @return The rightBtmY.
       */
      public int getRightBtmY() {
        return rightBtmY_;
      }
      /**
       * <pre>
       *右下角Y坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 rightBtmY = 9;</code>
       * @param value The rightBtmY to set.
       * @return This builder for chaining.
       */
      public Builder setRightBtmY(int value) {
        
        rightBtmY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *右下角Y坐标(车体的轮廓外接矩形在画面中的位置)
       * </pre>
       *
       * <code>int32 rightBtmY = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightBtmY() {
        
        rightBtmY_ = 0;
        onChanged();
        return this;
      }

      private int plateLeftTopX_ ;
      /**
       * <pre>
       *车牌左上角X坐标
       * </pre>
       *
       * <code>int32 plateLeftTopX = 10;</code>
       * @return The plateLeftTopX.
       */
      public int getPlateLeftTopX() {
        return plateLeftTopX_;
      }
      /**
       * <pre>
       *车牌左上角X坐标
       * </pre>
       *
       * <code>int32 plateLeftTopX = 10;</code>
       * @param value The plateLeftTopX to set.
       * @return This builder for chaining.
       */
      public Builder setPlateLeftTopX(int value) {
        
        plateLeftTopX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌左上角X坐标
       * </pre>
       *
       * <code>int32 plateLeftTopX = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateLeftTopX() {
        
        plateLeftTopX_ = 0;
        onChanged();
        return this;
      }

      private int plateLeftTopY_ ;
      /**
       * <pre>
       *车牌左上角y坐标
       * </pre>
       *
       * <code>int32 plateLeftTopY = 11;</code>
       * @return The plateLeftTopY.
       */
      public int getPlateLeftTopY() {
        return plateLeftTopY_;
      }
      /**
       * <pre>
       *车牌左上角y坐标
       * </pre>
       *
       * <code>int32 plateLeftTopY = 11;</code>
       * @param value The plateLeftTopY to set.
       * @return This builder for chaining.
       */
      public Builder setPlateLeftTopY(int value) {
        
        plateLeftTopY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌左上角y坐标
       * </pre>
       *
       * <code>int32 plateLeftTopY = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateLeftTopY() {
        
        plateLeftTopY_ = 0;
        onChanged();
        return this;
      }

      private int plateRightBtmX_ ;
      /**
       * <pre>
       *车牌右下角X坐标
       * </pre>
       *
       * <code>int32 plateRightBtmX = 12;</code>
       * @return The plateRightBtmX.
       */
      public int getPlateRightBtmX() {
        return plateRightBtmX_;
      }
      /**
       * <pre>
       *车牌右下角X坐标
       * </pre>
       *
       * <code>int32 plateRightBtmX = 12;</code>
       * @param value The plateRightBtmX to set.
       * @return This builder for chaining.
       */
      public Builder setPlateRightBtmX(int value) {
        
        plateRightBtmX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌右下角X坐标
       * </pre>
       *
       * <code>int32 plateRightBtmX = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateRightBtmX() {
        
        plateRightBtmX_ = 0;
        onChanged();
        return this;
      }

      private int plateRightBtmY_ ;
      /**
       * <pre>
       *车牌右下角y坐标
       * </pre>
       *
       * <code>int32 plateRightBtmY = 13;</code>
       * @return The plateRightBtmY.
       */
      public int getPlateRightBtmY() {
        return plateRightBtmY_;
      }
      /**
       * <pre>
       *车牌右下角y坐标
       * </pre>
       *
       * <code>int32 plateRightBtmY = 13;</code>
       * @param value The plateRightBtmY to set.
       * @return This builder for chaining.
       */
      public Builder setPlateRightBtmY(int value) {
        
        plateRightBtmY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌右下角y坐标
       * </pre>
       *
       * <code>int32 plateRightBtmY = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateRightBtmY() {
        
        plateRightBtmY_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object deviceId_ = "";
      /**
       * <pre>
       *设备编号
       * </pre>
       *
       * <code>string deviceId = 14;</code>
       * @return The deviceId.
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *设备编号
       * </pre>
       *
       * <code>string deviceId = 14;</code>
       * @return The bytes for deviceId.
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *设备编号
       * </pre>
       *
       * <code>string deviceId = 14;</code>
       * @param value The deviceId to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备编号
       * </pre>
       *
       * <code>string deviceId = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备编号
       * </pre>
       *
       * <code>string deviceId = 14;</code>
       * @param value The bytes for deviceId to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object plateNo_ = "";
      /**
       * <pre>
       *号牌号码
       * </pre>
       *
       * <code>string plateNo = 15;</code>
       * @return The plateNo.
       */
      public java.lang.String getPlateNo() {
        java.lang.Object ref = plateNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          plateNo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *号牌号码
       * </pre>
       *
       * <code>string plateNo = 15;</code>
       * @return The bytes for plateNo.
       */
      public com.google.protobuf.ByteString
          getPlateNoBytes() {
        java.lang.Object ref = plateNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plateNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *号牌号码
       * </pre>
       *
       * <code>string plateNo = 15;</code>
       * @param value The plateNo to set.
       * @return This builder for chaining.
       */
      public Builder setPlateNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        plateNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *号牌号码
       * </pre>
       *
       * <code>string plateNo = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateNo() {
        
        plateNo_ = getDefaultInstance().getPlateNo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *号牌号码
       * </pre>
       *
       * <code>string plateNo = 15;</code>
       * @param value The bytes for plateNo to set.
       * @return This builder for chaining.
       */
      public Builder setPlateNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        plateNo_ = value;
        onChanged();
        return this;
      }

      private double plateNoConfidence_ ;
      /**
       * <pre>
       *号牌置信度
       * </pre>
       *
       * <code>double plateNoConfidence = 16;</code>
       * @return The plateNoConfidence.
       */
      public double getPlateNoConfidence() {
        return plateNoConfidence_;
      }
      /**
       * <pre>
       *号牌置信度
       * </pre>
       *
       * <code>double plateNoConfidence = 16;</code>
       * @param value The plateNoConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setPlateNoConfidence(double value) {
        
        plateNoConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *号牌置信度
       * </pre>
       *
       * <code>double plateNoConfidence = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateNoConfidence() {
        
        plateNoConfidence_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object plateClass_ = "";
      /**
       * <pre>
       *号牌种类
       * </pre>
       *
       * <code>string plateClass = 17;</code>
       * @return The plateClass.
       */
      public java.lang.String getPlateClass() {
        java.lang.Object ref = plateClass_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          plateClass_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *号牌种类
       * </pre>
       *
       * <code>string plateClass = 17;</code>
       * @return The bytes for plateClass.
       */
      public com.google.protobuf.ByteString
          getPlateClassBytes() {
        java.lang.Object ref = plateClass_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plateClass_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *号牌种类
       * </pre>
       *
       * <code>string plateClass = 17;</code>
       * @param value The plateClass to set.
       * @return This builder for chaining.
       */
      public Builder setPlateClass(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        plateClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *号牌种类
       * </pre>
       *
       * <code>string plateClass = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateClass() {
        
        plateClass_ = getDefaultInstance().getPlateClass();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *号牌种类
       * </pre>
       *
       * <code>string plateClass = 17;</code>
       * @param value The bytes for plateClass to set.
       * @return This builder for chaining.
       */
      public Builder setPlateClassBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        plateClass_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object plateColor_ = "";
      /**
       * <pre>
       *号牌颜色
       * </pre>
       *
       * <code>string plateColor = 18;</code>
       * @return The plateColor.
       */
      public java.lang.String getPlateColor() {
        java.lang.Object ref = plateColor_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          plateColor_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *号牌颜色
       * </pre>
       *
       * <code>string plateColor = 18;</code>
       * @return The bytes for plateColor.
       */
      public com.google.protobuf.ByteString
          getPlateColorBytes() {
        java.lang.Object ref = plateColor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plateColor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *号牌颜色
       * </pre>
       *
       * <code>string plateColor = 18;</code>
       * @param value The plateColor to set.
       * @return This builder for chaining.
       */
      public Builder setPlateColor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        plateColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *号牌颜色
       * </pre>
       *
       * <code>string plateColor = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateColor() {
        
        plateColor_ = getDefaultInstance().getPlateColor();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *号牌颜色
       * </pre>
       *
       * <code>string plateColor = 18;</code>
       * @param value The bytes for plateColor to set.
       * @return This builder for chaining.
       */
      public Builder setPlateColorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        plateColor_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object trafficStatus_ = "";
      /**
       * <pre>
       *行驶状态
       * </pre>
       *
       * <code>string trafficStatus = 19;</code>
       * @return The trafficStatus.
       */
      public java.lang.String getTrafficStatus() {
        java.lang.Object ref = trafficStatus_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          trafficStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *行驶状态
       * </pre>
       *
       * <code>string trafficStatus = 19;</code>
       * @return The bytes for trafficStatus.
       */
      public com.google.protobuf.ByteString
          getTrafficStatusBytes() {
        java.lang.Object ref = trafficStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trafficStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *行驶状态
       * </pre>
       *
       * <code>string trafficStatus = 19;</code>
       * @param value The trafficStatus to set.
       * @return This builder for chaining.
       */
      public Builder setTrafficStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        trafficStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *行驶状态
       * </pre>
       *
       * <code>string trafficStatus = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearTrafficStatus() {
        
        trafficStatus_ = getDefaultInstance().getTrafficStatus();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *行驶状态
       * </pre>
       *
       * <code>string trafficStatus = 19;</code>
       * @param value The bytes for trafficStatus to set.
       * @return This builder for chaining.
       */
      public Builder setTrafficStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        trafficStatus_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object vehicleType_ = "";
      /**
       * <pre>
       *车辆类型
       * </pre>
       *
       * <code>string vehicleType = 20;</code>
       * @return The vehicleType.
       */
      public java.lang.String getVehicleType() {
        java.lang.Object ref = vehicleType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vehicleType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车辆类型
       * </pre>
       *
       * <code>string vehicleType = 20;</code>
       * @return The bytes for vehicleType.
       */
      public com.google.protobuf.ByteString
          getVehicleTypeBytes() {
        java.lang.Object ref = vehicleType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vehicleType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车辆类型
       * </pre>
       *
       * <code>string vehicleType = 20;</code>
       * @param value The vehicleType to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        vehicleType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆类型
       * </pre>
       *
       * <code>string vehicleType = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleType() {
        
        vehicleType_ = getDefaultInstance().getVehicleType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆类型
       * </pre>
       *
       * <code>string vehicleType = 20;</code>
       * @param value The bytes for vehicleType to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        vehicleType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object vehicleColor_ = "";
      /**
       * <pre>
       *车身颜色
       * </pre>
       *
       * <code>string vehicleColor = 21;</code>
       * @return The vehicleColor.
       */
      public java.lang.String getVehicleColor() {
        java.lang.Object ref = vehicleColor_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vehicleColor_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车身颜色
       * </pre>
       *
       * <code>string vehicleColor = 21;</code>
       * @return The bytes for vehicleColor.
       */
      public com.google.protobuf.ByteString
          getVehicleColorBytes() {
        java.lang.Object ref = vehicleColor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vehicleColor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车身颜色
       * </pre>
       *
       * <code>string vehicleColor = 21;</code>
       * @param value The vehicleColor to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleColor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        vehicleColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车身颜色
       * </pre>
       *
       * <code>string vehicleColor = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleColor() {
        
        vehicleColor_ = getDefaultInstance().getVehicleColor();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车身颜色
       * </pre>
       *
       * <code>string vehicleColor = 21;</code>
       * @param value The bytes for vehicleColor to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleColorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        vehicleColor_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object vehicleBrand_ = "";
      /**
       * <pre>
       *车辆品牌
       * </pre>
       *
       * <code>string vehicleBrand = 22;</code>
       * @return The vehicleBrand.
       */
      public java.lang.String getVehicleBrand() {
        java.lang.Object ref = vehicleBrand_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vehicleBrand_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车辆品牌
       * </pre>
       *
       * <code>string vehicleBrand = 22;</code>
       * @return The bytes for vehicleBrand.
       */
      public com.google.protobuf.ByteString
          getVehicleBrandBytes() {
        java.lang.Object ref = vehicleBrand_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vehicleBrand_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车辆品牌
       * </pre>
       *
       * <code>string vehicleBrand = 22;</code>
       * @param value The vehicleBrand to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleBrand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        vehicleBrand_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆品牌
       * </pre>
       *
       * <code>string vehicleBrand = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleBrand() {
        
        vehicleBrand_ = getDefaultInstance().getVehicleBrand();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆品牌
       * </pre>
       *
       * <code>string vehicleBrand = 22;</code>
       * @param value The bytes for vehicleBrand to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleBrandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        vehicleBrand_ = value;
        onChanged();
        return this;
      }

      private double vehicleBrandConfidence_ ;
      /**
       * <pre>
       *车辆品牌置信度
       * </pre>
       *
       * <code>double vehicleBrandConfidence = 23;</code>
       * @return The vehicleBrandConfidence.
       */
      public double getVehicleBrandConfidence() {
        return vehicleBrandConfidence_;
      }
      /**
       * <pre>
       *车辆品牌置信度
       * </pre>
       *
       * <code>double vehicleBrandConfidence = 23;</code>
       * @param value The vehicleBrandConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleBrandConfidence(double value) {
        
        vehicleBrandConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆品牌置信度
       * </pre>
       *
       * <code>double vehicleBrandConfidence = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleBrandConfidence() {
        
        vehicleBrandConfidence_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object vehicleSubBrand_ = "";
      /**
       * <pre>
       *车辆子品牌
       * </pre>
       *
       * <code>string vehicleSubBrand = 24;</code>
       * @return The vehicleSubBrand.
       */
      public java.lang.String getVehicleSubBrand() {
        java.lang.Object ref = vehicleSubBrand_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vehicleSubBrand_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车辆子品牌
       * </pre>
       *
       * <code>string vehicleSubBrand = 24;</code>
       * @return The bytes for vehicleSubBrand.
       */
      public com.google.protobuf.ByteString
          getVehicleSubBrandBytes() {
        java.lang.Object ref = vehicleSubBrand_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vehicleSubBrand_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车辆子品牌
       * </pre>
       *
       * <code>string vehicleSubBrand = 24;</code>
       * @param value The vehicleSubBrand to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleSubBrand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        vehicleSubBrand_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆子品牌
       * </pre>
       *
       * <code>string vehicleSubBrand = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleSubBrand() {
        
        vehicleSubBrand_ = getDefaultInstance().getVehicleSubBrand();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆子品牌
       * </pre>
       *
       * <code>string vehicleSubBrand = 24;</code>
       * @param value The bytes for vehicleSubBrand to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleSubBrandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        vehicleSubBrand_ = value;
        onChanged();
        return this;
      }

      private double vehicleSubBrandConfidence_ ;
      /**
       * <pre>
       *车辆子品牌置信度
       * </pre>
       *
       * <code>double vehicleSubBrandConfidence = 25;</code>
       * @return The vehicleSubBrandConfidence.
       */
      public double getVehicleSubBrandConfidence() {
        return vehicleSubBrandConfidence_;
      }
      /**
       * <pre>
       *车辆子品牌置信度
       * </pre>
       *
       * <code>double vehicleSubBrandConfidence = 25;</code>
       * @param value The vehicleSubBrandConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleSubBrandConfidence(double value) {
        
        vehicleSubBrandConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆子品牌置信度
       * </pre>
       *
       * <code>double vehicleSubBrandConfidence = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleSubBrandConfidence() {
        
        vehicleSubBrandConfidence_ = 0D;
        onChanged();
        return this;
      }

      private int faceNum_ ;
      /**
       * <pre>
       *人脸数
       * </pre>
       *
       * <code>int32 faceNum = 26;</code>
       * @return The faceNum.
       */
      public int getFaceNum() {
        return faceNum_;
      }
      /**
       * <pre>
       *人脸数
       * </pre>
       *
       * <code>int32 faceNum = 26;</code>
       * @param value The faceNum to set.
       * @return This builder for chaining.
       */
      public Builder setFaceNum(int value) {
        
        faceNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *人脸数
       * </pre>
       *
       * <code>int32 faceNum = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearFaceNum() {
        
        faceNum_ = 0;
        onChanged();
        return this;
      }

      private int sunVisor_ ;
      /**
       * <pre>
       *遮阳板
       * </pre>
       *
       * <code>int32 sunVisor = 27;</code>
       * @return The sunVisor.
       */
      public int getSunVisor() {
        return sunVisor_;
      }
      /**
       * <pre>
       *遮阳板
       * </pre>
       *
       * <code>int32 sunVisor = 27;</code>
       * @param value The sunVisor to set.
       * @return This builder for chaining.
       */
      public Builder setSunVisor(int value) {
        
        sunVisor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *遮阳板
       * </pre>
       *
       * <code>int32 sunVisor = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearSunVisor() {
        
        sunVisor_ = 0;
        onChanged();
        return this;
      }

      private int seatBeltStatus_ ;
      /**
       * <pre>
       *是否系安全带
       * </pre>
       *
       * <code>int32 seatBeltStatus = 28;</code>
       * @return The seatBeltStatus.
       */
      public int getSeatBeltStatus() {
        return seatBeltStatus_;
      }
      /**
       * <pre>
       *是否系安全带
       * </pre>
       *
       * <code>int32 seatBeltStatus = 28;</code>
       * @param value The seatBeltStatus to set.
       * @return This builder for chaining.
       */
      public Builder setSeatBeltStatus(int value) {
        
        seatBeltStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否系安全带
       * </pre>
       *
       * <code>int32 seatBeltStatus = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeatBeltStatus() {
        
        seatBeltStatus_ = 0;
        onChanged();
        return this;
      }

      private int annualInspectionNum_ ;
      /**
       * <pre>
       *车辆年检标数
       * </pre>
       *
       * <code>int32 annualInspectionNum = 29;</code>
       * @return The annualInspectionNum.
       */
      public int getAnnualInspectionNum() {
        return annualInspectionNum_;
      }
      /**
       * <pre>
       *车辆年检标数
       * </pre>
       *
       * <code>int32 annualInspectionNum = 29;</code>
       * @param value The annualInspectionNum to set.
       * @return This builder for chaining.
       */
      public Builder setAnnualInspectionNum(int value) {
        
        annualInspectionNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆年检标数
       * </pre>
       *
       * <code>int32 annualInspectionNum = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnnualInspectionNum() {
        
        annualInspectionNum_ = 0;
        onChanged();
        return this;
      }

      private int pendantsNum_ ;
      /**
       * <pre>
       *挂件个数
       * </pre>
       *
       * <code>int32 pendantsNum = 30;</code>
       * @return The pendantsNum.
       */
      public int getPendantsNum() {
        return pendantsNum_;
      }
      /**
       * <pre>
       *挂件个数
       * </pre>
       *
       * <code>int32 pendantsNum = 30;</code>
       * @param value The pendantsNum to set.
       * @return This builder for chaining.
       */
      public Builder setPendantsNum(int value) {
        
        pendantsNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂件个数
       * </pre>
       *
       * <code>int32 pendantsNum = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearPendantsNum() {
        
        pendantsNum_ = 0;
        onChanged();
        return this;
      }

      private int ornamentsNum_ ;
      /**
       * <pre>
       *摆件个数
       * </pre>
       *
       * <code>int32 ornamentsNum = 31;</code>
       * @return The ornamentsNum.
       */
      public int getOrnamentsNum() {
        return ornamentsNum_;
      }
      /**
       * <pre>
       *摆件个数
       * </pre>
       *
       * <code>int32 ornamentsNum = 31;</code>
       * @param value The ornamentsNum to set.
       * @return This builder for chaining.
       */
      public Builder setOrnamentsNum(int value) {
        
        ornamentsNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *摆件个数
       * </pre>
       *
       * <code>int32 ornamentsNum = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrnamentsNum() {
        
        ornamentsNum_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object vehicleYear_ = "";
      /**
       * <pre>
       *车辆年款
       * </pre>
       *
       * <code>string vehicleYear = 32;</code>
       * @return The vehicleYear.
       */
      public java.lang.String getVehicleYear() {
        java.lang.Object ref = vehicleYear_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vehicleYear_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车辆年款
       * </pre>
       *
       * <code>string vehicleYear = 32;</code>
       * @return The bytes for vehicleYear.
       */
      public com.google.protobuf.ByteString
          getVehicleYearBytes() {
        java.lang.Object ref = vehicleYear_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vehicleYear_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车辆年款
       * </pre>
       *
       * <code>string vehicleYear = 32;</code>
       * @param value The vehicleYear to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleYear(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        vehicleYear_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆年款
       * </pre>
       *
       * <code>string vehicleYear = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleYear() {
        
        vehicleYear_ = getDefaultInstance().getVehicleYear();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆年款
       * </pre>
       *
       * <code>string vehicleYear = 32;</code>
       * @param value The bytes for vehicleYear to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleYearBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        vehicleYear_ = value;
        onChanged();
        return this;
      }

      private int tissueBoxNum_ ;
      /**
       * <pre>
       *纸巾盒数
       * </pre>
       *
       * <code>int32 tissueBoxNum = 33;</code>
       * @return The tissueBoxNum.
       */
      public int getTissueBoxNum() {
        return tissueBoxNum_;
      }
      /**
       * <pre>
       *纸巾盒数
       * </pre>
       *
       * <code>int32 tissueBoxNum = 33;</code>
       * @param value The tissueBoxNum to set.
       * @return This builder for chaining.
       */
      public Builder setTissueBoxNum(int value) {
        
        tissueBoxNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *纸巾盒数
       * </pre>
       *
       * <code>int32 tissueBoxNum = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearTissueBoxNum() {
        
        tissueBoxNum_ = 0;
        onChanged();
        return this;
      }

      private int callStatus_ ;
      /**
       * <pre>
       *是否打电话
       * </pre>
       *
       * <code>int32 callStatus = 34;</code>
       * @return The callStatus.
       */
      public int getCallStatus() {
        return callStatus_;
      }
      /**
       * <pre>
       *是否打电话
       * </pre>
       *
       * <code>int32 callStatus = 34;</code>
       * @param value The callStatus to set.
       * @return This builder for chaining.
       */
      public Builder setCallStatus(int value) {
        
        callStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否打电话
       * </pre>
       *
       * <code>int32 callStatus = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearCallStatus() {
        
        callStatus_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object violationType_ = "";
      /**
       * <pre>
       *违章类型
       * </pre>
       *
       * <code>string violationType = 35;</code>
       * @return The violationType.
       */
      public java.lang.String getViolationType() {
        java.lang.Object ref = violationType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          violationType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *违章类型
       * </pre>
       *
       * <code>string violationType = 35;</code>
       * @return The bytes for violationType.
       */
      public com.google.protobuf.ByteString
          getViolationTypeBytes() {
        java.lang.Object ref = violationType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          violationType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *违章类型
       * </pre>
       *
       * <code>string violationType = 35;</code>
       * @param value The violationType to set.
       * @return This builder for chaining.
       */
      public Builder setViolationType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        violationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *违章类型
       * </pre>
       *
       * <code>string violationType = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearViolationType() {
        
        violationType_ = getDefaultInstance().getViolationType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *违章类型
       * </pre>
       *
       * <code>string violationType = 35;</code>
       * @param value The bytes for violationType to set.
       * @return This builder for chaining.
       */
      public Builder setViolationTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        violationType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dataSource_ = "";
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>string dataSource = 36;</code>
       * @return The dataSource.
       */
      public java.lang.String getDataSource() {
        java.lang.Object ref = dataSource_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dataSource_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>string dataSource = 36;</code>
       * @return The bytes for dataSource.
       */
      public com.google.protobuf.ByteString
          getDataSourceBytes() {
        java.lang.Object ref = dataSource_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataSource_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>string dataSource = 36;</code>
       * @param value The dataSource to set.
       * @return This builder for chaining.
       */
      public Builder setDataSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dataSource_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>string dataSource = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataSource() {
        
        dataSource_ = getDefaultInstance().getDataSource();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>string dataSource = 36;</code>
       * @param value The bytes for dataSource to set.
       * @return This builder for chaining.
       */
      public Builder setDataSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dataSource_ = value;
        onChanged();
        return this;
      }

      private long elapsedTime_ ;
      /**
       * <pre>
       *经过时间
       * </pre>
       *
       * <code>int64 elapsedTime = 37;</code>
       * @return The elapsedTime.
       */
      public long getElapsedTime() {
        return elapsedTime_;
      }
      /**
       * <pre>
       *经过时间
       * </pre>
       *
       * <code>int64 elapsedTime = 37;</code>
       * @param value The elapsedTime to set.
       * @return This builder for chaining.
       */
      public Builder setElapsedTime(long value) {
        
        elapsedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经过时间
       * </pre>
       *
       * <code>int64 elapsedTime = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearElapsedTime() {
        
        elapsedTime_ = 0L;
        onChanged();
        return this;
      }

      private long dataInKafkaTime_ ;
      /**
       * <pre>
       *数据入kafka时间
       * </pre>
       *
       * <code>int64 dataInKafkaTime = 38;</code>
       * @return The dataInKafkaTime.
       */
      public long getDataInKafkaTime() {
        return dataInKafkaTime_;
      }
      /**
       * <pre>
       *数据入kafka时间
       * </pre>
       *
       * <code>int64 dataInKafkaTime = 38;</code>
       * @param value The dataInKafkaTime to set.
       * @return This builder for chaining.
       */
      public Builder setDataInKafkaTime(long value) {
        
        dataInKafkaTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据入kafka时间
       * </pre>
       *
       * <code>int64 dataInKafkaTime = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataInKafkaTime() {
        
        dataInKafkaTime_ = 0L;
        onChanged();
        return this;
      }

      private long entryTime_ ;
      /**
       * <pre>
       *入库时间
       * </pre>
       *
       * <code>int64 entryTime = 39;</code>
       * @return The entryTime.
       */
      public long getEntryTime() {
        return entryTime_;
      }
      /**
       * <pre>
       *入库时间
       * </pre>
       *
       * <code>int64 entryTime = 39;</code>
       * @param value The entryTime to set.
       * @return This builder for chaining.
       */
      public Builder setEntryTime(long value) {
        
        entryTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *入库时间
       * </pre>
       *
       * <code>int64 entryTime = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearEntryTime() {
        
        entryTime_ = 0L;
        onChanged();
        return this;
      }

      private double vehicleSpeed_ ;
      /**
       * <pre>
       *车辆速度
       * </pre>
       *
       * <code>double vehicleSpeed = 40;</code>
       * @return The vehicleSpeed.
       */
      public double getVehicleSpeed() {
        return vehicleSpeed_;
      }
      /**
       * <pre>
       *车辆速度
       * </pre>
       *
       * <code>double vehicleSpeed = 40;</code>
       * @param value The vehicleSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleSpeed(double value) {
        
        vehicleSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆速度
       * </pre>
       *
       * <code>double vehicleSpeed = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleSpeed() {
        
        vehicleSpeed_ = 0D;
        onChanged();
        return this;
      }

      private int markerType_ ;
      /**
       * <pre>
       *标志物
       * </pre>
       *
       * <code>int32 markerType = 41;</code>
       * @return The markerType.
       */
      public int getMarkerType() {
        return markerType_;
      }
      /**
       * <pre>
       *标志物
       * </pre>
       *
       * <code>int32 markerType = 41;</code>
       * @param value The markerType to set.
       * @return This builder for chaining.
       */
      public Builder setMarkerType(int value) {
        
        markerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *标志物
       * </pre>
       *
       * <code>int32 markerType = 41;</code>
       * @return This builder for chaining.
       */
      public Builder clearMarkerType() {
        
        markerType_ = 0;
        onChanged();
        return this;
      }

      private int vehicleHeadend_ ;
      /**
       * <pre>
       *车头车尾
       * </pre>
       *
       * <code>int32 vehicleHeadend = 42;</code>
       * @return The vehicleHeadend.
       */
      public int getVehicleHeadend() {
        return vehicleHeadend_;
      }
      /**
       * <pre>
       *车头车尾
       * </pre>
       *
       * <code>int32 vehicleHeadend = 42;</code>
       * @param value The vehicleHeadend to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleHeadend(int value) {
        
        vehicleHeadend_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车头车尾
       * </pre>
       *
       * <code>int32 vehicleHeadend = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleHeadend() {
        
        vehicleHeadend_ = 0;
        onChanged();
        return this;
      }

      private int shieldFace_ ;
      /**
       * <pre>
       *是否遮挡面部
       * </pre>
       *
       * <code>int32 shieldFace = 43;</code>
       * @return The shieldFace.
       */
      public int getShieldFace() {
        return shieldFace_;
      }
      /**
       * <pre>
       *是否遮挡面部
       * </pre>
       *
       * <code>int32 shieldFace = 43;</code>
       * @param value The shieldFace to set.
       * @return This builder for chaining.
       */
      public Builder setShieldFace(int value) {
        
        shieldFace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否遮挡面部
       * </pre>
       *
       * <code>int32 shieldFace = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearShieldFace() {
        
        shieldFace_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object taskType_ = "";
      /**
       * <pre>
       *任务类型
       * </pre>
       *
       * <code>string taskType = 44;</code>
       * @return The taskType.
       */
      public java.lang.String getTaskType() {
        java.lang.Object ref = taskType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          taskType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *任务类型
       * </pre>
       *
       * <code>string taskType = 44;</code>
       * @return The bytes for taskType.
       */
      public com.google.protobuf.ByteString
          getTaskTypeBytes() {
        java.lang.Object ref = taskType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          taskType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *任务类型
       * </pre>
       *
       * <code>string taskType = 44;</code>
       * @param value The taskType to set.
       * @return This builder for chaining.
       */
      public Builder setTaskType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        taskType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务类型
       * </pre>
       *
       * <code>string taskType = 44;</code>
       * @return This builder for chaining.
       */
      public Builder clearTaskType() {
        
        taskType_ = getDefaultInstance().getTaskType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务类型
       * </pre>
       *
       * <code>string taskType = 44;</code>
       * @param value The bytes for taskType to set.
       * @return This builder for chaining.
       */
      public Builder setTaskTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        taskType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object infoSource_ = "";
      /**
       * <pre>
       *数据来源厂商
       * </pre>
       *
       * <code>string infoSource = 45;</code>
       * @return The infoSource.
       */
      public java.lang.String getInfoSource() {
        java.lang.Object ref = infoSource_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          infoSource_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *数据来源厂商
       * </pre>
       *
       * <code>string infoSource = 45;</code>
       * @return The bytes for infoSource.
       */
      public com.google.protobuf.ByteString
          getInfoSourceBytes() {
        java.lang.Object ref = infoSource_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          infoSource_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *数据来源厂商
       * </pre>
       *
       * <code>string infoSource = 45;</code>
       * @param value The infoSource to set.
       * @return This builder for chaining.
       */
      public Builder setInfoSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        infoSource_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据来源厂商
       * </pre>
       *
       * <code>string infoSource = 45;</code>
       * @return This builder for chaining.
       */
      public Builder clearInfoSource() {
        
        infoSource_ = getDefaultInstance().getInfoSource();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据来源厂商
       * </pre>
       *
       * <code>string infoSource = 45;</code>
       * @param value The bytes for infoSource to set.
       * @return This builder for chaining.
       */
      public Builder setInfoSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        infoSource_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object algorithmVersion_ = "";
      /**
       * <pre>
       *算法版本
       * </pre>
       *
       * <code>string algorithmVersion = 46;</code>
       * @return The algorithmVersion.
       */
      public java.lang.String getAlgorithmVersion() {
        java.lang.Object ref = algorithmVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          algorithmVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *算法版本
       * </pre>
       *
       * <code>string algorithmVersion = 46;</code>
       * @return The bytes for algorithmVersion.
       */
      public com.google.protobuf.ByteString
          getAlgorithmVersionBytes() {
        java.lang.Object ref = algorithmVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          algorithmVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *算法版本
       * </pre>
       *
       * <code>string algorithmVersion = 46;</code>
       * @param value The algorithmVersion to set.
       * @return This builder for chaining.
       */
      public Builder setAlgorithmVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        algorithmVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *算法版本
       * </pre>
       *
       * <code>string algorithmVersion = 46;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlgorithmVersion() {
        
        algorithmVersion_ = getDefaultInstance().getAlgorithmVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *算法版本
       * </pre>
       *
       * <code>string algorithmVersion = 46;</code>
       * @param value The bytes for algorithmVersion to set.
       * @return This builder for chaining.
       */
      public Builder setAlgorithmVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        algorithmVersion_ = value;
        onChanged();
        return this;
      }

      private int algorithmVendor_ ;
      /**
       * <pre>
       *算法厂商
       * </pre>
       *
       * <code>int32 algorithmVendor = 47;</code>
       * @return The algorithmVendor.
       */
      public int getAlgorithmVendor() {
        return algorithmVendor_;
      }
      /**
       * <pre>
       *算法厂商
       * </pre>
       *
       * <code>int32 algorithmVendor = 47;</code>
       * @param value The algorithmVendor to set.
       * @return This builder for chaining.
       */
      public Builder setAlgorithmVendor(int value) {
        
        algorithmVendor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *算法厂商
       * </pre>
       *
       * <code>int32 algorithmVendor = 47;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlgorithmVendor() {
        
        algorithmVendor_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object eigenvector_ = "";
      /**
       * <pre>
       *特征向量
       * </pre>
       *
       * <code>string eigenvector = 48;</code>
       * @return The eigenvector.
       */
      public java.lang.String getEigenvector() {
        java.lang.Object ref = eigenvector_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          eigenvector_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *特征向量
       * </pre>
       *
       * <code>string eigenvector = 48;</code>
       * @return The bytes for eigenvector.
       */
      public com.google.protobuf.ByteString
          getEigenvectorBytes() {
        java.lang.Object ref = eigenvector_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eigenvector_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *特征向量
       * </pre>
       *
       * <code>string eigenvector = 48;</code>
       * @param value The eigenvector to set.
       * @return This builder for chaining.
       */
      public Builder setEigenvector(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        eigenvector_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *特征向量
       * </pre>
       *
       * <code>string eigenvector = 48;</code>
       * @return This builder for chaining.
       */
      public Builder clearEigenvector() {
        
        eigenvector_ = getDefaultInstance().getEigenvector();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *特征向量
       * </pre>
       *
       * <code>string eigenvector = 48;</code>
       * @param value The bytes for eigenvector to set.
       * @return This builder for chaining.
       */
      public Builder setEigenvectorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        eigenvector_ = value;
        onChanged();
        return this;
      }

      private int isSecondaryStructure_ ;
      /**
       * <pre>
       *是否二次结构化
       * </pre>
       *
       * <code>int32 isSecondaryStructure = 49;</code>
       * @return The isSecondaryStructure.
       */
      public int getIsSecondaryStructure() {
        return isSecondaryStructure_;
      }
      /**
       * <pre>
       *是否二次结构化
       * </pre>
       *
       * <code>int32 isSecondaryStructure = 49;</code>
       * @param value The isSecondaryStructure to set.
       * @return This builder for chaining.
       */
      public Builder setIsSecondaryStructure(int value) {
        
        isSecondaryStructure_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否二次结构化
       * </pre>
       *
       * <code>int32 isSecondaryStructure = 49;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSecondaryStructure() {
        
        isSecondaryStructure_ = 0;
        onChanged();
        return this;
      }

      private long structureTime_ ;
      /**
       * <pre>
       *结构化时间
       * </pre>
       *
       * <code>int64 structureTime = 50;</code>
       * @return The structureTime.
       */
      public long getStructureTime() {
        return structureTime_;
      }
      /**
       * <pre>
       *结构化时间
       * </pre>
       *
       * <code>int64 structureTime = 50;</code>
       * @param value The structureTime to set.
       * @return This builder for chaining.
       */
      public Builder setStructureTime(long value) {
        
        structureTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结构化时间
       * </pre>
       *
       * <code>int64 structureTime = 50;</code>
       * @return This builder for chaining.
       */
      public Builder clearStructureTime() {
        
        structureTime_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object collectionId_ = "";
      /**
       * <pre>
       *全目标关联关系ID
       * </pre>
       *
       * <code>string collectionId = 51;</code>
       * @return The collectionId.
       */
      public java.lang.String getCollectionId() {
        java.lang.Object ref = collectionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          collectionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *全目标关联关系ID
       * </pre>
       *
       * <code>string collectionId = 51;</code>
       * @return The bytes for collectionId.
       */
      public com.google.protobuf.ByteString
          getCollectionIdBytes() {
        java.lang.Object ref = collectionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          collectionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *全目标关联关系ID
       * </pre>
       *
       * <code>string collectionId = 51;</code>
       * @param value The collectionId to set.
       * @return This builder for chaining.
       */
      public Builder setCollectionId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        collectionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *全目标关联关系ID
       * </pre>
       *
       * <code>string collectionId = 51;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollectionId() {
        
        collectionId_ = getDefaultInstance().getCollectionId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *全目标关联关系ID
       * </pre>
       *
       * <code>string collectionId = 51;</code>
       * @param value The bytes for collectionId to set.
       * @return This builder for chaining.
       */
      public Builder setCollectionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        collectionId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object additionalInfo_ = "";
      /**
       * <pre>
       *渗透字段信息
       * </pre>
       *
       * <code>string additionalInfo = 52;</code>
       * @return The additionalInfo.
       */
      public java.lang.String getAdditionalInfo() {
        java.lang.Object ref = additionalInfo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          additionalInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *渗透字段信息
       * </pre>
       *
       * <code>string additionalInfo = 52;</code>
       * @return The bytes for additionalInfo.
       */
      public com.google.protobuf.ByteString
          getAdditionalInfoBytes() {
        java.lang.Object ref = additionalInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          additionalInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *渗透字段信息
       * </pre>
       *
       * <code>string additionalInfo = 52;</code>
       * @param value The additionalInfo to set.
       * @return This builder for chaining.
       */
      public Builder setAdditionalInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        additionalInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *渗透字段信息
       * </pre>
       *
       * <code>string additionalInfo = 52;</code>
       * @return This builder for chaining.
       */
      public Builder clearAdditionalInfo() {
        
        additionalInfo_ = getDefaultInstance().getAdditionalInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *渗透字段信息
       * </pre>
       *
       * <code>string additionalInfo = 52;</code>
       * @param value The bytes for additionalInfo to set.
       * @return This builder for chaining.
       */
      public Builder setAdditionalInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        additionalInfo_ = value;
        onChanged();
        return this;
      }

      private int source_ ;
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>int32 source = 53;</code>
       * @return The source.
       */
      public int getSource() {
        return source_;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>int32 source = 53;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(int value) {
        
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>int32 source = 53;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        
        source_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object drivewayNo_ = "";
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>string drivewayNo = 54;</code>
       * @return The drivewayNo.
       */
      public java.lang.String getDrivewayNo() {
        java.lang.Object ref = drivewayNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          drivewayNo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>string drivewayNo = 54;</code>
       * @return The bytes for drivewayNo.
       */
      public com.google.protobuf.ByteString
          getDrivewayNoBytes() {
        java.lang.Object ref = drivewayNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          drivewayNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>string drivewayNo = 54;</code>
       * @param value The drivewayNo to set.
       * @return This builder for chaining.
       */
      public Builder setDrivewayNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        drivewayNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>string drivewayNo = 54;</code>
       * @return This builder for chaining.
       */
      public Builder clearDrivewayNo() {
        
        drivewayNo_ = getDefaultInstance().getDrivewayNo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车道编号
       * </pre>
       *
       * <code>string drivewayNo = 54;</code>
       * @param value The bytes for drivewayNo to set.
       * @return This builder for chaining.
       */
      public Builder setDrivewayNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        drivewayNo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object vehicleLocation_ = "";
      /**
       * <pre>
       *车辆位置
       * </pre>
       *
       * <code>string vehicleLocation = 55;</code>
       * @return The vehicleLocation.
       */
      public java.lang.String getVehicleLocation() {
        java.lang.Object ref = vehicleLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vehicleLocation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车辆位置
       * </pre>
       *
       * <code>string vehicleLocation = 55;</code>
       * @return The bytes for vehicleLocation.
       */
      public com.google.protobuf.ByteString
          getVehicleLocationBytes() {
        java.lang.Object ref = vehicleLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vehicleLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车辆位置
       * </pre>
       *
       * <code>string vehicleLocation = 55;</code>
       * @param value The vehicleLocation to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        vehicleLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆位置
       * </pre>
       *
       * <code>string vehicleLocation = 55;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleLocation() {
        
        vehicleLocation_ = getDefaultInstance().getVehicleLocation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车辆位置
       * </pre>
       *
       * <code>string vehicleLocation = 55;</code>
       * @param value The bytes for vehicleLocation to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        vehicleLocation_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object plateLocation_ = "";
      /**
       * <pre>
       *车牌位置
       * </pre>
       *
       * <code>string plateLocation = 56;</code>
       * @return The plateLocation.
       */
      public java.lang.String getPlateLocation() {
        java.lang.Object ref = plateLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          plateLocation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车牌位置
       * </pre>
       *
       * <code>string plateLocation = 56;</code>
       * @return The bytes for plateLocation.
       */
      public com.google.protobuf.ByteString
          getPlateLocationBytes() {
        java.lang.Object ref = plateLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plateLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车牌位置
       * </pre>
       *
       * <code>string plateLocation = 56;</code>
       * @param value The plateLocation to set.
       * @return This builder for chaining.
       */
      public Builder setPlateLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        plateLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌位置
       * </pre>
       *
       * <code>string plateLocation = 56;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateLocation() {
        
        plateLocation_ = getDefaultInstance().getPlateLocation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌位置
       * </pre>
       *
       * <code>string plateLocation = 56;</code>
       * @param value The bytes for plateLocation to set.
       * @return This builder for chaining.
       */
      public Builder setPlateLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        plateLocation_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mainVisorPosition_ = "";
      /**
       * <pre>
       *主驾遮阳板位置
       * </pre>
       *
       * <code>string mainVisorPosition = 57;</code>
       * @return The mainVisorPosition.
       */
      public java.lang.String getMainVisorPosition() {
        java.lang.Object ref = mainVisorPosition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          mainVisorPosition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *主驾遮阳板位置
       * </pre>
       *
       * <code>string mainVisorPosition = 57;</code>
       * @return The bytes for mainVisorPosition.
       */
      public com.google.protobuf.ByteString
          getMainVisorPositionBytes() {
        java.lang.Object ref = mainVisorPosition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mainVisorPosition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *主驾遮阳板位置
       * </pre>
       *
       * <code>string mainVisorPosition = 57;</code>
       * @param value The mainVisorPosition to set.
       * @return This builder for chaining.
       */
      public Builder setMainVisorPosition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mainVisorPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *主驾遮阳板位置
       * </pre>
       *
       * <code>string mainVisorPosition = 57;</code>
       * @return This builder for chaining.
       */
      public Builder clearMainVisorPosition() {
        
        mainVisorPosition_ = getDefaultInstance().getMainVisorPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *主驾遮阳板位置
       * </pre>
       *
       * <code>string mainVisorPosition = 57;</code>
       * @param value The bytes for mainVisorPosition to set.
       * @return This builder for chaining.
       */
      public Builder setMainVisorPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mainVisorPosition_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object viceVisorPosition_ = "";
      /**
       * <pre>
       *副驾遮阳板位置
       * </pre>
       *
       * <code>string viceVisorPosition = 58;</code>
       * @return The viceVisorPosition.
       */
      public java.lang.String getViceVisorPosition() {
        java.lang.Object ref = viceVisorPosition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          viceVisorPosition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *副驾遮阳板位置
       * </pre>
       *
       * <code>string viceVisorPosition = 58;</code>
       * @return The bytes for viceVisorPosition.
       */
      public com.google.protobuf.ByteString
          getViceVisorPositionBytes() {
        java.lang.Object ref = viceVisorPosition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          viceVisorPosition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *副驾遮阳板位置
       * </pre>
       *
       * <code>string viceVisorPosition = 58;</code>
       * @param value The viceVisorPosition to set.
       * @return This builder for chaining.
       */
      public Builder setViceVisorPosition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        viceVisorPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *副驾遮阳板位置
       * </pre>
       *
       * <code>string viceVisorPosition = 58;</code>
       * @return This builder for chaining.
       */
      public Builder clearViceVisorPosition() {
        
        viceVisorPosition_ = getDefaultInstance().getViceVisorPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *副驾遮阳板位置
       * </pre>
       *
       * <code>string viceVisorPosition = 58;</code>
       * @param value The bytes for viceVisorPosition to set.
       * @return This builder for chaining.
       */
      public Builder setViceVisorPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        viceVisorPosition_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mainSeatBeltPosition_ = "";
      /**
       * <pre>
       *主驾安全带位置
       * </pre>
       *
       * <code>string mainSeatBeltPosition = 59;</code>
       * @return The mainSeatBeltPosition.
       */
      public java.lang.String getMainSeatBeltPosition() {
        java.lang.Object ref = mainSeatBeltPosition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          mainSeatBeltPosition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *主驾安全带位置
       * </pre>
       *
       * <code>string mainSeatBeltPosition = 59;</code>
       * @return The bytes for mainSeatBeltPosition.
       */
      public com.google.protobuf.ByteString
          getMainSeatBeltPositionBytes() {
        java.lang.Object ref = mainSeatBeltPosition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mainSeatBeltPosition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *主驾安全带位置
       * </pre>
       *
       * <code>string mainSeatBeltPosition = 59;</code>
       * @param value The mainSeatBeltPosition to set.
       * @return This builder for chaining.
       */
      public Builder setMainSeatBeltPosition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mainSeatBeltPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *主驾安全带位置
       * </pre>
       *
       * <code>string mainSeatBeltPosition = 59;</code>
       * @return This builder for chaining.
       */
      public Builder clearMainSeatBeltPosition() {
        
        mainSeatBeltPosition_ = getDefaultInstance().getMainSeatBeltPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *主驾安全带位置
       * </pre>
       *
       * <code>string mainSeatBeltPosition = 59;</code>
       * @param value The bytes for mainSeatBeltPosition to set.
       * @return This builder for chaining.
       */
      public Builder setMainSeatBeltPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mainSeatBeltPosition_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object viceSeatBeltPosition_ = "";
      /**
       * <pre>
       *副驾安全带位置
       * </pre>
       *
       * <code>string viceSeatBeltPosition = 60;</code>
       * @return The viceSeatBeltPosition.
       */
      public java.lang.String getViceSeatBeltPosition() {
        java.lang.Object ref = viceSeatBeltPosition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          viceSeatBeltPosition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *副驾安全带位置
       * </pre>
       *
       * <code>string viceSeatBeltPosition = 60;</code>
       * @return The bytes for viceSeatBeltPosition.
       */
      public com.google.protobuf.ByteString
          getViceSeatBeltPositionBytes() {
        java.lang.Object ref = viceSeatBeltPosition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          viceSeatBeltPosition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *副驾安全带位置
       * </pre>
       *
       * <code>string viceSeatBeltPosition = 60;</code>
       * @param value The viceSeatBeltPosition to set.
       * @return This builder for chaining.
       */
      public Builder setViceSeatBeltPosition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        viceSeatBeltPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *副驾安全带位置
       * </pre>
       *
       * <code>string viceSeatBeltPosition = 60;</code>
       * @return This builder for chaining.
       */
      public Builder clearViceSeatBeltPosition() {
        
        viceSeatBeltPosition_ = getDefaultInstance().getViceSeatBeltPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *副驾安全带位置
       * </pre>
       *
       * <code>string viceSeatBeltPosition = 60;</code>
       * @param value The bytes for viceSeatBeltPosition to set.
       * @return This builder for chaining.
       */
      public Builder setViceSeatBeltPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        viceSeatBeltPosition_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object drivingCall_ = "";
      /**
       * <pre>
       *驾驶员开车打电话
       * </pre>
       *
       * <code>string drivingCall = 61;</code>
       * @return The drivingCall.
       */
      public java.lang.String getDrivingCall() {
        java.lang.Object ref = drivingCall_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          drivingCall_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *驾驶员开车打电话
       * </pre>
       *
       * <code>string drivingCall = 61;</code>
       * @return The bytes for drivingCall.
       */
      public com.google.protobuf.ByteString
          getDrivingCallBytes() {
        java.lang.Object ref = drivingCall_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          drivingCall_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *驾驶员开车打电话
       * </pre>
       *
       * <code>string drivingCall = 61;</code>
       * @param value The drivingCall to set.
       * @return This builder for chaining.
       */
      public Builder setDrivingCall(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        drivingCall_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *驾驶员开车打电话
       * </pre>
       *
       * <code>string drivingCall = 61;</code>
       * @return This builder for chaining.
       */
      public Builder clearDrivingCall() {
        
        drivingCall_ = getDefaultInstance().getDrivingCall();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *驾驶员开车打电话
       * </pre>
       *
       * <code>string drivingCall = 61;</code>
       * @param value The bytes for drivingCall to set.
       * @return This builder for chaining.
       */
      public Builder setDrivingCallBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        drivingCall_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object annualInspectionPosition_ = "";
      /**
       * <pre>
       *年检标位置
       * </pre>
       *
       * <code>string annualInspectionPosition = 62;</code>
       * @return The annualInspectionPosition.
       */
      public java.lang.String getAnnualInspectionPosition() {
        java.lang.Object ref = annualInspectionPosition_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          annualInspectionPosition_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *年检标位置
       * </pre>
       *
       * <code>string annualInspectionPosition = 62;</code>
       * @return The bytes for annualInspectionPosition.
       */
      public com.google.protobuf.ByteString
          getAnnualInspectionPositionBytes() {
        java.lang.Object ref = annualInspectionPosition_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          annualInspectionPosition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *年检标位置
       * </pre>
       *
       * <code>string annualInspectionPosition = 62;</code>
       * @param value The annualInspectionPosition to set.
       * @return This builder for chaining.
       */
      public Builder setAnnualInspectionPosition(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        annualInspectionPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *年检标位置
       * </pre>
       *
       * <code>string annualInspectionPosition = 62;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnnualInspectionPosition() {
        
        annualInspectionPosition_ = getDefaultInstance().getAnnualInspectionPosition();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *年检标位置
       * </pre>
       *
       * <code>string annualInspectionPosition = 62;</code>
       * @param value The bytes for annualInspectionPosition to set.
       * @return This builder for chaining.
       */
      public Builder setAnnualInspectionPositionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        annualInspectionPosition_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pendantLocation_ = "";
      /**
       * <pre>
       *挂件位置
       * </pre>
       *
       * <code>string pendantLocation = 63;</code>
       * @return The pendantLocation.
       */
      public java.lang.String getPendantLocation() {
        java.lang.Object ref = pendantLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pendantLocation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *挂件位置
       * </pre>
       *
       * <code>string pendantLocation = 63;</code>
       * @return The bytes for pendantLocation.
       */
      public com.google.protobuf.ByteString
          getPendantLocationBytes() {
        java.lang.Object ref = pendantLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pendantLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *挂件位置
       * </pre>
       *
       * <code>string pendantLocation = 63;</code>
       * @param value The pendantLocation to set.
       * @return This builder for chaining.
       */
      public Builder setPendantLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pendantLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂件位置
       * </pre>
       *
       * <code>string pendantLocation = 63;</code>
       * @return This builder for chaining.
       */
      public Builder clearPendantLocation() {
        
        pendantLocation_ = getDefaultInstance().getPendantLocation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *挂件位置
       * </pre>
       *
       * <code>string pendantLocation = 63;</code>
       * @param value The bytes for pendantLocation to set.
       * @return This builder for chaining.
       */
      public Builder setPendantLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pendantLocation_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tissueBoxLocation_ = "";
      /**
       * <pre>
       *纸巾盒位置
       * </pre>
       *
       * <code>string tissueBoxLocation = 64;</code>
       * @return The tissueBoxLocation.
       */
      public java.lang.String getTissueBoxLocation() {
        java.lang.Object ref = tissueBoxLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tissueBoxLocation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *纸巾盒位置
       * </pre>
       *
       * <code>string tissueBoxLocation = 64;</code>
       * @return The bytes for tissueBoxLocation.
       */
      public com.google.protobuf.ByteString
          getTissueBoxLocationBytes() {
        java.lang.Object ref = tissueBoxLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tissueBoxLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *纸巾盒位置
       * </pre>
       *
       * <code>string tissueBoxLocation = 64;</code>
       * @param value The tissueBoxLocation to set.
       * @return This builder for chaining.
       */
      public Builder setTissueBoxLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tissueBoxLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *纸巾盒位置
       * </pre>
       *
       * <code>string tissueBoxLocation = 64;</code>
       * @return This builder for chaining.
       */
      public Builder clearTissueBoxLocation() {
        
        tissueBoxLocation_ = getDefaultInstance().getTissueBoxLocation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *纸巾盒位置
       * </pre>
       *
       * <code>string tissueBoxLocation = 64;</code>
       * @param value The bytes for tissueBoxLocation to set.
       * @return This builder for chaining.
       */
      public Builder setTissueBoxLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tissueBoxLocation_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object platePicUrl_ = "";
      /**
       * <pre>
       *车牌图片
       * </pre>
       *
       * <code>string platePicUrl = 65;</code>
       * @return The platePicUrl.
       */
      public java.lang.String getPlatePicUrl() {
        java.lang.Object ref = platePicUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          platePicUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车牌图片
       * </pre>
       *
       * <code>string platePicUrl = 65;</code>
       * @return The bytes for platePicUrl.
       */
      public com.google.protobuf.ByteString
          getPlatePicUrlBytes() {
        java.lang.Object ref = platePicUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          platePicUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车牌图片
       * </pre>
       *
       * <code>string platePicUrl = 65;</code>
       * @param value The platePicUrl to set.
       * @return This builder for chaining.
       */
      public Builder setPlatePicUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        platePicUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌图片
       * </pre>
       *
       * <code>string platePicUrl = 65;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlatePicUrl() {
        
        platePicUrl_ = getDefaultInstance().getPlatePicUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌图片
       * </pre>
       *
       * <code>string platePicUrl = 65;</code>
       * @param value The bytes for platePicUrl to set.
       * @return This builder for chaining.
       */
      public Builder setPlatePicUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        platePicUrl_ = value;
        onChanged();
        return this;
      }

      private int moveDirection_ ;
      /**
       * <pre>
       *移动方向
       * </pre>
       *
       * <code>int32 moveDirection = 66;</code>
       * @return The moveDirection.
       */
      public int getMoveDirection() {
        return moveDirection_;
      }
      /**
       * <pre>
       *移动方向
       * </pre>
       *
       * <code>int32 moveDirection = 66;</code>
       * @param value The moveDirection to set.
       * @return This builder for chaining.
       */
      public Builder setMoveDirection(int value) {
        
        moveDirection_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *移动方向
       * </pre>
       *
       * <code>int32 moveDirection = 66;</code>
       * @return This builder for chaining.
       */
      public Builder clearMoveDirection() {
        
        moveDirection_ = 0;
        onChanged();
        return this;
      }

      private int specialCar_ ;
      /**
       * <pre>
       *特殊车辆
       * </pre>
       *
       * <code>int32 specialCar = 67;</code>
       * @return The specialCar.
       */
      public int getSpecialCar() {
        return specialCar_;
      }
      /**
       * <pre>
       *特殊车辆
       * </pre>
       *
       * <code>int32 specialCar = 67;</code>
       * @param value The specialCar to set.
       * @return This builder for chaining.
       */
      public Builder setSpecialCar(int value) {
        
        specialCar_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *特殊车辆
       * </pre>
       *
       * <code>int32 specialCar = 67;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpecialCar() {
        
        specialCar_ = 0;
        onChanged();
        return this;
      }

      private int moveSpeed_ ;
      /**
       * <pre>
       *移动速度
       * </pre>
       *
       * <code>int32 moveSpeed = 68;</code>
       * @return The moveSpeed.
       */
      public int getMoveSpeed() {
        return moveSpeed_;
      }
      /**
       * <pre>
       *移动速度
       * </pre>
       *
       * <code>int32 moveSpeed = 68;</code>
       * @param value The moveSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setMoveSpeed(int value) {
        
        moveSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *移动速度
       * </pre>
       *
       * <code>int32 moveSpeed = 68;</code>
       * @return This builder for chaining.
       */
      public Builder clearMoveSpeed() {
        
        moveSpeed_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo> subImageList_ =
        java.util.Collections.emptyList();
      private void ensureSubImageListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          subImageList_ = new java.util.ArrayList<com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo>(subImageList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfoOrBuilder> subImageListBuilder_;

      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public java.util.List<com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo> getSubImageListList() {
        if (subImageListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subImageList_);
        } else {
          return subImageListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public int getSubImageListCount() {
        if (subImageListBuilder_ == null) {
          return subImageList_.size();
        } else {
          return subImageListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo getSubImageList(int index) {
        if (subImageListBuilder_ == null) {
          return subImageList_.get(index);
        } else {
          return subImageListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public Builder setSubImageList(
          int index, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo value) {
        if (subImageListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubImageListIsMutable();
          subImageList_.set(index, value);
          onChanged();
        } else {
          subImageListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public Builder setSubImageList(
          int index, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder builderForValue) {
        if (subImageListBuilder_ == null) {
          ensureSubImageListIsMutable();
          subImageList_.set(index, builderForValue.build());
          onChanged();
        } else {
          subImageListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public Builder addSubImageList(com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo value) {
        if (subImageListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubImageListIsMutable();
          subImageList_.add(value);
          onChanged();
        } else {
          subImageListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public Builder addSubImageList(
          int index, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo value) {
        if (subImageListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubImageListIsMutable();
          subImageList_.add(index, value);
          onChanged();
        } else {
          subImageListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public Builder addSubImageList(
          com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder builderForValue) {
        if (subImageListBuilder_ == null) {
          ensureSubImageListIsMutable();
          subImageList_.add(builderForValue.build());
          onChanged();
        } else {
          subImageListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public Builder addSubImageList(
          int index, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder builderForValue) {
        if (subImageListBuilder_ == null) {
          ensureSubImageListIsMutable();
          subImageList_.add(index, builderForValue.build());
          onChanged();
        } else {
          subImageListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public Builder addAllSubImageList(
          java.lang.Iterable<? extends com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo> values) {
        if (subImageListBuilder_ == null) {
          ensureSubImageListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, subImageList_);
          onChanged();
        } else {
          subImageListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public Builder clearSubImageList() {
        if (subImageListBuilder_ == null) {
          subImageList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          subImageListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public Builder removeSubImageList(int index) {
        if (subImageListBuilder_ == null) {
          ensureSubImageListIsMutable();
          subImageList_.remove(index);
          onChanged();
        } else {
          subImageListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder getSubImageListBuilder(
          int index) {
        return getSubImageListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfoOrBuilder getSubImageListOrBuilder(
          int index) {
        if (subImageListBuilder_ == null) {
          return subImageList_.get(index);  } else {
          return subImageListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public java.util.List<? extends com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfoOrBuilder> 
           getSubImageListOrBuilderList() {
        if (subImageListBuilder_ != null) {
          return subImageListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subImageList_);
        }
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder addSubImageListBuilder() {
        return getSubImageListFieldBuilder().addBuilder(
            com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder addSubImageListBuilder(
          int index) {
        return getSubImageListFieldBuilder().addBuilder(
            index, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *图像列表
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.SubImageInfo subImageList = 69;</code>
       */
      public java.util.List<com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder> 
           getSubImageListBuilderList() {
        return getSubImageListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfoOrBuilder> 
          getSubImageListFieldBuilder() {
        if (subImageListBuilder_ == null) {
          subImageListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfo.Builder, com.dtc.analytic.online.protobuf.SubImageInfoObjProto.SubImageInfoOrBuilder>(
                  subImageList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          subImageList_ = null;
        }
        return subImageListBuilder_;
      }

      private int structureNum_ ;
      /**
       * <pre>
       *二次识别次数
       * </pre>
       *
       * <code>int32 structureNum = 70;</code>
       * @return The structureNum.
       */
      public int getStructureNum() {
        return structureNum_;
      }
      /**
       * <pre>
       *二次识别次数
       * </pre>
       *
       * <code>int32 structureNum = 70;</code>
       * @param value The structureNum to set.
       * @return This builder for chaining.
       */
      public Builder setStructureNum(int value) {
        
        structureNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *二次识别次数
       * </pre>
       *
       * <code>int32 structureNum = 70;</code>
       * @return This builder for chaining.
       */
      public Builder clearStructureNum() {
        
        structureNum_ = 0;
        onChanged();
        return this;
      }

      private long accessTime_ ;
      /**
       * <pre>
       *接入时间
       * </pre>
       *
       * <code>int64 accessTime = 71;</code>
       * @return The accessTime.
       */
      public long getAccessTime() {
        return accessTime_;
      }
      /**
       * <pre>
       *接入时间
       * </pre>
       *
       * <code>int64 accessTime = 71;</code>
       * @param value The accessTime to set.
       * @return This builder for chaining.
       */
      public Builder setAccessTime(long value) {
        
        accessTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *接入时间
       * </pre>
       *
       * <code>int64 accessTime = 71;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccessTime() {
        
        accessTime_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object hasPlate_ = "";
      /**
       * <pre>
       *有无车牌
       * </pre>
       *
       * <code>string hasPlate = 72;</code>
       * @return The hasPlate.
       */
      public java.lang.String getHasPlate() {
        java.lang.Object ref = hasPlate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hasPlate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *有无车牌
       * </pre>
       *
       * <code>string hasPlate = 72;</code>
       * @return The bytes for hasPlate.
       */
      public com.google.protobuf.ByteString
          getHasPlateBytes() {
        java.lang.Object ref = hasPlate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hasPlate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *有无车牌
       * </pre>
       *
       * <code>string hasPlate = 72;</code>
       * @param value The hasPlate to set.
       * @return This builder for chaining.
       */
      public Builder setHasPlate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hasPlate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *有无车牌
       * </pre>
       *
       * <code>string hasPlate = 72;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasPlate() {
        
        hasPlate_ = getDefaultInstance().getHasPlate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *有无车牌
       * </pre>
       *
       * <code>string hasPlate = 72;</code>
       * @param value The bytes for hasPlate to set.
       * @return This builder for chaining.
       */
      public Builder setHasPlateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hasPlate_ = value;
        onChanged();
        return this;
      }

      private int structureSource_ ;
      /**
       * <pre>
       *二次结构化来源
       * </pre>
       *
       * <code>int32 structureSource = 73;</code>
       * @return The structureSource.
       */
      public int getStructureSource() {
        return structureSource_;
      }
      /**
       * <pre>
       *二次结构化来源
       * </pre>
       *
       * <code>int32 structureSource = 73;</code>
       * @param value The structureSource to set.
       * @return This builder for chaining.
       */
      public Builder setStructureSource(int value) {
        
        structureSource_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *二次结构化来源
       * </pre>
       *
       * <code>int32 structureSource = 73;</code>
       * @return This builder for chaining.
       */
      public Builder clearStructureSource() {
        
        structureSource_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object tollgateId_ = "";
      /**
       * <pre>
       *卡口ID
       * </pre>
       *
       * <code>string tollgateId = 74;</code>
       * @return The tollgateId.
       */
      public java.lang.String getTollgateId() {
        java.lang.Object ref = tollgateId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tollgateId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *卡口ID
       * </pre>
       *
       * <code>string tollgateId = 74;</code>
       * @return The bytes for tollgateId.
       */
      public com.google.protobuf.ByteString
          getTollgateIdBytes() {
        java.lang.Object ref = tollgateId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tollgateId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *卡口ID
       * </pre>
       *
       * <code>string tollgateId = 74;</code>
       * @param value The tollgateId to set.
       * @return This builder for chaining.
       */
      public Builder setTollgateId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tollgateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *卡口ID
       * </pre>
       *
       * <code>string tollgateId = 74;</code>
       * @return This builder for chaining.
       */
      public Builder clearTollgateId() {
        
        tollgateId_ = getDefaultInstance().getTollgateId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *卡口ID
       * </pre>
       *
       * <code>string tollgateId = 74;</code>
       * @param value The bytes for tollgateId to set.
       * @return This builder for chaining.
       */
      public Builder setTollgateIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tollgateId_ = value;
        onChanged();
        return this;
      }

      private int laneNO_ ;
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>int32 laneNO = 75;</code>
       * @return The laneNO.
       */
      public int getLaneNO() {
        return laneNO_;
      }
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>int32 laneNO = 75;</code>
       * @param value The laneNO to set.
       * @return This builder for chaining.
       */
      public Builder setLaneNO(int value) {
        
        laneNO_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>int32 laneNO = 75;</code>
       * @return This builder for chaining.
       */
      public Builder clearLaneNO() {
        
        laneNO_ = 0;
        onChanged();
        return this;
      }

      private double wholeConfidence_ ;
      /**
       * <pre>
       *整体置信度
       * </pre>
       *
       * <code>double WholeConfidence = 76;</code>
       * @return The wholeConfidence.
       */
      public double getWholeConfidence() {
        return wholeConfidence_;
      }
      /**
       * <pre>
       *整体置信度
       * </pre>
       *
       * <code>double WholeConfidence = 76;</code>
       * @param value The wholeConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setWholeConfidence(double value) {
        
        wholeConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *整体置信度
       * </pre>
       *
       * <code>double WholeConfidence = 76;</code>
       * @return This builder for chaining.
       */
      public Builder clearWholeConfidence() {
        
        wholeConfidence_ = 0D;
        onChanged();
        return this;
      }

      private double driverPhoneConfidence_ ;
      /**
       * <pre>
       *主驾开车打电话置信度
       * </pre>
       *
       * <code>double DriverPhoneConfidence = 77;</code>
       * @return The driverPhoneConfidence.
       */
      public double getDriverPhoneConfidence() {
        return driverPhoneConfidence_;
      }
      /**
       * <pre>
       *主驾开车打电话置信度
       * </pre>
       *
       * <code>double DriverPhoneConfidence = 77;</code>
       * @param value The driverPhoneConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setDriverPhoneConfidence(double value) {
        
        driverPhoneConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *主驾开车打电话置信度
       * </pre>
       *
       * <code>double DriverPhoneConfidence = 77;</code>
       * @return This builder for chaining.
       */
      public Builder clearDriverPhoneConfidence() {
        
        driverPhoneConfidence_ = 0D;
        onChanged();
        return this;
      }

      private double deputyDriverPhoneConfidence_ ;
      /**
       * <pre>
       *副驾开车打电话置信度
       * </pre>
       *
       * <code>double DeputyDriverPhoneConfidence = 78;</code>
       * @return The deputyDriverPhoneConfidence.
       */
      public double getDeputyDriverPhoneConfidence() {
        return deputyDriverPhoneConfidence_;
      }
      /**
       * <pre>
       *副驾开车打电话置信度
       * </pre>
       *
       * <code>double DeputyDriverPhoneConfidence = 78;</code>
       * @param value The deputyDriverPhoneConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setDeputyDriverPhoneConfidence(double value) {
        
        deputyDriverPhoneConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *副驾开车打电话置信度
       * </pre>
       *
       * <code>double DeputyDriverPhoneConfidence = 78;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeputyDriverPhoneConfidence() {
        
        deputyDriverPhoneConfidence_ = 0D;
        onChanged();
        return this;
      }

      private double driverSeatBeltConfidence_ ;
      /**
       * <pre>
       *副驾安全带置信度
       * </pre>
       *
       * <code>double DriverSeatBeltConfidence = 79;</code>
       * @return The driverSeatBeltConfidence.
       */
      public double getDriverSeatBeltConfidence() {
        return driverSeatBeltConfidence_;
      }
      /**
       * <pre>
       *副驾安全带置信度
       * </pre>
       *
       * <code>double DriverSeatBeltConfidence = 79;</code>
       * @param value The driverSeatBeltConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setDriverSeatBeltConfidence(double value) {
        
        driverSeatBeltConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *副驾安全带置信度
       * </pre>
       *
       * <code>double DriverSeatBeltConfidence = 79;</code>
       * @return This builder for chaining.
       */
      public Builder clearDriverSeatBeltConfidence() {
        
        driverSeatBeltConfidence_ = 0D;
        onChanged();
        return this;
      }

      private double deputyDriverSeatBeltConfidence_ ;
      /**
       * <pre>
       *主驾安全带置信度
       * </pre>
       *
       * <code>double DeputyDriverSeatBeltConfidence = 80;</code>
       * @return The deputyDriverSeatBeltConfidence.
       */
      public double getDeputyDriverSeatBeltConfidence() {
        return deputyDriverSeatBeltConfidence_;
      }
      /**
       * <pre>
       *主驾安全带置信度
       * </pre>
       *
       * <code>double DeputyDriverSeatBeltConfidence = 80;</code>
       * @param value The deputyDriverSeatBeltConfidence to set.
       * @return This builder for chaining.
       */
      public Builder setDeputyDriverSeatBeltConfidence(double value) {
        
        deputyDriverSeatBeltConfidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *主驾安全带置信度
       * </pre>
       *
       * <code>double DeputyDriverSeatBeltConfidence = 80;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeputyDriverSeatBeltConfidence() {
        
        deputyDriverSeatBeltConfidence_ = 0D;
        onChanged();
        return this;
      }

      private int roofItems_ ;
      /**
       * <pre>
       *车顶物件
       * </pre>
       *
       * <code>int32 roofItems = 81;</code>
       * @return The roofItems.
       */
      public int getRoofItems() {
        return roofItems_;
      }
      /**
       * <pre>
       *车顶物件
       * </pre>
       *
       * <code>int32 roofItems = 81;</code>
       * @param value The roofItems to set.
       * @return This builder for chaining.
       */
      public Builder setRoofItems(int value) {
        
        roofItems_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车顶物件
       * </pre>
       *
       * <code>int32 roofItems = 81;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoofItems() {
        
        roofItems_ = 0;
        onChanged();
        return this;
      }

      private int plateOcclusion_ ;
      /**
       * <pre>
       *车牌遮挡
       * </pre>
       *
       * <code>int32 plateOcclusion = 82;</code>
       * @return The plateOcclusion.
       */
      public int getPlateOcclusion() {
        return plateOcclusion_;
      }
      /**
       * <pre>
       *车牌遮挡
       * </pre>
       *
       * <code>int32 plateOcclusion = 82;</code>
       * @param value The plateOcclusion to set.
       * @return This builder for chaining.
       */
      public Builder setPlateOcclusion(int value) {
        
        plateOcclusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌遮挡
       * </pre>
       *
       * <code>int32 plateOcclusion = 82;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlateOcclusion() {
        
        plateOcclusion_ = 0;
        onChanged();
        return this;
      }

      private int facialOcclusion_ ;
      /**
       * <pre>
       *面部遮挡
       * </pre>
       *
       * <code>int32 facialOcclusion = 83;</code>
       * @return The facialOcclusion.
       */
      public int getFacialOcclusion() {
        return facialOcclusion_;
      }
      /**
       * <pre>
       *面部遮挡
       * </pre>
       *
       * <code>int32 facialOcclusion = 83;</code>
       * @param value The facialOcclusion to set.
       * @return This builder for chaining.
       */
      public Builder setFacialOcclusion(int value) {
        
        facialOcclusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *面部遮挡
       * </pre>
       *
       * <code>int32 facialOcclusion = 83;</code>
       * @return This builder for chaining.
       */
      public Builder clearFacialOcclusion() {
        
        facialOcclusion_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ext_ = "";
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>string Ext = 84;</code>
       * @return The ext.
       */
      public java.lang.String getExt() {
        java.lang.Object ref = ext_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ext_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>string Ext = 84;</code>
       * @return The bytes for ext.
       */
      public com.google.protobuf.ByteString
          getExtBytes() {
        java.lang.Object ref = ext_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ext_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>string Ext = 84;</code>
       * @param value The ext to set.
       * @return This builder for chaining.
       */
      public Builder setExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ext_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>string Ext = 84;</code>
       * @return This builder for chaining.
       */
      public Builder clearExt() {
        
        ext_ = getDefaultInstance().getExt();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>string Ext = 84;</code>
       * @param value The bytes for ext to set.
       * @return This builder for chaining.
       */
      public Builder setExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ext_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object relatedType_ = "";
      /**
       * <pre>
       *关联对象类型
       * </pre>
       *
       * <code>string relatedType = 85;</code>
       * @return The relatedType.
       */
      public java.lang.String getRelatedType() {
        java.lang.Object ref = relatedType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          relatedType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *关联对象类型
       * </pre>
       *
       * <code>string relatedType = 85;</code>
       * @return The bytes for relatedType.
       */
      public com.google.protobuf.ByteString
          getRelatedTypeBytes() {
        java.lang.Object ref = relatedType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          relatedType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *关联对象类型
       * </pre>
       *
       * <code>string relatedType = 85;</code>
       * @param value The relatedType to set.
       * @return This builder for chaining.
       */
      public Builder setRelatedType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        relatedType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *关联对象类型
       * </pre>
       *
       * <code>string relatedType = 85;</code>
       * @return This builder for chaining.
       */
      public Builder clearRelatedType() {
        
        relatedType_ = getDefaultInstance().getRelatedType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *关联对象类型
       * </pre>
       *
       * <code>string relatedType = 85;</code>
       * @param value The bytes for relatedType to set.
       * @return This builder for chaining.
       */
      public Builder setRelatedTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        relatedType_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo> relatedList_ =
        java.util.Collections.emptyList();
      private void ensureRelatedListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          relatedList_ = new java.util.ArrayList<com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo>(relatedList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfoOrBuilder> relatedListBuilder_;

      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public java.util.List<com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo> getRelatedListList() {
        if (relatedListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(relatedList_);
        } else {
          return relatedListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public int getRelatedListCount() {
        if (relatedListBuilder_ == null) {
          return relatedList_.size();
        } else {
          return relatedListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo getRelatedList(int index) {
        if (relatedListBuilder_ == null) {
          return relatedList_.get(index);
        } else {
          return relatedListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public Builder setRelatedList(
          int index, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo value) {
        if (relatedListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRelatedListIsMutable();
          relatedList_.set(index, value);
          onChanged();
        } else {
          relatedListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public Builder setRelatedList(
          int index, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder builderForValue) {
        if (relatedListBuilder_ == null) {
          ensureRelatedListIsMutable();
          relatedList_.set(index, builderForValue.build());
          onChanged();
        } else {
          relatedListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public Builder addRelatedList(com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo value) {
        if (relatedListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRelatedListIsMutable();
          relatedList_.add(value);
          onChanged();
        } else {
          relatedListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public Builder addRelatedList(
          int index, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo value) {
        if (relatedListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRelatedListIsMutable();
          relatedList_.add(index, value);
          onChanged();
        } else {
          relatedListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public Builder addRelatedList(
          com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder builderForValue) {
        if (relatedListBuilder_ == null) {
          ensureRelatedListIsMutable();
          relatedList_.add(builderForValue.build());
          onChanged();
        } else {
          relatedListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public Builder addRelatedList(
          int index, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder builderForValue) {
        if (relatedListBuilder_ == null) {
          ensureRelatedListIsMutable();
          relatedList_.add(index, builderForValue.build());
          onChanged();
        } else {
          relatedListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public Builder addAllRelatedList(
          java.lang.Iterable<? extends com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo> values) {
        if (relatedListBuilder_ == null) {
          ensureRelatedListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, relatedList_);
          onChanged();
        } else {
          relatedListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public Builder clearRelatedList() {
        if (relatedListBuilder_ == null) {
          relatedList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          relatedListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public Builder removeRelatedList(int index) {
        if (relatedListBuilder_ == null) {
          ensureRelatedListIsMutable();
          relatedList_.remove(index);
          onChanged();
        } else {
          relatedListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder getRelatedListBuilder(
          int index) {
        return getRelatedListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfoOrBuilder getRelatedListOrBuilder(
          int index) {
        if (relatedListBuilder_ == null) {
          return relatedList_.get(index);  } else {
          return relatedListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public java.util.List<? extends com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfoOrBuilder> 
           getRelatedListOrBuilderList() {
        if (relatedListBuilder_ != null) {
          return relatedListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(relatedList_);
        }
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder addRelatedListBuilder() {
        return getRelatedListFieldBuilder().addBuilder(
            com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder addRelatedListBuilder(
          int index) {
        return getRelatedListFieldBuilder().addBuilder(
            index, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *关联对象信息
       * </pre>
       *
       * <code>repeated .com.dtc.analytic.online.protobuf.RelatedInfo relatedList = 86;</code>
       */
      public java.util.List<com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder> 
           getRelatedListBuilderList() {
        return getRelatedListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfoOrBuilder> 
          getRelatedListFieldBuilder() {
        if (relatedListBuilder_ == null) {
          relatedListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfo.Builder, com.dtc.analytic.online.protobuf.RelatedInfoObjProto.RelatedInfoOrBuilder>(
                  relatedList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          relatedList_ = null;
        }
        return relatedListBuilder_;
      }

      private double longitude_ ;
      /**
       * <pre>
       *设备经度【固定点位设备可选填，移动设备必填】
       * </pre>
       *
       * <code>double Longitude = 87;</code>
       * @return The longitude.
       */
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <pre>
       *设备经度【固定点位设备可选填，移动设备必填】
       * </pre>
       *
       * <code>double Longitude = 87;</code>
       * @param value The longitude to set.
       * @return This builder for chaining.
       */
      public Builder setLongitude(double value) {
        
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备经度【固定点位设备可选填，移动设备必填】
       * </pre>
       *
       * <code>double Longitude = 87;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitude() {
        
        longitude_ = 0D;
        onChanged();
        return this;
      }

      private double latitude_ ;
      /**
       * <pre>
       *设备纬度【固定点位设备可选填，移动设备必填】
       * </pre>
       *
       * <code>double Latitude = 88;</code>
       * @return The latitude.
       */
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <pre>
       *设备纬度【固定点位设备可选填，移动设备必填】
       * </pre>
       *
       * <code>double Latitude = 88;</code>
       * @param value The latitude to set.
       * @return This builder for chaining.
       */
      public Builder setLatitude(double value) {
        
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备纬度【固定点位设备可选填，移动设备必填】
       * </pre>
       *
       * <code>double Latitude = 88;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitude() {
        
        latitude_ = 0D;
        onChanged();
        return this;
      }

      private int dataMarks_ ;
      /**
       * <pre>
       *标记
       * </pre>
       *
       * <code>int32 dataMarks = 89;</code>
       * @return The dataMarks.
       */
      public int getDataMarks() {
        return dataMarks_;
      }
      /**
       * <pre>
       *标记
       * </pre>
       *
       * <code>int32 dataMarks = 89;</code>
       * @param value The dataMarks to set.
       * @return This builder for chaining.
       */
      public Builder setDataMarks(int value) {
        
        dataMarks_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *标记
       * </pre>
       *
       * <code>int32 dataMarks = 89;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataMarks() {
        
        dataMarks_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object traceInfo_ = "";
      /**
       * <pre>
       *非机动车轨迹
       * </pre>
       *
       * <code>string traceInfo = 90;</code>
       * @return The traceInfo.
       */
      public java.lang.String getTraceInfo() {
        java.lang.Object ref = traceInfo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          traceInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *非机动车轨迹
       * </pre>
       *
       * <code>string traceInfo = 90;</code>
       * @return The bytes for traceInfo.
       */
      public com.google.protobuf.ByteString
          getTraceInfoBytes() {
        java.lang.Object ref = traceInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          traceInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *非机动车轨迹
       * </pre>
       *
       * <code>string traceInfo = 90;</code>
       * @param value The traceInfo to set.
       * @return This builder for chaining.
       */
      public Builder setTraceInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        traceInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *非机动车轨迹
       * </pre>
       *
       * <code>string traceInfo = 90;</code>
       * @return This builder for chaining.
       */
      public Builder clearTraceInfo() {
        
        traceInfo_ = getDefaultInstance().getTraceInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *非机动车轨迹
       * </pre>
       *
       * <code>string traceInfo = 90;</code>
       * @param value The bytes for traceInfo to set.
       * @return This builder for chaining.
       */
      public Builder setTraceInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        traceInfo_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> extMaps_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetExtMaps() {
        if (extMaps_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ExtMapsDefaultEntryHolder.defaultEntry);
        }
        return extMaps_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableExtMaps() {
        onChanged();;
        if (extMaps_ == null) {
          extMaps_ = com.google.protobuf.MapField.newMapField(
              ExtMapsDefaultEntryHolder.defaultEntry);
        }
        if (!extMaps_.isMutable()) {
          extMaps_ = extMaps_.copy();
        }
        return extMaps_;
      }

      public int getExtMapsCount() {
        return internalGetExtMaps().getMap().size();
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>map&lt;string, string&gt; extMaps = 91;</code>
       */

      public boolean containsExtMaps(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetExtMaps().getMap().containsKey(key);
      }
      /**
       * Use {@link #getExtMapsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getExtMaps() {
        return getExtMapsMap();
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>map&lt;string, string&gt; extMaps = 91;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getExtMapsMap() {
        return internalGetExtMaps().getMap();
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>map&lt;string, string&gt; extMaps = 91;</code>
       */

      public java.lang.String getExtMapsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetExtMaps().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>map&lt;string, string&gt; extMaps = 91;</code>
       */

      public java.lang.String getExtMapsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetExtMaps().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearExtMaps() {
        internalGetMutableExtMaps().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>map&lt;string, string&gt; extMaps = 91;</code>
       */

      public Builder removeExtMaps(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableExtMaps().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableExtMaps() {
        return internalGetMutableExtMaps().getMutableMap();
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>map&lt;string, string&gt; extMaps = 91;</code>
       */
      public Builder putExtMaps(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableExtMaps().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *扩展字段
       * </pre>
       *
       * <code>map&lt;string, string&gt; extMaps = 91;</code>
       */

      public Builder putAllExtMaps(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableExtMaps().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.dtc.analytic.online.protobuf.MotorVehicle)
    }

    // @@protoc_insertion_point(class_scope:com.dtc.analytic.online.protobuf.MotorVehicle)
    private static final com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle();
    }

    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MotorVehicle>
        PARSER = new com.google.protobuf.AbstractParser<MotorVehicle>() {
      @java.lang.Override
      public MotorVehicle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MotorVehicle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MotorVehicle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MotorVehicle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MotorVehicleListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.dtc.analytic.online.protobuf.MotorVehicleList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    java.util.List<com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle> 
        getVehiclelistList();
    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle getVehiclelist(int index);
    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    int getVehiclelistCount();
    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    java.util.List<? extends com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder> 
        getVehiclelistOrBuilderList();
    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder getVehiclelistOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 机动车对象列表
   * </pre>
   *
   * Protobuf type {@code com.dtc.analytic.online.protobuf.MotorVehicleList}
   */
  public  static final class MotorVehicleList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.dtc.analytic.online.protobuf.MotorVehicleList)
      MotorVehicleListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MotorVehicleList.newBuilder() to construct.
    private MotorVehicleList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MotorVehicleList() {
      vehiclelist_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MotorVehicleList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MotorVehicleList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                vehiclelist_ = new java.util.ArrayList<com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle>();
                mutable_bitField0_ |= 0x00000001;
              }
              vehiclelist_.add(
                  input.readMessage(com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          vehiclelist_ = java.util.Collections.unmodifiableList(vehiclelist_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList.class, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList.Builder.class);
    }

    public static final int VEHICLELIST_FIELD_NUMBER = 1;
    private java.util.List<com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle> vehiclelist_;
    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    public java.util.List<com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle> getVehiclelistList() {
      return vehiclelist_;
    }
    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    public java.util.List<? extends com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder> 
        getVehiclelistOrBuilderList() {
      return vehiclelist_;
    }
    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    public int getVehiclelistCount() {
      return vehiclelist_.size();
    }
    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle getVehiclelist(int index) {
      return vehiclelist_.get(index);
    }
    /**
     * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
     */
    public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder getVehiclelistOrBuilder(
        int index) {
      return vehiclelist_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < vehiclelist_.size(); i++) {
        output.writeMessage(1, vehiclelist_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < vehiclelist_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vehiclelist_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList)) {
        return super.equals(obj);
      }
      com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList other = (com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList) obj;

      if (!getVehiclelistList()
          .equals(other.getVehiclelistList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVehiclelistCount() > 0) {
        hash = (37 * hash) + VEHICLELIST_FIELD_NUMBER;
        hash = (53 * hash) + getVehiclelistList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 机动车对象列表
     * </pre>
     *
     * Protobuf type {@code com.dtc.analytic.online.protobuf.MotorVehicleList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.dtc.analytic.online.protobuf.MotorVehicleList)
        com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList.class, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList.Builder.class);
      }

      // Construct using com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVehiclelistFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (vehiclelistBuilder_ == null) {
          vehiclelist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          vehiclelistBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_descriptor;
      }

      @java.lang.Override
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList getDefaultInstanceForType() {
        return com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList.getDefaultInstance();
      }

      @java.lang.Override
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList build() {
        com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList buildPartial() {
        com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList result = new com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList(this);
        int from_bitField0_ = bitField0_;
        if (vehiclelistBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            vehiclelist_ = java.util.Collections.unmodifiableList(vehiclelist_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vehiclelist_ = vehiclelist_;
        } else {
          result.vehiclelist_ = vehiclelistBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList) {
          return mergeFrom((com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList other) {
        if (other == com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList.getDefaultInstance()) return this;
        if (vehiclelistBuilder_ == null) {
          if (!other.vehiclelist_.isEmpty()) {
            if (vehiclelist_.isEmpty()) {
              vehiclelist_ = other.vehiclelist_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVehiclelistIsMutable();
              vehiclelist_.addAll(other.vehiclelist_);
            }
            onChanged();
          }
        } else {
          if (!other.vehiclelist_.isEmpty()) {
            if (vehiclelistBuilder_.isEmpty()) {
              vehiclelistBuilder_.dispose();
              vehiclelistBuilder_ = null;
              vehiclelist_ = other.vehiclelist_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vehiclelistBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVehiclelistFieldBuilder() : null;
            } else {
              vehiclelistBuilder_.addAllMessages(other.vehiclelist_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle> vehiclelist_ =
        java.util.Collections.emptyList();
      private void ensureVehiclelistIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          vehiclelist_ = new java.util.ArrayList<com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle>(vehiclelist_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder> vehiclelistBuilder_;

      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public java.util.List<com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle> getVehiclelistList() {
        if (vehiclelistBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vehiclelist_);
        } else {
          return vehiclelistBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public int getVehiclelistCount() {
        if (vehiclelistBuilder_ == null) {
          return vehiclelist_.size();
        } else {
          return vehiclelistBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle getVehiclelist(int index) {
        if (vehiclelistBuilder_ == null) {
          return vehiclelist_.get(index);
        } else {
          return vehiclelistBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public Builder setVehiclelist(
          int index, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle value) {
        if (vehiclelistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVehiclelistIsMutable();
          vehiclelist_.set(index, value);
          onChanged();
        } else {
          vehiclelistBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public Builder setVehiclelist(
          int index, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder builderForValue) {
        if (vehiclelistBuilder_ == null) {
          ensureVehiclelistIsMutable();
          vehiclelist_.set(index, builderForValue.build());
          onChanged();
        } else {
          vehiclelistBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public Builder addVehiclelist(com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle value) {
        if (vehiclelistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVehiclelistIsMutable();
          vehiclelist_.add(value);
          onChanged();
        } else {
          vehiclelistBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public Builder addVehiclelist(
          int index, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle value) {
        if (vehiclelistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVehiclelistIsMutable();
          vehiclelist_.add(index, value);
          onChanged();
        } else {
          vehiclelistBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public Builder addVehiclelist(
          com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder builderForValue) {
        if (vehiclelistBuilder_ == null) {
          ensureVehiclelistIsMutable();
          vehiclelist_.add(builderForValue.build());
          onChanged();
        } else {
          vehiclelistBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public Builder addVehiclelist(
          int index, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder builderForValue) {
        if (vehiclelistBuilder_ == null) {
          ensureVehiclelistIsMutable();
          vehiclelist_.add(index, builderForValue.build());
          onChanged();
        } else {
          vehiclelistBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public Builder addAllVehiclelist(
          java.lang.Iterable<? extends com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle> values) {
        if (vehiclelistBuilder_ == null) {
          ensureVehiclelistIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vehiclelist_);
          onChanged();
        } else {
          vehiclelistBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public Builder clearVehiclelist() {
        if (vehiclelistBuilder_ == null) {
          vehiclelist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vehiclelistBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public Builder removeVehiclelist(int index) {
        if (vehiclelistBuilder_ == null) {
          ensureVehiclelistIsMutable();
          vehiclelist_.remove(index);
          onChanged();
        } else {
          vehiclelistBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder getVehiclelistBuilder(
          int index) {
        return getVehiclelistFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder getVehiclelistOrBuilder(
          int index) {
        if (vehiclelistBuilder_ == null) {
          return vehiclelist_.get(index);  } else {
          return vehiclelistBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public java.util.List<? extends com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder> 
           getVehiclelistOrBuilderList() {
        if (vehiclelistBuilder_ != null) {
          return vehiclelistBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vehiclelist_);
        }
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder addVehiclelistBuilder() {
        return getVehiclelistFieldBuilder().addBuilder(
            com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.getDefaultInstance());
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder addVehiclelistBuilder(
          int index) {
        return getVehiclelistFieldBuilder().addBuilder(
            index, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.getDefaultInstance());
      }
      /**
       * <code>repeated .com.dtc.analytic.online.protobuf.MotorVehicle vehiclelist = 1;</code>
       */
      public java.util.List<com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder> 
           getVehiclelistBuilderList() {
        return getVehiclelistFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder> 
          getVehiclelistFieldBuilder() {
        if (vehiclelistBuilder_ == null) {
          vehiclelistBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicle.Builder, com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleOrBuilder>(
                  vehiclelist_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          vehiclelist_ = null;
        }
        return vehiclelistBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.dtc.analytic.online.protobuf.MotorVehicleList)
    }

    // @@protoc_insertion_point(class_scope:com.dtc.analytic.online.protobuf.MotorVehicleList)
    private static final com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList();
    }

    public static com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MotorVehicleList>
        PARSER = new com.google.protobuf.AbstractParser<MotorVehicleList>() {
      @java.lang.Override
      public MotorVehicleList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MotorVehicleList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MotorVehicleList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MotorVehicleList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dtc.analytic.online.protobuf.MotorVehicleObjProto.MotorVehicleList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_ExtMapsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_ExtMapsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025MotorVehicleObj.proto\022 com.dtc.analyti" +
      "c.online.protobuf\032\025SubImageInfoObj.proto" +
      "\032\024RelatedInfoObj.proto\"\341\021\n\014MotorVehicle\022" +
      "\020\n\010recordId\030\001 \001(\t\022\022\n\nbusinessId\030\002 \001(\t\022\020\n" +
      "\010infoKind\030\003 \001(\005\022\020\n\010sourceId\030\004 \001(\t\022\023\n\013sto" +
      "rageUrl1\030\005 \001(\t\022\020\n\010leftTopX\030\006 \001(\005\022\020\n\010left" +
      "TopY\030\007 \001(\005\022\021\n\trightBtmX\030\010 \001(\005\022\021\n\trightBt" +
      "mY\030\t \001(\005\022\025\n\rplateLeftTopX\030\n \001(\005\022\025\n\rplate" +
      "LeftTopY\030\013 \001(\005\022\026\n\016plateRightBtmX\030\014 \001(\005\022\026" +
      "\n\016plateRightBtmY\030\r \001(\005\022\020\n\010deviceId\030\016 \001(\t" +
      "\022\017\n\007plateNo\030\017 \001(\t\022\031\n\021plateNoConfidence\030\020" +
      " \001(\001\022\022\n\nplateClass\030\021 \001(\t\022\022\n\nplateColor\030\022" +
      " \001(\t\022\025\n\rtrafficStatus\030\023 \001(\t\022\023\n\013vehicleTy" +
      "pe\030\024 \001(\t\022\024\n\014vehicleColor\030\025 \001(\t\022\024\n\014vehicl" +
      "eBrand\030\026 \001(\t\022\036\n\026vehicleBrandConfidence\030\027" +
      " \001(\001\022\027\n\017vehicleSubBrand\030\030 \001(\t\022!\n\031vehicle" +
      "SubBrandConfidence\030\031 \001(\001\022\017\n\007faceNum\030\032 \001(" +
      "\005\022\020\n\010sunVisor\030\033 \001(\005\022\026\n\016seatBeltStatus\030\034 " +
      "\001(\005\022\033\n\023annualInspectionNum\030\035 \001(\005\022\023\n\013pend" +
      "antsNum\030\036 \001(\005\022\024\n\014ornamentsNum\030\037 \001(\005\022\023\n\013v" +
      "ehicleYear\030  \001(\t\022\024\n\014tissueBoxNum\030! \001(\005\022\022" +
      "\n\ncallStatus\030\" \001(\005\022\025\n\rviolationType\030# \001(" +
      "\t\022\022\n\ndataSource\030$ \001(\t\022\023\n\013elapsedTime\030% \001" +
      "(\003\022\027\n\017dataInKafkaTime\030& \001(\003\022\021\n\tentryTime" +
      "\030\' \001(\003\022\024\n\014vehicleSpeed\030( \001(\001\022\022\n\nmarkerTy" +
      "pe\030) \001(\005\022\026\n\016vehicleHeadend\030* \001(\005\022\022\n\nshie" +
      "ldFace\030+ \001(\005\022\020\n\010taskType\030, \001(\t\022\022\n\ninfoSo" +
      "urce\030- \001(\t\022\030\n\020algorithmVersion\030. \001(\t\022\027\n\017" +
      "algorithmVendor\030/ \001(\005\022\023\n\013eigenvector\0300 \001" +
      "(\t\022\034\n\024isSecondaryStructure\0301 \001(\005\022\025\n\rstru" +
      "ctureTime\0302 \001(\003\022\024\n\014collectionId\0303 \001(\t\022\026\n" +
      "\016additionalInfo\0304 \001(\t\022\016\n\006source\0305 \001(\005\022\022\n" +
      "\ndrivewayNo\0306 \001(\t\022\027\n\017vehicleLocation\0307 \001" +
      "(\t\022\025\n\rplateLocation\0308 \001(\t\022\031\n\021mainVisorPo" +
      "sition\0309 \001(\t\022\031\n\021viceVisorPosition\030: \001(\t\022" +
      "\034\n\024mainSeatBeltPosition\030; \001(\t\022\034\n\024viceSea" +
      "tBeltPosition\030< \001(\t\022\023\n\013drivingCall\030= \001(\t" +
      "\022 \n\030annualInspectionPosition\030> \001(\t\022\027\n\017pe" +
      "ndantLocation\030? \001(\t\022\031\n\021tissueBoxLocation" +
      "\030@ \001(\t\022\023\n\013platePicUrl\030A \001(\t\022\025\n\rmoveDirec" +
      "tion\030B \001(\005\022\022\n\nspecialCar\030C \001(\005\022\021\n\tmoveSp" +
      "eed\030D \001(\005\022D\n\014subImageList\030E \003(\0132..com.dt" +
      "c.analytic.online.protobuf.SubImageInfo\022" +
      "\024\n\014structureNum\030F \001(\005\022\022\n\naccessTime\030G \001(" +
      "\003\022\020\n\010hasPlate\030H \001(\t\022\027\n\017structureSource\030I" +
      " \001(\005\022\022\n\ntollgateId\030J \001(\t\022\016\n\006laneNO\030K \001(\005" +
      "\022\027\n\017WholeConfidence\030L \001(\001\022\035\n\025DriverPhone" +
      "Confidence\030M \001(\001\022#\n\033DeputyDriverPhoneCon" +
      "fidence\030N \001(\001\022 \n\030DriverSeatBeltConfidenc" +
      "e\030O \001(\001\022&\n\036DeputyDriverSeatBeltConfidenc" +
      "e\030P \001(\001\022\021\n\troofItems\030Q \001(\005\022\026\n\016plateOcclu" +
      "sion\030R \001(\005\022\027\n\017facialOcclusion\030S \001(\005\022\013\n\003E" +
      "xt\030T \001(\t\022\023\n\013relatedType\030U \001(\t\022B\n\013related" +
      "List\030V \003(\0132-.com.dtc.analytic.online.pro" +
      "tobuf.RelatedInfo\022\021\n\tLongitude\030W \001(\001\022\020\n\010" +
      "Latitude\030X \001(\001\022\021\n\tdataMarks\030Y \001(\005\022\021\n\ttra" +
      "ceInfo\030Z \001(\t\022L\n\007extMaps\030[ \003(\0132;.com.dtc." +
      "analytic.online.protobuf.MotorVehicle.Ex" +
      "tMapsEntry\032.\n\014ExtMapsEntry\022\013\n\003key\030\001 \001(\t\022" +
      "\r\n\005value\030\002 \001(\t:\0028\001\"W\n\020MotorVehicleList\022C" +
      "\n\013vehiclelist\030\001 \003(\0132..com.dtc.analytic.o" +
      "nline.protobuf.MotorVehicleB\026B\024MotorVehi" +
      "cleObjProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.dtc.analytic.online.protobuf.SubImageInfoObjProto.getDescriptor(),
          com.dtc.analytic.online.protobuf.RelatedInfoObjProto.getDescriptor(),
        });
    internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_descriptor,
        new java.lang.String[] { "RecordId", "BusinessId", "InfoKind", "SourceId", "StorageUrl1", "LeftTopX", "LeftTopY", "RightBtmX", "RightBtmY", "PlateLeftTopX", "PlateLeftTopY", "PlateRightBtmX", "PlateRightBtmY", "DeviceId", "PlateNo", "PlateNoConfidence", "PlateClass", "PlateColor", "TrafficStatus", "VehicleType", "VehicleColor", "VehicleBrand", "VehicleBrandConfidence", "VehicleSubBrand", "VehicleSubBrandConfidence", "FaceNum", "SunVisor", "SeatBeltStatus", "AnnualInspectionNum", "PendantsNum", "OrnamentsNum", "VehicleYear", "TissueBoxNum", "CallStatus", "ViolationType", "DataSource", "ElapsedTime", "DataInKafkaTime", "EntryTime", "VehicleSpeed", "MarkerType", "VehicleHeadend", "ShieldFace", "TaskType", "InfoSource", "AlgorithmVersion", "AlgorithmVendor", "Eigenvector", "IsSecondaryStructure", "StructureTime", "CollectionId", "AdditionalInfo", "Source", "DrivewayNo", "VehicleLocation", "PlateLocation", "MainVisorPosition", "ViceVisorPosition", "MainSeatBeltPosition", "ViceSeatBeltPosition", "DrivingCall", "AnnualInspectionPosition", "PendantLocation", "TissueBoxLocation", "PlatePicUrl", "MoveDirection", "SpecialCar", "MoveSpeed", "SubImageList", "StructureNum", "AccessTime", "HasPlate", "StructureSource", "TollgateId", "LaneNO", "WholeConfidence", "DriverPhoneConfidence", "DeputyDriverPhoneConfidence", "DriverSeatBeltConfidence", "DeputyDriverSeatBeltConfidence", "RoofItems", "PlateOcclusion", "FacialOcclusion", "Ext", "RelatedType", "RelatedList", "Longitude", "Latitude", "DataMarks", "TraceInfo", "ExtMaps", });
    internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_ExtMapsEntry_descriptor =
      internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_descriptor.getNestedTypes().get(0);
    internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_ExtMapsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_dtc_analytic_online_protobuf_MotorVehicle_ExtMapsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_dtc_analytic_online_protobuf_MotorVehicleList_descriptor,
        new java.lang.String[] { "Vehiclelist", });
    com.dtc.analytic.online.protobuf.SubImageInfoObjProto.getDescriptor();
    com.dtc.analytic.online.protobuf.RelatedInfoObjProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
